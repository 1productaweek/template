type AggregateApp {
  count: Int!
}

type AggregateAppDeployment {
  count: Int!
}

type AggregateAppSource {
  count: Int!
}

type AggregateAppSourceEvent {
  count: Int!
}

type AggregateArtifact {
  count: Int!
}

type AggregateArtifactRaw {
  count: Int!
}

type AggregateAuth {
  count: Int!
}

type AggregateDeployment {
  count: Int!
}

type AggregateEvent {
  count: Int!
}

type AggregateHost {
  count: Int!
}

type AggregateImage {
  count: Int!
}

type AggregateImageDigest {
  count: Int!
}

type AggregateImageTag {
  count: Int!
}

type AggregateInstance {
  count: Int!
}

type AggregateInvoice {
  count: Int!
}

type AggregateInvoiceCharge {
  count: Int!
}

type AggregateInvoiceItem {
  count: Int!
}

type AggregatePaymentCard {
  count: Int!
}

type AggregatePlan {
  count: Int!
}

type AggregateProvider {
  count: Int!
}

type AggregateRole {
  count: Int!
}

type AggregateService {
  count: Int!
}

type AggregateServiceTag {
  count: Int!
}

type AggregateSpace {
  count: Int!
}

type AggregateToken {
  count: Int!
}

type AggregateTrigger {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type AggregateVariable {
  count: Int!
}

type App {
  id: ID!
  name: String!
  displayName: String!
  status: AppStatus
  version: String
  icon: String
  tagline: String
  desc: String
  domain: String
  premium: Boolean
  live: AppDeployment
  deployments(where: AppDeploymentWhereInput, orderBy: AppDeploymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AppDeployment!]
  config: Json
  sources(where: AppSourceWhereInput, orderBy: AppSourceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AppSource!]
  events(where: AppSourceEventWhereInput, orderBy: AppSourceEventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AppSourceEvent!]
  createdAt: DateTime!
  updatedAt: DateTime!
  owner: Space
}

type AppConnection {
  pageInfo: PageInfo!
  edges: [AppEdge]!
  aggregate: AggregateApp!
}

input AppCreateInput {
  name: String!
  displayName: String!
  status: AppStatus
  version: String
  icon: String
  tagline: String
  desc: String
  domain: String
  premium: Boolean
  live: AppDeploymentCreateOneWithoutLiveInput
  deployments: AppDeploymentCreateManyWithoutAppInput
  config: Json
  sources: AppSourceCreateManyWithoutAppInput
  events: AppSourceEventCreateManyWithoutAppInput
  owner: SpaceCreateOneInput
}

input AppCreateOneInput {
  create: AppCreateInput
  connect: AppWhereUniqueInput
}

input AppCreateOneWithoutDeploymentsInput {
  create: AppCreateWithoutDeploymentsInput
  connect: AppWhereUniqueInput
}

input AppCreateOneWithoutEventsInput {
  create: AppCreateWithoutEventsInput
  connect: AppWhereUniqueInput
}

input AppCreateOneWithoutLiveInput {
  create: AppCreateWithoutLiveInput
  connect: AppWhereUniqueInput
}

input AppCreateOneWithoutSourcesInput {
  create: AppCreateWithoutSourcesInput
  connect: AppWhereUniqueInput
}

input AppCreateWithoutDeploymentsInput {
  name: String!
  displayName: String!
  status: AppStatus
  version: String
  icon: String
  tagline: String
  desc: String
  domain: String
  premium: Boolean
  live: AppDeploymentCreateOneWithoutLiveInput
  config: Json
  sources: AppSourceCreateManyWithoutAppInput
  events: AppSourceEventCreateManyWithoutAppInput
  owner: SpaceCreateOneInput
}

input AppCreateWithoutEventsInput {
  name: String!
  displayName: String!
  status: AppStatus
  version: String
  icon: String
  tagline: String
  desc: String
  domain: String
  premium: Boolean
  live: AppDeploymentCreateOneWithoutLiveInput
  deployments: AppDeploymentCreateManyWithoutAppInput
  config: Json
  sources: AppSourceCreateManyWithoutAppInput
  owner: SpaceCreateOneInput
}

input AppCreateWithoutLiveInput {
  name: String!
  displayName: String!
  status: AppStatus
  version: String
  icon: String
  tagline: String
  desc: String
  domain: String
  premium: Boolean
  deployments: AppDeploymentCreateManyWithoutAppInput
  config: Json
  sources: AppSourceCreateManyWithoutAppInput
  events: AppSourceEventCreateManyWithoutAppInput
  owner: SpaceCreateOneInput
}

input AppCreateWithoutSourcesInput {
  name: String!
  displayName: String!
  status: AppStatus
  version: String
  icon: String
  tagline: String
  desc: String
  domain: String
  premium: Boolean
  live: AppDeploymentCreateOneWithoutLiveInput
  deployments: AppDeploymentCreateManyWithoutAppInput
  config: Json
  events: AppSourceEventCreateManyWithoutAppInput
  owner: SpaceCreateOneInput
}

type AppDeployment {
  id: ID!
  config: Json
  version: String
  live: App
  app: App
}

type AppDeploymentConnection {
  pageInfo: PageInfo!
  edges: [AppDeploymentEdge]!
  aggregate: AggregateAppDeployment!
}

input AppDeploymentCreateInput {
  config: Json
  version: String
  live: AppCreateOneWithoutLiveInput
  app: AppCreateOneWithoutDeploymentsInput
}

input AppDeploymentCreateManyWithoutAppInput {
  create: [AppDeploymentCreateWithoutAppInput!]
  connect: [AppDeploymentWhereUniqueInput!]
}

input AppDeploymentCreateOneWithoutLiveInput {
  create: AppDeploymentCreateWithoutLiveInput
  connect: AppDeploymentWhereUniqueInput
}

input AppDeploymentCreateWithoutAppInput {
  config: Json
  version: String
  live: AppCreateOneWithoutLiveInput
}

input AppDeploymentCreateWithoutLiveInput {
  config: Json
  version: String
  app: AppCreateOneWithoutDeploymentsInput
}

type AppDeploymentEdge {
  node: AppDeployment!
  cursor: String!
}

enum AppDeploymentOrderByInput {
  id_ASC
  id_DESC
  config_ASC
  config_DESC
  version_ASC
  version_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type AppDeploymentPreviousValues {
  id: ID!
  config: Json
  version: String
}

input AppDeploymentScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  version: String
  version_not: String
  version_in: [String!]
  version_not_in: [String!]
  version_lt: String
  version_lte: String
  version_gt: String
  version_gte: String
  version_contains: String
  version_not_contains: String
  version_starts_with: String
  version_not_starts_with: String
  version_ends_with: String
  version_not_ends_with: String
  AND: [AppDeploymentScalarWhereInput!]
  OR: [AppDeploymentScalarWhereInput!]
  NOT: [AppDeploymentScalarWhereInput!]
}

type AppDeploymentSubscriptionPayload {
  mutation: MutationType!
  node: AppDeployment
  updatedFields: [String!]
  previousValues: AppDeploymentPreviousValues
}

input AppDeploymentSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: AppDeploymentWhereInput
  AND: [AppDeploymentSubscriptionWhereInput!]
  OR: [AppDeploymentSubscriptionWhereInput!]
  NOT: [AppDeploymentSubscriptionWhereInput!]
}

input AppDeploymentUpdateInput {
  config: Json
  version: String
  live: AppUpdateOneWithoutLiveInput
  app: AppUpdateOneWithoutDeploymentsInput
}

input AppDeploymentUpdateManyDataInput {
  config: Json
  version: String
}

input AppDeploymentUpdateManyMutationInput {
  config: Json
  version: String
}

input AppDeploymentUpdateManyWithoutAppInput {
  create: [AppDeploymentCreateWithoutAppInput!]
  delete: [AppDeploymentWhereUniqueInput!]
  connect: [AppDeploymentWhereUniqueInput!]
  set: [AppDeploymentWhereUniqueInput!]
  disconnect: [AppDeploymentWhereUniqueInput!]
  update: [AppDeploymentUpdateWithWhereUniqueWithoutAppInput!]
  upsert: [AppDeploymentUpsertWithWhereUniqueWithoutAppInput!]
  deleteMany: [AppDeploymentScalarWhereInput!]
  updateMany: [AppDeploymentUpdateManyWithWhereNestedInput!]
}

input AppDeploymentUpdateManyWithWhereNestedInput {
  where: AppDeploymentScalarWhereInput!
  data: AppDeploymentUpdateManyDataInput!
}

input AppDeploymentUpdateOneWithoutLiveInput {
  create: AppDeploymentCreateWithoutLiveInput
  update: AppDeploymentUpdateWithoutLiveDataInput
  upsert: AppDeploymentUpsertWithoutLiveInput
  delete: Boolean
  disconnect: Boolean
  connect: AppDeploymentWhereUniqueInput
}

input AppDeploymentUpdateWithoutAppDataInput {
  config: Json
  version: String
  live: AppUpdateOneWithoutLiveInput
}

input AppDeploymentUpdateWithoutLiveDataInput {
  config: Json
  version: String
  app: AppUpdateOneWithoutDeploymentsInput
}

input AppDeploymentUpdateWithWhereUniqueWithoutAppInput {
  where: AppDeploymentWhereUniqueInput!
  data: AppDeploymentUpdateWithoutAppDataInput!
}

input AppDeploymentUpsertWithoutLiveInput {
  update: AppDeploymentUpdateWithoutLiveDataInput!
  create: AppDeploymentCreateWithoutLiveInput!
}

input AppDeploymentUpsertWithWhereUniqueWithoutAppInput {
  where: AppDeploymentWhereUniqueInput!
  update: AppDeploymentUpdateWithoutAppDataInput!
  create: AppDeploymentCreateWithoutAppInput!
}

input AppDeploymentWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  version: String
  version_not: String
  version_in: [String!]
  version_not_in: [String!]
  version_lt: String
  version_lte: String
  version_gt: String
  version_gte: String
  version_contains: String
  version_not_contains: String
  version_starts_with: String
  version_not_starts_with: String
  version_ends_with: String
  version_not_ends_with: String
  live: AppWhereInput
  app: AppWhereInput
  AND: [AppDeploymentWhereInput!]
  OR: [AppDeploymentWhereInput!]
  NOT: [AppDeploymentWhereInput!]
}

input AppDeploymentWhereUniqueInput {
  id: ID
}

type AppEdge {
  node: App!
  cursor: String!
}

enum AppOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  displayName_ASC
  displayName_DESC
  status_ASC
  status_DESC
  version_ASC
  version_DESC
  icon_ASC
  icon_DESC
  tagline_ASC
  tagline_DESC
  desc_ASC
  desc_DESC
  domain_ASC
  domain_DESC
  premium_ASC
  premium_DESC
  config_ASC
  config_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type AppPreviousValues {
  id: ID!
  name: String!
  displayName: String!
  status: AppStatus
  version: String
  icon: String
  tagline: String
  desc: String
  domain: String
  premium: Boolean
  config: Json
  createdAt: DateTime!
  updatedAt: DateTime!
}

type AppSource {
  id: ID!
  name: String
  type: AppSourceType
  _unique_name: String!
  app: App!
  events(where: AppSourceEventWhereInput, orderBy: AppSourceEventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AppSourceEvent!]
}

type AppSourceConnection {
  pageInfo: PageInfo!
  edges: [AppSourceEdge]!
  aggregate: AggregateAppSource!
}

input AppSourceCreateInput {
  name: String
  type: AppSourceType
  _unique_name: String!
  app: AppCreateOneWithoutSourcesInput!
  events: AppSourceEventCreateManyWithoutSourceInput
}

input AppSourceCreateManyWithoutAppInput {
  create: [AppSourceCreateWithoutAppInput!]
  connect: [AppSourceWhereUniqueInput!]
}

input AppSourceCreateOneWithoutEventsInput {
  create: AppSourceCreateWithoutEventsInput
  connect: AppSourceWhereUniqueInput
}

input AppSourceCreateWithoutAppInput {
  name: String
  type: AppSourceType
  _unique_name: String!
  events: AppSourceEventCreateManyWithoutSourceInput
}

input AppSourceCreateWithoutEventsInput {
  name: String
  type: AppSourceType
  _unique_name: String!
  app: AppCreateOneWithoutSourcesInput!
}

type AppSourceEdge {
  node: AppSource!
  cursor: String!
}

type AppSourceEvent {
  id: ID!
  name: String!
  type: String
  desc: String
  status: AppSourceEventStatus
  app: App!
  source: AppSource!
  config: Json
  example: Json
}

type AppSourceEventConnection {
  pageInfo: PageInfo!
  edges: [AppSourceEventEdge]!
  aggregate: AggregateAppSourceEvent!
}

input AppSourceEventCreateInput {
  name: String!
  type: String
  desc: String
  status: AppSourceEventStatus
  app: AppCreateOneWithoutEventsInput!
  source: AppSourceCreateOneWithoutEventsInput!
  config: Json
  example: Json
}

input AppSourceEventCreateManyWithoutAppInput {
  create: [AppSourceEventCreateWithoutAppInput!]
  connect: [AppSourceEventWhereUniqueInput!]
}

input AppSourceEventCreateManyWithoutSourceInput {
  create: [AppSourceEventCreateWithoutSourceInput!]
  connect: [AppSourceEventWhereUniqueInput!]
}

input AppSourceEventCreateWithoutAppInput {
  name: String!
  type: String
  desc: String
  status: AppSourceEventStatus
  source: AppSourceCreateOneWithoutEventsInput!
  config: Json
  example: Json
}

input AppSourceEventCreateWithoutSourceInput {
  name: String!
  type: String
  desc: String
  status: AppSourceEventStatus
  app: AppCreateOneWithoutEventsInput!
  config: Json
  example: Json
}

type AppSourceEventEdge {
  node: AppSourceEvent!
  cursor: String!
}

enum AppSourceEventOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  type_ASC
  type_DESC
  desc_ASC
  desc_DESC
  status_ASC
  status_DESC
  config_ASC
  config_DESC
  example_ASC
  example_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type AppSourceEventPreviousValues {
  id: ID!
  name: String!
  type: String
  desc: String
  status: AppSourceEventStatus
  config: Json
  example: Json
}

input AppSourceEventScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  type: String
  type_not: String
  type_in: [String!]
  type_not_in: [String!]
  type_lt: String
  type_lte: String
  type_gt: String
  type_gte: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  desc: String
  desc_not: String
  desc_in: [String!]
  desc_not_in: [String!]
  desc_lt: String
  desc_lte: String
  desc_gt: String
  desc_gte: String
  desc_contains: String
  desc_not_contains: String
  desc_starts_with: String
  desc_not_starts_with: String
  desc_ends_with: String
  desc_not_ends_with: String
  status: AppSourceEventStatus
  status_not: AppSourceEventStatus
  status_in: [AppSourceEventStatus!]
  status_not_in: [AppSourceEventStatus!]
  AND: [AppSourceEventScalarWhereInput!]
  OR: [AppSourceEventScalarWhereInput!]
  NOT: [AppSourceEventScalarWhereInput!]
}

enum AppSourceEventStatus {
  PENDING
  ACTIVE
  DEPRECATED
}

type AppSourceEventSubscriptionPayload {
  mutation: MutationType!
  node: AppSourceEvent
  updatedFields: [String!]
  previousValues: AppSourceEventPreviousValues
}

input AppSourceEventSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: AppSourceEventWhereInput
  AND: [AppSourceEventSubscriptionWhereInput!]
  OR: [AppSourceEventSubscriptionWhereInput!]
  NOT: [AppSourceEventSubscriptionWhereInput!]
}

input AppSourceEventUpdateInput {
  name: String
  type: String
  desc: String
  status: AppSourceEventStatus
  app: AppUpdateOneRequiredWithoutEventsInput
  source: AppSourceUpdateOneRequiredWithoutEventsInput
  config: Json
  example: Json
}

input AppSourceEventUpdateManyDataInput {
  name: String
  type: String
  desc: String
  status: AppSourceEventStatus
  config: Json
  example: Json
}

input AppSourceEventUpdateManyMutationInput {
  name: String
  type: String
  desc: String
  status: AppSourceEventStatus
  config: Json
  example: Json
}

input AppSourceEventUpdateManyWithoutAppInput {
  create: [AppSourceEventCreateWithoutAppInput!]
  delete: [AppSourceEventWhereUniqueInput!]
  connect: [AppSourceEventWhereUniqueInput!]
  set: [AppSourceEventWhereUniqueInput!]
  disconnect: [AppSourceEventWhereUniqueInput!]
  update: [AppSourceEventUpdateWithWhereUniqueWithoutAppInput!]
  upsert: [AppSourceEventUpsertWithWhereUniqueWithoutAppInput!]
  deleteMany: [AppSourceEventScalarWhereInput!]
  updateMany: [AppSourceEventUpdateManyWithWhereNestedInput!]
}

input AppSourceEventUpdateManyWithoutSourceInput {
  create: [AppSourceEventCreateWithoutSourceInput!]
  delete: [AppSourceEventWhereUniqueInput!]
  connect: [AppSourceEventWhereUniqueInput!]
  set: [AppSourceEventWhereUniqueInput!]
  disconnect: [AppSourceEventWhereUniqueInput!]
  update: [AppSourceEventUpdateWithWhereUniqueWithoutSourceInput!]
  upsert: [AppSourceEventUpsertWithWhereUniqueWithoutSourceInput!]
  deleteMany: [AppSourceEventScalarWhereInput!]
  updateMany: [AppSourceEventUpdateManyWithWhereNestedInput!]
}

input AppSourceEventUpdateManyWithWhereNestedInput {
  where: AppSourceEventScalarWhereInput!
  data: AppSourceEventUpdateManyDataInput!
}

input AppSourceEventUpdateWithoutAppDataInput {
  name: String
  type: String
  desc: String
  status: AppSourceEventStatus
  source: AppSourceUpdateOneRequiredWithoutEventsInput
  config: Json
  example: Json
}

input AppSourceEventUpdateWithoutSourceDataInput {
  name: String
  type: String
  desc: String
  status: AppSourceEventStatus
  app: AppUpdateOneRequiredWithoutEventsInput
  config: Json
  example: Json
}

input AppSourceEventUpdateWithWhereUniqueWithoutAppInput {
  where: AppSourceEventWhereUniqueInput!
  data: AppSourceEventUpdateWithoutAppDataInput!
}

input AppSourceEventUpdateWithWhereUniqueWithoutSourceInput {
  where: AppSourceEventWhereUniqueInput!
  data: AppSourceEventUpdateWithoutSourceDataInput!
}

input AppSourceEventUpsertWithWhereUniqueWithoutAppInput {
  where: AppSourceEventWhereUniqueInput!
  update: AppSourceEventUpdateWithoutAppDataInput!
  create: AppSourceEventCreateWithoutAppInput!
}

input AppSourceEventUpsertWithWhereUniqueWithoutSourceInput {
  where: AppSourceEventWhereUniqueInput!
  update: AppSourceEventUpdateWithoutSourceDataInput!
  create: AppSourceEventCreateWithoutSourceInput!
}

input AppSourceEventWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  type: String
  type_not: String
  type_in: [String!]
  type_not_in: [String!]
  type_lt: String
  type_lte: String
  type_gt: String
  type_gte: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  desc: String
  desc_not: String
  desc_in: [String!]
  desc_not_in: [String!]
  desc_lt: String
  desc_lte: String
  desc_gt: String
  desc_gte: String
  desc_contains: String
  desc_not_contains: String
  desc_starts_with: String
  desc_not_starts_with: String
  desc_ends_with: String
  desc_not_ends_with: String
  status: AppSourceEventStatus
  status_not: AppSourceEventStatus
  status_in: [AppSourceEventStatus!]
  status_not_in: [AppSourceEventStatus!]
  app: AppWhereInput
  source: AppSourceWhereInput
  AND: [AppSourceEventWhereInput!]
  OR: [AppSourceEventWhereInput!]
  NOT: [AppSourceEventWhereInput!]
}

input AppSourceEventWhereUniqueInput {
  id: ID
  name: String
}

enum AppSourceOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  type_ASC
  type_DESC
  _unique_name_ASC
  _unique_name_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type AppSourcePreviousValues {
  id: ID!
  name: String
  type: AppSourceType
  _unique_name: String!
}

input AppSourceScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  type: AppSourceType
  type_not: AppSourceType
  type_in: [AppSourceType!]
  type_not_in: [AppSourceType!]
  _unique_name: String
  _unique_name_not: String
  _unique_name_in: [String!]
  _unique_name_not_in: [String!]
  _unique_name_lt: String
  _unique_name_lte: String
  _unique_name_gt: String
  _unique_name_gte: String
  _unique_name_contains: String
  _unique_name_not_contains: String
  _unique_name_starts_with: String
  _unique_name_not_starts_with: String
  _unique_name_ends_with: String
  _unique_name_not_ends_with: String
  AND: [AppSourceScalarWhereInput!]
  OR: [AppSourceScalarWhereInput!]
  NOT: [AppSourceScalarWhereInput!]
}

type AppSourceSubscriptionPayload {
  mutation: MutationType!
  node: AppSource
  updatedFields: [String!]
  previousValues: AppSourcePreviousValues
}

input AppSourceSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: AppSourceWhereInput
  AND: [AppSourceSubscriptionWhereInput!]
  OR: [AppSourceSubscriptionWhereInput!]
  NOT: [AppSourceSubscriptionWhereInput!]
}

enum AppSourceType {
  WEBHOOK
  POLL
}

input AppSourceUpdateInput {
  name: String
  type: AppSourceType
  _unique_name: String
  app: AppUpdateOneRequiredWithoutSourcesInput
  events: AppSourceEventUpdateManyWithoutSourceInput
}

input AppSourceUpdateManyDataInput {
  name: String
  type: AppSourceType
  _unique_name: String
}

input AppSourceUpdateManyMutationInput {
  name: String
  type: AppSourceType
  _unique_name: String
}

input AppSourceUpdateManyWithoutAppInput {
  create: [AppSourceCreateWithoutAppInput!]
  delete: [AppSourceWhereUniqueInput!]
  connect: [AppSourceWhereUniqueInput!]
  set: [AppSourceWhereUniqueInput!]
  disconnect: [AppSourceWhereUniqueInput!]
  update: [AppSourceUpdateWithWhereUniqueWithoutAppInput!]
  upsert: [AppSourceUpsertWithWhereUniqueWithoutAppInput!]
  deleteMany: [AppSourceScalarWhereInput!]
  updateMany: [AppSourceUpdateManyWithWhereNestedInput!]
}

input AppSourceUpdateManyWithWhereNestedInput {
  where: AppSourceScalarWhereInput!
  data: AppSourceUpdateManyDataInput!
}

input AppSourceUpdateOneRequiredWithoutEventsInput {
  create: AppSourceCreateWithoutEventsInput
  update: AppSourceUpdateWithoutEventsDataInput
  upsert: AppSourceUpsertWithoutEventsInput
  connect: AppSourceWhereUniqueInput
}

input AppSourceUpdateWithoutAppDataInput {
  name: String
  type: AppSourceType
  _unique_name: String
  events: AppSourceEventUpdateManyWithoutSourceInput
}

input AppSourceUpdateWithoutEventsDataInput {
  name: String
  type: AppSourceType
  _unique_name: String
  app: AppUpdateOneRequiredWithoutSourcesInput
}

input AppSourceUpdateWithWhereUniqueWithoutAppInput {
  where: AppSourceWhereUniqueInput!
  data: AppSourceUpdateWithoutAppDataInput!
}

input AppSourceUpsertWithoutEventsInput {
  update: AppSourceUpdateWithoutEventsDataInput!
  create: AppSourceCreateWithoutEventsInput!
}

input AppSourceUpsertWithWhereUniqueWithoutAppInput {
  where: AppSourceWhereUniqueInput!
  update: AppSourceUpdateWithoutAppDataInput!
  create: AppSourceCreateWithoutAppInput!
}

input AppSourceWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  type: AppSourceType
  type_not: AppSourceType
  type_in: [AppSourceType!]
  type_not_in: [AppSourceType!]
  _unique_name: String
  _unique_name_not: String
  _unique_name_in: [String!]
  _unique_name_not_in: [String!]
  _unique_name_lt: String
  _unique_name_lte: String
  _unique_name_gt: String
  _unique_name_gte: String
  _unique_name_contains: String
  _unique_name_not_contains: String
  _unique_name_starts_with: String
  _unique_name_not_starts_with: String
  _unique_name_ends_with: String
  _unique_name_not_ends_with: String
  app: AppWhereInput
  events_every: AppSourceEventWhereInput
  events_some: AppSourceEventWhereInput
  events_none: AppSourceEventWhereInput
  AND: [AppSourceWhereInput!]
  OR: [AppSourceWhereInput!]
  NOT: [AppSourceWhereInput!]
}

input AppSourceWhereUniqueInput {
  id: ID
  _unique_name: String
}

enum AppStatus {
  PENDING
  ACTIVE
  DEPRECATED
  LOCKED
}

type AppSubscriptionPayload {
  mutation: MutationType!
  node: App
  updatedFields: [String!]
  previousValues: AppPreviousValues
}

input AppSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: AppWhereInput
  AND: [AppSubscriptionWhereInput!]
  OR: [AppSubscriptionWhereInput!]
  NOT: [AppSubscriptionWhereInput!]
}

input AppUpdateDataInput {
  name: String
  displayName: String
  status: AppStatus
  version: String
  icon: String
  tagline: String
  desc: String
  domain: String
  premium: Boolean
  live: AppDeploymentUpdateOneWithoutLiveInput
  deployments: AppDeploymentUpdateManyWithoutAppInput
  config: Json
  sources: AppSourceUpdateManyWithoutAppInput
  events: AppSourceEventUpdateManyWithoutAppInput
  owner: SpaceUpdateOneInput
}

input AppUpdateInput {
  name: String
  displayName: String
  status: AppStatus
  version: String
  icon: String
  tagline: String
  desc: String
  domain: String
  premium: Boolean
  live: AppDeploymentUpdateOneWithoutLiveInput
  deployments: AppDeploymentUpdateManyWithoutAppInput
  config: Json
  sources: AppSourceUpdateManyWithoutAppInput
  events: AppSourceEventUpdateManyWithoutAppInput
  owner: SpaceUpdateOneInput
}

input AppUpdateManyMutationInput {
  name: String
  displayName: String
  status: AppStatus
  version: String
  icon: String
  tagline: String
  desc: String
  domain: String
  premium: Boolean
  config: Json
}

input AppUpdateOneInput {
  create: AppCreateInput
  update: AppUpdateDataInput
  upsert: AppUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: AppWhereUniqueInput
}

input AppUpdateOneRequiredWithoutEventsInput {
  create: AppCreateWithoutEventsInput
  update: AppUpdateWithoutEventsDataInput
  upsert: AppUpsertWithoutEventsInput
  connect: AppWhereUniqueInput
}

input AppUpdateOneRequiredWithoutSourcesInput {
  create: AppCreateWithoutSourcesInput
  update: AppUpdateWithoutSourcesDataInput
  upsert: AppUpsertWithoutSourcesInput
  connect: AppWhereUniqueInput
}

input AppUpdateOneWithoutDeploymentsInput {
  create: AppCreateWithoutDeploymentsInput
  update: AppUpdateWithoutDeploymentsDataInput
  upsert: AppUpsertWithoutDeploymentsInput
  delete: Boolean
  disconnect: Boolean
  connect: AppWhereUniqueInput
}

input AppUpdateOneWithoutLiveInput {
  create: AppCreateWithoutLiveInput
  update: AppUpdateWithoutLiveDataInput
  upsert: AppUpsertWithoutLiveInput
  delete: Boolean
  disconnect: Boolean
  connect: AppWhereUniqueInput
}

input AppUpdateWithoutDeploymentsDataInput {
  name: String
  displayName: String
  status: AppStatus
  version: String
  icon: String
  tagline: String
  desc: String
  domain: String
  premium: Boolean
  live: AppDeploymentUpdateOneWithoutLiveInput
  config: Json
  sources: AppSourceUpdateManyWithoutAppInput
  events: AppSourceEventUpdateManyWithoutAppInput
  owner: SpaceUpdateOneInput
}

input AppUpdateWithoutEventsDataInput {
  name: String
  displayName: String
  status: AppStatus
  version: String
  icon: String
  tagline: String
  desc: String
  domain: String
  premium: Boolean
  live: AppDeploymentUpdateOneWithoutLiveInput
  deployments: AppDeploymentUpdateManyWithoutAppInput
  config: Json
  sources: AppSourceUpdateManyWithoutAppInput
  owner: SpaceUpdateOneInput
}

input AppUpdateWithoutLiveDataInput {
  name: String
  displayName: String
  status: AppStatus
  version: String
  icon: String
  tagline: String
  desc: String
  domain: String
  premium: Boolean
  deployments: AppDeploymentUpdateManyWithoutAppInput
  config: Json
  sources: AppSourceUpdateManyWithoutAppInput
  events: AppSourceEventUpdateManyWithoutAppInput
  owner: SpaceUpdateOneInput
}

input AppUpdateWithoutSourcesDataInput {
  name: String
  displayName: String
  status: AppStatus
  version: String
  icon: String
  tagline: String
  desc: String
  domain: String
  premium: Boolean
  live: AppDeploymentUpdateOneWithoutLiveInput
  deployments: AppDeploymentUpdateManyWithoutAppInput
  config: Json
  events: AppSourceEventUpdateManyWithoutAppInput
  owner: SpaceUpdateOneInput
}

input AppUpsertNestedInput {
  update: AppUpdateDataInput!
  create: AppCreateInput!
}

input AppUpsertWithoutDeploymentsInput {
  update: AppUpdateWithoutDeploymentsDataInput!
  create: AppCreateWithoutDeploymentsInput!
}

input AppUpsertWithoutEventsInput {
  update: AppUpdateWithoutEventsDataInput!
  create: AppCreateWithoutEventsInput!
}

input AppUpsertWithoutLiveInput {
  update: AppUpdateWithoutLiveDataInput!
  create: AppCreateWithoutLiveInput!
}

input AppUpsertWithoutSourcesInput {
  update: AppUpdateWithoutSourcesDataInput!
  create: AppCreateWithoutSourcesInput!
}

input AppWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  displayName: String
  displayName_not: String
  displayName_in: [String!]
  displayName_not_in: [String!]
  displayName_lt: String
  displayName_lte: String
  displayName_gt: String
  displayName_gte: String
  displayName_contains: String
  displayName_not_contains: String
  displayName_starts_with: String
  displayName_not_starts_with: String
  displayName_ends_with: String
  displayName_not_ends_with: String
  status: AppStatus
  status_not: AppStatus
  status_in: [AppStatus!]
  status_not_in: [AppStatus!]
  version: String
  version_not: String
  version_in: [String!]
  version_not_in: [String!]
  version_lt: String
  version_lte: String
  version_gt: String
  version_gte: String
  version_contains: String
  version_not_contains: String
  version_starts_with: String
  version_not_starts_with: String
  version_ends_with: String
  version_not_ends_with: String
  icon: String
  icon_not: String
  icon_in: [String!]
  icon_not_in: [String!]
  icon_lt: String
  icon_lte: String
  icon_gt: String
  icon_gte: String
  icon_contains: String
  icon_not_contains: String
  icon_starts_with: String
  icon_not_starts_with: String
  icon_ends_with: String
  icon_not_ends_with: String
  tagline: String
  tagline_not: String
  tagline_in: [String!]
  tagline_not_in: [String!]
  tagline_lt: String
  tagline_lte: String
  tagline_gt: String
  tagline_gte: String
  tagline_contains: String
  tagline_not_contains: String
  tagline_starts_with: String
  tagline_not_starts_with: String
  tagline_ends_with: String
  tagline_not_ends_with: String
  desc: String
  desc_not: String
  desc_in: [String!]
  desc_not_in: [String!]
  desc_lt: String
  desc_lte: String
  desc_gt: String
  desc_gte: String
  desc_contains: String
  desc_not_contains: String
  desc_starts_with: String
  desc_not_starts_with: String
  desc_ends_with: String
  desc_not_ends_with: String
  domain: String
  domain_not: String
  domain_in: [String!]
  domain_not_in: [String!]
  domain_lt: String
  domain_lte: String
  domain_gt: String
  domain_gte: String
  domain_contains: String
  domain_not_contains: String
  domain_starts_with: String
  domain_not_starts_with: String
  domain_ends_with: String
  domain_not_ends_with: String
  premium: Boolean
  premium_not: Boolean
  live: AppDeploymentWhereInput
  deployments_every: AppDeploymentWhereInput
  deployments_some: AppDeploymentWhereInput
  deployments_none: AppDeploymentWhereInput
  sources_every: AppSourceWhereInput
  sources_some: AppSourceWhereInput
  sources_none: AppSourceWhereInput
  events_every: AppSourceEventWhereInput
  events_some: AppSourceEventWhereInput
  events_none: AppSourceEventWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  owner: SpaceWhereInput
  AND: [AppWhereInput!]
  OR: [AppWhereInput!]
  NOT: [AppWhereInput!]
}

input AppWhereUniqueInput {
  id: ID
  name: String
}

type Artifact {
  id: ID!
  name: String!
  type: ArtifactType
  children(where: ArtifactWhereInput, orderBy: ArtifactOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Artifact!]
  sha: String
  path: String
  raw: ArtifactRaw
  deploy: Deployment
}

type ArtifactConnection {
  pageInfo: PageInfo!
  edges: [ArtifactEdge]!
  aggregate: AggregateArtifact!
}

input ArtifactCreateInput {
  name: String!
  type: ArtifactType
  children: ArtifactCreateManyInput
  sha: String
  path: String
  raw: ArtifactRawCreateOneInput
  deploy: DeploymentCreateOneWithoutFilesInput
}

input ArtifactCreateManyInput {
  create: [ArtifactCreateInput!]
  connect: [ArtifactWhereUniqueInput!]
}

input ArtifactCreateManyWithoutDeployInput {
  create: [ArtifactCreateWithoutDeployInput!]
  connect: [ArtifactWhereUniqueInput!]
}

input ArtifactCreateWithoutDeployInput {
  name: String!
  type: ArtifactType
  children: ArtifactCreateManyInput
  sha: String
  path: String
  raw: ArtifactRawCreateOneInput
}

type ArtifactEdge {
  node: Artifact!
  cursor: String!
}

enum ArtifactOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  type_ASC
  type_DESC
  sha_ASC
  sha_DESC
  path_ASC
  path_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ArtifactPreviousValues {
  id: ID!
  name: String!
  type: ArtifactType
  sha: String
  path: String
}

type ArtifactRaw {
  id: ID!
  sha: String
  size: Int
  spaces(where: SpaceWhereInput, orderBy: SpaceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Space!]
}

type ArtifactRawConnection {
  pageInfo: PageInfo!
  edges: [ArtifactRawEdge]!
  aggregate: AggregateArtifactRaw!
}

input ArtifactRawCreateInput {
  sha: String
  size: Int
  spaces: SpaceCreateManyWithoutRawInput
}

input ArtifactRawCreateManyWithoutSpacesInput {
  create: [ArtifactRawCreateWithoutSpacesInput!]
  connect: [ArtifactRawWhereUniqueInput!]
}

input ArtifactRawCreateOneInput {
  create: ArtifactRawCreateInput
  connect: ArtifactRawWhereUniqueInput
}

input ArtifactRawCreateWithoutSpacesInput {
  sha: String
  size: Int
}

type ArtifactRawEdge {
  node: ArtifactRaw!
  cursor: String!
}

enum ArtifactRawOrderByInput {
  id_ASC
  id_DESC
  sha_ASC
  sha_DESC
  size_ASC
  size_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ArtifactRawPreviousValues {
  id: ID!
  sha: String
  size: Int
}

input ArtifactRawScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  sha: String
  sha_not: String
  sha_in: [String!]
  sha_not_in: [String!]
  sha_lt: String
  sha_lte: String
  sha_gt: String
  sha_gte: String
  sha_contains: String
  sha_not_contains: String
  sha_starts_with: String
  sha_not_starts_with: String
  sha_ends_with: String
  sha_not_ends_with: String
  size: Int
  size_not: Int
  size_in: [Int!]
  size_not_in: [Int!]
  size_lt: Int
  size_lte: Int
  size_gt: Int
  size_gte: Int
  AND: [ArtifactRawScalarWhereInput!]
  OR: [ArtifactRawScalarWhereInput!]
  NOT: [ArtifactRawScalarWhereInput!]
}

type ArtifactRawSubscriptionPayload {
  mutation: MutationType!
  node: ArtifactRaw
  updatedFields: [String!]
  previousValues: ArtifactRawPreviousValues
}

input ArtifactRawSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ArtifactRawWhereInput
  AND: [ArtifactRawSubscriptionWhereInput!]
  OR: [ArtifactRawSubscriptionWhereInput!]
  NOT: [ArtifactRawSubscriptionWhereInput!]
}

input ArtifactRawUpdateDataInput {
  sha: String
  size: Int
  spaces: SpaceUpdateManyWithoutRawInput
}

input ArtifactRawUpdateInput {
  sha: String
  size: Int
  spaces: SpaceUpdateManyWithoutRawInput
}

input ArtifactRawUpdateManyDataInput {
  sha: String
  size: Int
}

input ArtifactRawUpdateManyMutationInput {
  sha: String
  size: Int
}

input ArtifactRawUpdateManyWithoutSpacesInput {
  create: [ArtifactRawCreateWithoutSpacesInput!]
  delete: [ArtifactRawWhereUniqueInput!]
  connect: [ArtifactRawWhereUniqueInput!]
  set: [ArtifactRawWhereUniqueInput!]
  disconnect: [ArtifactRawWhereUniqueInput!]
  update: [ArtifactRawUpdateWithWhereUniqueWithoutSpacesInput!]
  upsert: [ArtifactRawUpsertWithWhereUniqueWithoutSpacesInput!]
  deleteMany: [ArtifactRawScalarWhereInput!]
  updateMany: [ArtifactRawUpdateManyWithWhereNestedInput!]
}

input ArtifactRawUpdateManyWithWhereNestedInput {
  where: ArtifactRawScalarWhereInput!
  data: ArtifactRawUpdateManyDataInput!
}

input ArtifactRawUpdateOneInput {
  create: ArtifactRawCreateInput
  update: ArtifactRawUpdateDataInput
  upsert: ArtifactRawUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: ArtifactRawWhereUniqueInput
}

input ArtifactRawUpdateWithoutSpacesDataInput {
  sha: String
  size: Int
}

input ArtifactRawUpdateWithWhereUniqueWithoutSpacesInput {
  where: ArtifactRawWhereUniqueInput!
  data: ArtifactRawUpdateWithoutSpacesDataInput!
}

input ArtifactRawUpsertNestedInput {
  update: ArtifactRawUpdateDataInput!
  create: ArtifactRawCreateInput!
}

input ArtifactRawUpsertWithWhereUniqueWithoutSpacesInput {
  where: ArtifactRawWhereUniqueInput!
  update: ArtifactRawUpdateWithoutSpacesDataInput!
  create: ArtifactRawCreateWithoutSpacesInput!
}

input ArtifactRawWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  sha: String
  sha_not: String
  sha_in: [String!]
  sha_not_in: [String!]
  sha_lt: String
  sha_lte: String
  sha_gt: String
  sha_gte: String
  sha_contains: String
  sha_not_contains: String
  sha_starts_with: String
  sha_not_starts_with: String
  sha_ends_with: String
  sha_not_ends_with: String
  size: Int
  size_not: Int
  size_in: [Int!]
  size_not_in: [Int!]
  size_lt: Int
  size_lte: Int
  size_gt: Int
  size_gte: Int
  spaces_every: SpaceWhereInput
  spaces_some: SpaceWhereInput
  spaces_none: SpaceWhereInput
  AND: [ArtifactRawWhereInput!]
  OR: [ArtifactRawWhereInput!]
  NOT: [ArtifactRawWhereInput!]
}

input ArtifactRawWhereUniqueInput {
  id: ID
  sha: String
}

input ArtifactScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  type: ArtifactType
  type_not: ArtifactType
  type_in: [ArtifactType!]
  type_not_in: [ArtifactType!]
  sha: String
  sha_not: String
  sha_in: [String!]
  sha_not_in: [String!]
  sha_lt: String
  sha_lte: String
  sha_gt: String
  sha_gte: String
  sha_contains: String
  sha_not_contains: String
  sha_starts_with: String
  sha_not_starts_with: String
  sha_ends_with: String
  sha_not_ends_with: String
  path: String
  path_not: String
  path_in: [String!]
  path_not_in: [String!]
  path_lt: String
  path_lte: String
  path_gt: String
  path_gte: String
  path_contains: String
  path_not_contains: String
  path_starts_with: String
  path_not_starts_with: String
  path_ends_with: String
  path_not_ends_with: String
  AND: [ArtifactScalarWhereInput!]
  OR: [ArtifactScalarWhereInput!]
  NOT: [ArtifactScalarWhereInput!]
}

type ArtifactSubscriptionPayload {
  mutation: MutationType!
  node: Artifact
  updatedFields: [String!]
  previousValues: ArtifactPreviousValues
}

input ArtifactSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ArtifactWhereInput
  AND: [ArtifactSubscriptionWhereInput!]
  OR: [ArtifactSubscriptionWhereInput!]
  NOT: [ArtifactSubscriptionWhereInput!]
}

enum ArtifactType {
  FILE
  DIRECTORY
}

input ArtifactUpdateDataInput {
  name: String
  type: ArtifactType
  children: ArtifactUpdateManyInput
  sha: String
  path: String
  raw: ArtifactRawUpdateOneInput
  deploy: DeploymentUpdateOneWithoutFilesInput
}

input ArtifactUpdateInput {
  name: String
  type: ArtifactType
  children: ArtifactUpdateManyInput
  sha: String
  path: String
  raw: ArtifactRawUpdateOneInput
  deploy: DeploymentUpdateOneWithoutFilesInput
}

input ArtifactUpdateManyDataInput {
  name: String
  type: ArtifactType
  sha: String
  path: String
}

input ArtifactUpdateManyInput {
  create: [ArtifactCreateInput!]
  update: [ArtifactUpdateWithWhereUniqueNestedInput!]
  upsert: [ArtifactUpsertWithWhereUniqueNestedInput!]
  delete: [ArtifactWhereUniqueInput!]
  connect: [ArtifactWhereUniqueInput!]
  set: [ArtifactWhereUniqueInput!]
  disconnect: [ArtifactWhereUniqueInput!]
  deleteMany: [ArtifactScalarWhereInput!]
  updateMany: [ArtifactUpdateManyWithWhereNestedInput!]
}

input ArtifactUpdateManyMutationInput {
  name: String
  type: ArtifactType
  sha: String
  path: String
}

input ArtifactUpdateManyWithoutDeployInput {
  create: [ArtifactCreateWithoutDeployInput!]
  delete: [ArtifactWhereUniqueInput!]
  connect: [ArtifactWhereUniqueInput!]
  set: [ArtifactWhereUniqueInput!]
  disconnect: [ArtifactWhereUniqueInput!]
  update: [ArtifactUpdateWithWhereUniqueWithoutDeployInput!]
  upsert: [ArtifactUpsertWithWhereUniqueWithoutDeployInput!]
  deleteMany: [ArtifactScalarWhereInput!]
  updateMany: [ArtifactUpdateManyWithWhereNestedInput!]
}

input ArtifactUpdateManyWithWhereNestedInput {
  where: ArtifactScalarWhereInput!
  data: ArtifactUpdateManyDataInput!
}

input ArtifactUpdateWithoutDeployDataInput {
  name: String
  type: ArtifactType
  children: ArtifactUpdateManyInput
  sha: String
  path: String
  raw: ArtifactRawUpdateOneInput
}

input ArtifactUpdateWithWhereUniqueNestedInput {
  where: ArtifactWhereUniqueInput!
  data: ArtifactUpdateDataInput!
}

input ArtifactUpdateWithWhereUniqueWithoutDeployInput {
  where: ArtifactWhereUniqueInput!
  data: ArtifactUpdateWithoutDeployDataInput!
}

input ArtifactUpsertWithWhereUniqueNestedInput {
  where: ArtifactWhereUniqueInput!
  update: ArtifactUpdateDataInput!
  create: ArtifactCreateInput!
}

input ArtifactUpsertWithWhereUniqueWithoutDeployInput {
  where: ArtifactWhereUniqueInput!
  update: ArtifactUpdateWithoutDeployDataInput!
  create: ArtifactCreateWithoutDeployInput!
}

input ArtifactWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  type: ArtifactType
  type_not: ArtifactType
  type_in: [ArtifactType!]
  type_not_in: [ArtifactType!]
  children_every: ArtifactWhereInput
  children_some: ArtifactWhereInput
  children_none: ArtifactWhereInput
  sha: String
  sha_not: String
  sha_in: [String!]
  sha_not_in: [String!]
  sha_lt: String
  sha_lte: String
  sha_gt: String
  sha_gte: String
  sha_contains: String
  sha_not_contains: String
  sha_starts_with: String
  sha_not_starts_with: String
  sha_ends_with: String
  sha_not_ends_with: String
  path: String
  path_not: String
  path_in: [String!]
  path_not_in: [String!]
  path_lt: String
  path_lte: String
  path_gt: String
  path_gte: String
  path_contains: String
  path_not_contains: String
  path_starts_with: String
  path_not_starts_with: String
  path_ends_with: String
  path_not_ends_with: String
  raw: ArtifactRawWhereInput
  deploy: DeploymentWhereInput
  AND: [ArtifactWhereInput!]
  OR: [ArtifactWhereInput!]
  NOT: [ArtifactWhereInput!]
}

input ArtifactWhereUniqueInput {
  id: ID
}

type Auth {
  id: ID!
  type: AuthType!
  user: User
  token(where: TokenWhereInput, orderBy: TokenOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Token!]
  roles(where: RoleWhereInput, orderBy: RoleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Role!]
  events(where: EventWhereInput, orderBy: EventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Event!]
  actions(where: EventWhereInput, orderBy: EventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Event!]
  providers(where: ProviderWhereInput, orderBy: ProviderOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Provider!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

type AuthConnection {
  pageInfo: PageInfo!
  edges: [AuthEdge]!
  aggregate: AggregateAuth!
}

input AuthCreateInput {
  type: AuthType!
  user: UserCreateOneWithoutAuthInput
  token: TokenCreateManyWithoutAuthInput
  roles: RoleCreateManyWithoutAuthInput
  events: EventCreateManyWithoutAuthInput
  actions: EventCreateManyWithoutActorInput
  providers: ProviderCreateManyWithoutAuthInput
}

input AuthCreateOneWithoutActionsInput {
  create: AuthCreateWithoutActionsInput
  connect: AuthWhereUniqueInput
}

input AuthCreateOneWithoutEventsInput {
  create: AuthCreateWithoutEventsInput
  connect: AuthWhereUniqueInput
}

input AuthCreateOneWithoutProvidersInput {
  create: AuthCreateWithoutProvidersInput
  connect: AuthWhereUniqueInput
}

input AuthCreateOneWithoutRolesInput {
  create: AuthCreateWithoutRolesInput
  connect: AuthWhereUniqueInput
}

input AuthCreateOneWithoutTokenInput {
  create: AuthCreateWithoutTokenInput
  connect: AuthWhereUniqueInput
}

input AuthCreateOneWithoutUserInput {
  create: AuthCreateWithoutUserInput
  connect: AuthWhereUniqueInput
}

input AuthCreateWithoutActionsInput {
  type: AuthType!
  user: UserCreateOneWithoutAuthInput
  token: TokenCreateManyWithoutAuthInput
  roles: RoleCreateManyWithoutAuthInput
  events: EventCreateManyWithoutAuthInput
  providers: ProviderCreateManyWithoutAuthInput
}

input AuthCreateWithoutEventsInput {
  type: AuthType!
  user: UserCreateOneWithoutAuthInput
  token: TokenCreateManyWithoutAuthInput
  roles: RoleCreateManyWithoutAuthInput
  actions: EventCreateManyWithoutActorInput
  providers: ProviderCreateManyWithoutAuthInput
}

input AuthCreateWithoutProvidersInput {
  type: AuthType!
  user: UserCreateOneWithoutAuthInput
  token: TokenCreateManyWithoutAuthInput
  roles: RoleCreateManyWithoutAuthInput
  events: EventCreateManyWithoutAuthInput
  actions: EventCreateManyWithoutActorInput
}

input AuthCreateWithoutRolesInput {
  type: AuthType!
  user: UserCreateOneWithoutAuthInput
  token: TokenCreateManyWithoutAuthInput
  events: EventCreateManyWithoutAuthInput
  actions: EventCreateManyWithoutActorInput
  providers: ProviderCreateManyWithoutAuthInput
}

input AuthCreateWithoutTokenInput {
  type: AuthType!
  user: UserCreateOneWithoutAuthInput
  roles: RoleCreateManyWithoutAuthInput
  events: EventCreateManyWithoutAuthInput
  actions: EventCreateManyWithoutActorInput
  providers: ProviderCreateManyWithoutAuthInput
}

input AuthCreateWithoutUserInput {
  type: AuthType!
  token: TokenCreateManyWithoutAuthInput
  roles: RoleCreateManyWithoutAuthInput
  events: EventCreateManyWithoutAuthInput
  actions: EventCreateManyWithoutActorInput
  providers: ProviderCreateManyWithoutAuthInput
}

type AuthEdge {
  node: Auth!
  cursor: String!
}

enum AuthOrderByInput {
  id_ASC
  id_DESC
  type_ASC
  type_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type AuthPreviousValues {
  id: ID!
  type: AuthType!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type AuthSubscriptionPayload {
  mutation: MutationType!
  node: Auth
  updatedFields: [String!]
  previousValues: AuthPreviousValues
}

input AuthSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: AuthWhereInput
  AND: [AuthSubscriptionWhereInput!]
  OR: [AuthSubscriptionWhereInput!]
  NOT: [AuthSubscriptionWhereInput!]
}

enum AuthType {
  USER
  TOKEN
  SYSTEM
}

input AuthUpdateInput {
  type: AuthType
  user: UserUpdateOneWithoutAuthInput
  token: TokenUpdateManyWithoutAuthInput
  roles: RoleUpdateManyWithoutAuthInput
  events: EventUpdateManyWithoutAuthInput
  actions: EventUpdateManyWithoutActorInput
  providers: ProviderUpdateManyWithoutAuthInput
}

input AuthUpdateManyMutationInput {
  type: AuthType
}

input AuthUpdateOneRequiredWithoutProvidersInput {
  create: AuthCreateWithoutProvidersInput
  update: AuthUpdateWithoutProvidersDataInput
  upsert: AuthUpsertWithoutProvidersInput
  connect: AuthWhereUniqueInput
}

input AuthUpdateOneRequiredWithoutTokenInput {
  create: AuthCreateWithoutTokenInput
  update: AuthUpdateWithoutTokenDataInput
  upsert: AuthUpsertWithoutTokenInput
  connect: AuthWhereUniqueInput
}

input AuthUpdateOneRequiredWithoutUserInput {
  create: AuthCreateWithoutUserInput
  update: AuthUpdateWithoutUserDataInput
  upsert: AuthUpsertWithoutUserInput
  connect: AuthWhereUniqueInput
}

input AuthUpdateOneWithoutActionsInput {
  create: AuthCreateWithoutActionsInput
  update: AuthUpdateWithoutActionsDataInput
  upsert: AuthUpsertWithoutActionsInput
  delete: Boolean
  disconnect: Boolean
  connect: AuthWhereUniqueInput
}

input AuthUpdateOneWithoutEventsInput {
  create: AuthCreateWithoutEventsInput
  update: AuthUpdateWithoutEventsDataInput
  upsert: AuthUpsertWithoutEventsInput
  delete: Boolean
  disconnect: Boolean
  connect: AuthWhereUniqueInput
}

input AuthUpdateOneWithoutRolesInput {
  create: AuthCreateWithoutRolesInput
  update: AuthUpdateWithoutRolesDataInput
  upsert: AuthUpsertWithoutRolesInput
  delete: Boolean
  disconnect: Boolean
  connect: AuthWhereUniqueInput
}

input AuthUpdateWithoutActionsDataInput {
  type: AuthType
  user: UserUpdateOneWithoutAuthInput
  token: TokenUpdateManyWithoutAuthInput
  roles: RoleUpdateManyWithoutAuthInput
  events: EventUpdateManyWithoutAuthInput
  providers: ProviderUpdateManyWithoutAuthInput
}

input AuthUpdateWithoutEventsDataInput {
  type: AuthType
  user: UserUpdateOneWithoutAuthInput
  token: TokenUpdateManyWithoutAuthInput
  roles: RoleUpdateManyWithoutAuthInput
  actions: EventUpdateManyWithoutActorInput
  providers: ProviderUpdateManyWithoutAuthInput
}

input AuthUpdateWithoutProvidersDataInput {
  type: AuthType
  user: UserUpdateOneWithoutAuthInput
  token: TokenUpdateManyWithoutAuthInput
  roles: RoleUpdateManyWithoutAuthInput
  events: EventUpdateManyWithoutAuthInput
  actions: EventUpdateManyWithoutActorInput
}

input AuthUpdateWithoutRolesDataInput {
  type: AuthType
  user: UserUpdateOneWithoutAuthInput
  token: TokenUpdateManyWithoutAuthInput
  events: EventUpdateManyWithoutAuthInput
  actions: EventUpdateManyWithoutActorInput
  providers: ProviderUpdateManyWithoutAuthInput
}

input AuthUpdateWithoutTokenDataInput {
  type: AuthType
  user: UserUpdateOneWithoutAuthInput
  roles: RoleUpdateManyWithoutAuthInput
  events: EventUpdateManyWithoutAuthInput
  actions: EventUpdateManyWithoutActorInput
  providers: ProviderUpdateManyWithoutAuthInput
}

input AuthUpdateWithoutUserDataInput {
  type: AuthType
  token: TokenUpdateManyWithoutAuthInput
  roles: RoleUpdateManyWithoutAuthInput
  events: EventUpdateManyWithoutAuthInput
  actions: EventUpdateManyWithoutActorInput
  providers: ProviderUpdateManyWithoutAuthInput
}

input AuthUpsertWithoutActionsInput {
  update: AuthUpdateWithoutActionsDataInput!
  create: AuthCreateWithoutActionsInput!
}

input AuthUpsertWithoutEventsInput {
  update: AuthUpdateWithoutEventsDataInput!
  create: AuthCreateWithoutEventsInput!
}

input AuthUpsertWithoutProvidersInput {
  update: AuthUpdateWithoutProvidersDataInput!
  create: AuthCreateWithoutProvidersInput!
}

input AuthUpsertWithoutRolesInput {
  update: AuthUpdateWithoutRolesDataInput!
  create: AuthCreateWithoutRolesInput!
}

input AuthUpsertWithoutTokenInput {
  update: AuthUpdateWithoutTokenDataInput!
  create: AuthCreateWithoutTokenInput!
}

input AuthUpsertWithoutUserInput {
  update: AuthUpdateWithoutUserDataInput!
  create: AuthCreateWithoutUserInput!
}

input AuthWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  type: AuthType
  type_not: AuthType
  type_in: [AuthType!]
  type_not_in: [AuthType!]
  user: UserWhereInput
  token_every: TokenWhereInput
  token_some: TokenWhereInput
  token_none: TokenWhereInput
  roles_every: RoleWhereInput
  roles_some: RoleWhereInput
  roles_none: RoleWhereInput
  events_every: EventWhereInput
  events_some: EventWhereInput
  events_none: EventWhereInput
  actions_every: EventWhereInput
  actions_some: EventWhereInput
  actions_none: EventWhereInput
  providers_every: ProviderWhereInput
  providers_some: ProviderWhereInput
  providers_none: ProviderWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [AuthWhereInput!]
  OR: [AuthWhereInput!]
  NOT: [AuthWhereInput!]
}

input AuthWhereUniqueInput {
  id: ID
}

type BatchPayload {
  count: Long!
}

scalar DateTime

type Deployment {
  id: ID!
  type: DeploymentType
  subhost: String
  space: Space!
  service: Service
  app: App
  instances(where: InstanceWhereInput, orderBy: InstanceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Instance!]
  activeService: Service
  status: DeploymentStatus
  error: String
  progress: String
  mode: DeploymentMode
  build: Instance
  files(where: ArtifactWhereInput, orderBy: ArtifactOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Artifact!]
  root(where: ArtifactWhereInput, orderBy: ArtifactOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Artifact!]
  desc: String
  tags(where: ServiceTagWhereInput, orderBy: ServiceTagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ServiceTag!]
  tagsHistory(where: ServiceTagWhereInput, orderBy: ServiceTagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ServiceTag!]
  events(where: EventWhereInput, orderBy: EventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Event!]
  config: Json
  createdAt: DateTime!
}

type DeploymentConnection {
  pageInfo: PageInfo!
  edges: [DeploymentEdge]!
  aggregate: AggregateDeployment!
}

input DeploymentCreateInput {
  type: DeploymentType
  subhost: String
  space: SpaceCreateOneWithoutDeploymentsInput!
  service: ServiceCreateOneWithoutDeploymentsInput
  app: AppCreateOneInput
  instances: InstanceCreateManyWithoutDeploymentInput
  activeService: ServiceCreateOneWithoutActiveDeploymentInput
  status: DeploymentStatus
  error: String
  progress: String
  mode: DeploymentMode
  build: InstanceCreateOneInput
  files: ArtifactCreateManyWithoutDeployInput
  root: ArtifactCreateManyInput
  desc: String
  tags: ServiceTagCreateManyWithoutDeploymentInput
  tagsHistory: ServiceTagCreateManyWithoutHistoryInput
  events: EventCreateManyWithoutDeploymentInput
  config: Json
}

input DeploymentCreateManyWithoutServiceInput {
  create: [DeploymentCreateWithoutServiceInput!]
  connect: [DeploymentWhereUniqueInput!]
}

input DeploymentCreateManyWithoutSpaceInput {
  create: [DeploymentCreateWithoutSpaceInput!]
  connect: [DeploymentWhereUniqueInput!]
}

input DeploymentCreateManyWithoutTagsHistoryInput {
  create: [DeploymentCreateWithoutTagsHistoryInput!]
  connect: [DeploymentWhereUniqueInput!]
}

input DeploymentCreateOneInput {
  create: DeploymentCreateInput
  connect: DeploymentWhereUniqueInput
}

input DeploymentCreateOneWithoutActiveServiceInput {
  create: DeploymentCreateWithoutActiveServiceInput
  connect: DeploymentWhereUniqueInput
}

input DeploymentCreateOneWithoutEventsInput {
  create: DeploymentCreateWithoutEventsInput
  connect: DeploymentWhereUniqueInput
}

input DeploymentCreateOneWithoutFilesInput {
  create: DeploymentCreateWithoutFilesInput
  connect: DeploymentWhereUniqueInput
}

input DeploymentCreateOneWithoutInstancesInput {
  create: DeploymentCreateWithoutInstancesInput
  connect: DeploymentWhereUniqueInput
}

input DeploymentCreateOneWithoutTagsInput {
  create: DeploymentCreateWithoutTagsInput
  connect: DeploymentWhereUniqueInput
}

input DeploymentCreateWithoutActiveServiceInput {
  type: DeploymentType
  subhost: String
  space: SpaceCreateOneWithoutDeploymentsInput!
  service: ServiceCreateOneWithoutDeploymentsInput
  app: AppCreateOneInput
  instances: InstanceCreateManyWithoutDeploymentInput
  status: DeploymentStatus
  error: String
  progress: String
  mode: DeploymentMode
  build: InstanceCreateOneInput
  files: ArtifactCreateManyWithoutDeployInput
  root: ArtifactCreateManyInput
  desc: String
  tags: ServiceTagCreateManyWithoutDeploymentInput
  tagsHistory: ServiceTagCreateManyWithoutHistoryInput
  events: EventCreateManyWithoutDeploymentInput
  config: Json
}

input DeploymentCreateWithoutEventsInput {
  type: DeploymentType
  subhost: String
  space: SpaceCreateOneWithoutDeploymentsInput!
  service: ServiceCreateOneWithoutDeploymentsInput
  app: AppCreateOneInput
  instances: InstanceCreateManyWithoutDeploymentInput
  activeService: ServiceCreateOneWithoutActiveDeploymentInput
  status: DeploymentStatus
  error: String
  progress: String
  mode: DeploymentMode
  build: InstanceCreateOneInput
  files: ArtifactCreateManyWithoutDeployInput
  root: ArtifactCreateManyInput
  desc: String
  tags: ServiceTagCreateManyWithoutDeploymentInput
  tagsHistory: ServiceTagCreateManyWithoutHistoryInput
  config: Json
}

input DeploymentCreateWithoutFilesInput {
  type: DeploymentType
  subhost: String
  space: SpaceCreateOneWithoutDeploymentsInput!
  service: ServiceCreateOneWithoutDeploymentsInput
  app: AppCreateOneInput
  instances: InstanceCreateManyWithoutDeploymentInput
  activeService: ServiceCreateOneWithoutActiveDeploymentInput
  status: DeploymentStatus
  error: String
  progress: String
  mode: DeploymentMode
  build: InstanceCreateOneInput
  root: ArtifactCreateManyInput
  desc: String
  tags: ServiceTagCreateManyWithoutDeploymentInput
  tagsHistory: ServiceTagCreateManyWithoutHistoryInput
  events: EventCreateManyWithoutDeploymentInput
  config: Json
}

input DeploymentCreateWithoutInstancesInput {
  type: DeploymentType
  subhost: String
  space: SpaceCreateOneWithoutDeploymentsInput!
  service: ServiceCreateOneWithoutDeploymentsInput
  app: AppCreateOneInput
  activeService: ServiceCreateOneWithoutActiveDeploymentInput
  status: DeploymentStatus
  error: String
  progress: String
  mode: DeploymentMode
  build: InstanceCreateOneInput
  files: ArtifactCreateManyWithoutDeployInput
  root: ArtifactCreateManyInput
  desc: String
  tags: ServiceTagCreateManyWithoutDeploymentInput
  tagsHistory: ServiceTagCreateManyWithoutHistoryInput
  events: EventCreateManyWithoutDeploymentInput
  config: Json
}

input DeploymentCreateWithoutServiceInput {
  type: DeploymentType
  subhost: String
  space: SpaceCreateOneWithoutDeploymentsInput!
  app: AppCreateOneInput
  instances: InstanceCreateManyWithoutDeploymentInput
  activeService: ServiceCreateOneWithoutActiveDeploymentInput
  status: DeploymentStatus
  error: String
  progress: String
  mode: DeploymentMode
  build: InstanceCreateOneInput
  files: ArtifactCreateManyWithoutDeployInput
  root: ArtifactCreateManyInput
  desc: String
  tags: ServiceTagCreateManyWithoutDeploymentInput
  tagsHistory: ServiceTagCreateManyWithoutHistoryInput
  events: EventCreateManyWithoutDeploymentInput
  config: Json
}

input DeploymentCreateWithoutSpaceInput {
  type: DeploymentType
  subhost: String
  service: ServiceCreateOneWithoutDeploymentsInput
  app: AppCreateOneInput
  instances: InstanceCreateManyWithoutDeploymentInput
  activeService: ServiceCreateOneWithoutActiveDeploymentInput
  status: DeploymentStatus
  error: String
  progress: String
  mode: DeploymentMode
  build: InstanceCreateOneInput
  files: ArtifactCreateManyWithoutDeployInput
  root: ArtifactCreateManyInput
  desc: String
  tags: ServiceTagCreateManyWithoutDeploymentInput
  tagsHistory: ServiceTagCreateManyWithoutHistoryInput
  events: EventCreateManyWithoutDeploymentInput
  config: Json
}

input DeploymentCreateWithoutTagsHistoryInput {
  type: DeploymentType
  subhost: String
  space: SpaceCreateOneWithoutDeploymentsInput!
  service: ServiceCreateOneWithoutDeploymentsInput
  app: AppCreateOneInput
  instances: InstanceCreateManyWithoutDeploymentInput
  activeService: ServiceCreateOneWithoutActiveDeploymentInput
  status: DeploymentStatus
  error: String
  progress: String
  mode: DeploymentMode
  build: InstanceCreateOneInput
  files: ArtifactCreateManyWithoutDeployInput
  root: ArtifactCreateManyInput
  desc: String
  tags: ServiceTagCreateManyWithoutDeploymentInput
  events: EventCreateManyWithoutDeploymentInput
  config: Json
}

input DeploymentCreateWithoutTagsInput {
  type: DeploymentType
  subhost: String
  space: SpaceCreateOneWithoutDeploymentsInput!
  service: ServiceCreateOneWithoutDeploymentsInput
  app: AppCreateOneInput
  instances: InstanceCreateManyWithoutDeploymentInput
  activeService: ServiceCreateOneWithoutActiveDeploymentInput
  status: DeploymentStatus
  error: String
  progress: String
  mode: DeploymentMode
  build: InstanceCreateOneInput
  files: ArtifactCreateManyWithoutDeployInput
  root: ArtifactCreateManyInput
  desc: String
  tagsHistory: ServiceTagCreateManyWithoutHistoryInput
  events: EventCreateManyWithoutDeploymentInput
  config: Json
}

type DeploymentEdge {
  node: Deployment!
  cursor: String!
}

enum DeploymentMode {
  RUN
  HTTPS
}

enum DeploymentOrderByInput {
  id_ASC
  id_DESC
  type_ASC
  type_DESC
  subhost_ASC
  subhost_DESC
  status_ASC
  status_DESC
  error_ASC
  error_DESC
  progress_ASC
  progress_DESC
  mode_ASC
  mode_DESC
  desc_ASC
  desc_DESC
  config_ASC
  config_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type DeploymentPreviousValues {
  id: ID!
  type: DeploymentType
  subhost: String
  status: DeploymentStatus
  error: String
  progress: String
  mode: DeploymentMode
  desc: String
  config: Json
  createdAt: DateTime!
}

input DeploymentScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  type: DeploymentType
  type_not: DeploymentType
  type_in: [DeploymentType!]
  type_not_in: [DeploymentType!]
  subhost: String
  subhost_not: String
  subhost_in: [String!]
  subhost_not_in: [String!]
  subhost_lt: String
  subhost_lte: String
  subhost_gt: String
  subhost_gte: String
  subhost_contains: String
  subhost_not_contains: String
  subhost_starts_with: String
  subhost_not_starts_with: String
  subhost_ends_with: String
  subhost_not_ends_with: String
  status: DeploymentStatus
  status_not: DeploymentStatus
  status_in: [DeploymentStatus!]
  status_not_in: [DeploymentStatus!]
  error: String
  error_not: String
  error_in: [String!]
  error_not_in: [String!]
  error_lt: String
  error_lte: String
  error_gt: String
  error_gte: String
  error_contains: String
  error_not_contains: String
  error_starts_with: String
  error_not_starts_with: String
  error_ends_with: String
  error_not_ends_with: String
  progress: String
  progress_not: String
  progress_in: [String!]
  progress_not_in: [String!]
  progress_lt: String
  progress_lte: String
  progress_gt: String
  progress_gte: String
  progress_contains: String
  progress_not_contains: String
  progress_starts_with: String
  progress_not_starts_with: String
  progress_ends_with: String
  progress_not_ends_with: String
  mode: DeploymentMode
  mode_not: DeploymentMode
  mode_in: [DeploymentMode!]
  mode_not_in: [DeploymentMode!]
  desc: String
  desc_not: String
  desc_in: [String!]
  desc_not_in: [String!]
  desc_lt: String
  desc_lte: String
  desc_gt: String
  desc_gte: String
  desc_contains: String
  desc_not_contains: String
  desc_starts_with: String
  desc_not_starts_with: String
  desc_ends_with: String
  desc_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [DeploymentScalarWhereInput!]
  OR: [DeploymentScalarWhereInput!]
  NOT: [DeploymentScalarWhereInput!]
}

enum DeploymentStatus {
  INIT
  DRAFT
  BUILD
  IN_PROGRESS
  ERROR
  READY
}

type DeploymentSubscriptionPayload {
  mutation: MutationType!
  node: Deployment
  updatedFields: [String!]
  previousValues: DeploymentPreviousValues
}

input DeploymentSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: DeploymentWhereInput
  AND: [DeploymentSubscriptionWhereInput!]
  OR: [DeploymentSubscriptionWhereInput!]
  NOT: [DeploymentSubscriptionWhereInput!]
}

enum DeploymentType {
  CORE
  APP
}

input DeploymentUpdateDataInput {
  type: DeploymentType
  subhost: String
  space: SpaceUpdateOneRequiredWithoutDeploymentsInput
  service: ServiceUpdateOneWithoutDeploymentsInput
  app: AppUpdateOneInput
  instances: InstanceUpdateManyWithoutDeploymentInput
  activeService: ServiceUpdateOneWithoutActiveDeploymentInput
  status: DeploymentStatus
  error: String
  progress: String
  mode: DeploymentMode
  build: InstanceUpdateOneInput
  files: ArtifactUpdateManyWithoutDeployInput
  root: ArtifactUpdateManyInput
  desc: String
  tags: ServiceTagUpdateManyWithoutDeploymentInput
  tagsHistory: ServiceTagUpdateManyWithoutHistoryInput
  events: EventUpdateManyWithoutDeploymentInput
  config: Json
}

input DeploymentUpdateInput {
  type: DeploymentType
  subhost: String
  space: SpaceUpdateOneRequiredWithoutDeploymentsInput
  service: ServiceUpdateOneWithoutDeploymentsInput
  app: AppUpdateOneInput
  instances: InstanceUpdateManyWithoutDeploymentInput
  activeService: ServiceUpdateOneWithoutActiveDeploymentInput
  status: DeploymentStatus
  error: String
  progress: String
  mode: DeploymentMode
  build: InstanceUpdateOneInput
  files: ArtifactUpdateManyWithoutDeployInput
  root: ArtifactUpdateManyInput
  desc: String
  tags: ServiceTagUpdateManyWithoutDeploymentInput
  tagsHistory: ServiceTagUpdateManyWithoutHistoryInput
  events: EventUpdateManyWithoutDeploymentInput
  config: Json
}

input DeploymentUpdateManyDataInput {
  type: DeploymentType
  subhost: String
  status: DeploymentStatus
  error: String
  progress: String
  mode: DeploymentMode
  desc: String
  config: Json
}

input DeploymentUpdateManyMutationInput {
  type: DeploymentType
  subhost: String
  status: DeploymentStatus
  error: String
  progress: String
  mode: DeploymentMode
  desc: String
  config: Json
}

input DeploymentUpdateManyWithoutServiceInput {
  create: [DeploymentCreateWithoutServiceInput!]
  delete: [DeploymentWhereUniqueInput!]
  connect: [DeploymentWhereUniqueInput!]
  set: [DeploymentWhereUniqueInput!]
  disconnect: [DeploymentWhereUniqueInput!]
  update: [DeploymentUpdateWithWhereUniqueWithoutServiceInput!]
  upsert: [DeploymentUpsertWithWhereUniqueWithoutServiceInput!]
  deleteMany: [DeploymentScalarWhereInput!]
  updateMany: [DeploymentUpdateManyWithWhereNestedInput!]
}

input DeploymentUpdateManyWithoutSpaceInput {
  create: [DeploymentCreateWithoutSpaceInput!]
  delete: [DeploymentWhereUniqueInput!]
  connect: [DeploymentWhereUniqueInput!]
  set: [DeploymentWhereUniqueInput!]
  disconnect: [DeploymentWhereUniqueInput!]
  update: [DeploymentUpdateWithWhereUniqueWithoutSpaceInput!]
  upsert: [DeploymentUpsertWithWhereUniqueWithoutSpaceInput!]
  deleteMany: [DeploymentScalarWhereInput!]
  updateMany: [DeploymentUpdateManyWithWhereNestedInput!]
}

input DeploymentUpdateManyWithoutTagsHistoryInput {
  create: [DeploymentCreateWithoutTagsHistoryInput!]
  delete: [DeploymentWhereUniqueInput!]
  connect: [DeploymentWhereUniqueInput!]
  set: [DeploymentWhereUniqueInput!]
  disconnect: [DeploymentWhereUniqueInput!]
  update: [DeploymentUpdateWithWhereUniqueWithoutTagsHistoryInput!]
  upsert: [DeploymentUpsertWithWhereUniqueWithoutTagsHistoryInput!]
  deleteMany: [DeploymentScalarWhereInput!]
  updateMany: [DeploymentUpdateManyWithWhereNestedInput!]
}

input DeploymentUpdateManyWithWhereNestedInput {
  where: DeploymentScalarWhereInput!
  data: DeploymentUpdateManyDataInput!
}

input DeploymentUpdateOneInput {
  create: DeploymentCreateInput
  update: DeploymentUpdateDataInput
  upsert: DeploymentUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: DeploymentWhereUniqueInput
}

input DeploymentUpdateOneRequiredWithoutInstancesInput {
  create: DeploymentCreateWithoutInstancesInput
  update: DeploymentUpdateWithoutInstancesDataInput
  upsert: DeploymentUpsertWithoutInstancesInput
  connect: DeploymentWhereUniqueInput
}

input DeploymentUpdateOneWithoutActiveServiceInput {
  create: DeploymentCreateWithoutActiveServiceInput
  update: DeploymentUpdateWithoutActiveServiceDataInput
  upsert: DeploymentUpsertWithoutActiveServiceInput
  delete: Boolean
  disconnect: Boolean
  connect: DeploymentWhereUniqueInput
}

input DeploymentUpdateOneWithoutEventsInput {
  create: DeploymentCreateWithoutEventsInput
  update: DeploymentUpdateWithoutEventsDataInput
  upsert: DeploymentUpsertWithoutEventsInput
  delete: Boolean
  disconnect: Boolean
  connect: DeploymentWhereUniqueInput
}

input DeploymentUpdateOneWithoutFilesInput {
  create: DeploymentCreateWithoutFilesInput
  update: DeploymentUpdateWithoutFilesDataInput
  upsert: DeploymentUpsertWithoutFilesInput
  delete: Boolean
  disconnect: Boolean
  connect: DeploymentWhereUniqueInput
}

input DeploymentUpdateOneWithoutTagsInput {
  create: DeploymentCreateWithoutTagsInput
  update: DeploymentUpdateWithoutTagsDataInput
  upsert: DeploymentUpsertWithoutTagsInput
  delete: Boolean
  disconnect: Boolean
  connect: DeploymentWhereUniqueInput
}

input DeploymentUpdateWithoutActiveServiceDataInput {
  type: DeploymentType
  subhost: String
  space: SpaceUpdateOneRequiredWithoutDeploymentsInput
  service: ServiceUpdateOneWithoutDeploymentsInput
  app: AppUpdateOneInput
  instances: InstanceUpdateManyWithoutDeploymentInput
  status: DeploymentStatus
  error: String
  progress: String
  mode: DeploymentMode
  build: InstanceUpdateOneInput
  files: ArtifactUpdateManyWithoutDeployInput
  root: ArtifactUpdateManyInput
  desc: String
  tags: ServiceTagUpdateManyWithoutDeploymentInput
  tagsHistory: ServiceTagUpdateManyWithoutHistoryInput
  events: EventUpdateManyWithoutDeploymentInput
  config: Json
}

input DeploymentUpdateWithoutEventsDataInput {
  type: DeploymentType
  subhost: String
  space: SpaceUpdateOneRequiredWithoutDeploymentsInput
  service: ServiceUpdateOneWithoutDeploymentsInput
  app: AppUpdateOneInput
  instances: InstanceUpdateManyWithoutDeploymentInput
  activeService: ServiceUpdateOneWithoutActiveDeploymentInput
  status: DeploymentStatus
  error: String
  progress: String
  mode: DeploymentMode
  build: InstanceUpdateOneInput
  files: ArtifactUpdateManyWithoutDeployInput
  root: ArtifactUpdateManyInput
  desc: String
  tags: ServiceTagUpdateManyWithoutDeploymentInput
  tagsHistory: ServiceTagUpdateManyWithoutHistoryInput
  config: Json
}

input DeploymentUpdateWithoutFilesDataInput {
  type: DeploymentType
  subhost: String
  space: SpaceUpdateOneRequiredWithoutDeploymentsInput
  service: ServiceUpdateOneWithoutDeploymentsInput
  app: AppUpdateOneInput
  instances: InstanceUpdateManyWithoutDeploymentInput
  activeService: ServiceUpdateOneWithoutActiveDeploymentInput
  status: DeploymentStatus
  error: String
  progress: String
  mode: DeploymentMode
  build: InstanceUpdateOneInput
  root: ArtifactUpdateManyInput
  desc: String
  tags: ServiceTagUpdateManyWithoutDeploymentInput
  tagsHistory: ServiceTagUpdateManyWithoutHistoryInput
  events: EventUpdateManyWithoutDeploymentInput
  config: Json
}

input DeploymentUpdateWithoutInstancesDataInput {
  type: DeploymentType
  subhost: String
  space: SpaceUpdateOneRequiredWithoutDeploymentsInput
  service: ServiceUpdateOneWithoutDeploymentsInput
  app: AppUpdateOneInput
  activeService: ServiceUpdateOneWithoutActiveDeploymentInput
  status: DeploymentStatus
  error: String
  progress: String
  mode: DeploymentMode
  build: InstanceUpdateOneInput
  files: ArtifactUpdateManyWithoutDeployInput
  root: ArtifactUpdateManyInput
  desc: String
  tags: ServiceTagUpdateManyWithoutDeploymentInput
  tagsHistory: ServiceTagUpdateManyWithoutHistoryInput
  events: EventUpdateManyWithoutDeploymentInput
  config: Json
}

input DeploymentUpdateWithoutServiceDataInput {
  type: DeploymentType
  subhost: String
  space: SpaceUpdateOneRequiredWithoutDeploymentsInput
  app: AppUpdateOneInput
  instances: InstanceUpdateManyWithoutDeploymentInput
  activeService: ServiceUpdateOneWithoutActiveDeploymentInput
  status: DeploymentStatus
  error: String
  progress: String
  mode: DeploymentMode
  build: InstanceUpdateOneInput
  files: ArtifactUpdateManyWithoutDeployInput
  root: ArtifactUpdateManyInput
  desc: String
  tags: ServiceTagUpdateManyWithoutDeploymentInput
  tagsHistory: ServiceTagUpdateManyWithoutHistoryInput
  events: EventUpdateManyWithoutDeploymentInput
  config: Json
}

input DeploymentUpdateWithoutSpaceDataInput {
  type: DeploymentType
  subhost: String
  service: ServiceUpdateOneWithoutDeploymentsInput
  app: AppUpdateOneInput
  instances: InstanceUpdateManyWithoutDeploymentInput
  activeService: ServiceUpdateOneWithoutActiveDeploymentInput
  status: DeploymentStatus
  error: String
  progress: String
  mode: DeploymentMode
  build: InstanceUpdateOneInput
  files: ArtifactUpdateManyWithoutDeployInput
  root: ArtifactUpdateManyInput
  desc: String
  tags: ServiceTagUpdateManyWithoutDeploymentInput
  tagsHistory: ServiceTagUpdateManyWithoutHistoryInput
  events: EventUpdateManyWithoutDeploymentInput
  config: Json
}

input DeploymentUpdateWithoutTagsDataInput {
  type: DeploymentType
  subhost: String
  space: SpaceUpdateOneRequiredWithoutDeploymentsInput
  service: ServiceUpdateOneWithoutDeploymentsInput
  app: AppUpdateOneInput
  instances: InstanceUpdateManyWithoutDeploymentInput
  activeService: ServiceUpdateOneWithoutActiveDeploymentInput
  status: DeploymentStatus
  error: String
  progress: String
  mode: DeploymentMode
  build: InstanceUpdateOneInput
  files: ArtifactUpdateManyWithoutDeployInput
  root: ArtifactUpdateManyInput
  desc: String
  tagsHistory: ServiceTagUpdateManyWithoutHistoryInput
  events: EventUpdateManyWithoutDeploymentInput
  config: Json
}

input DeploymentUpdateWithoutTagsHistoryDataInput {
  type: DeploymentType
  subhost: String
  space: SpaceUpdateOneRequiredWithoutDeploymentsInput
  service: ServiceUpdateOneWithoutDeploymentsInput
  app: AppUpdateOneInput
  instances: InstanceUpdateManyWithoutDeploymentInput
  activeService: ServiceUpdateOneWithoutActiveDeploymentInput
  status: DeploymentStatus
  error: String
  progress: String
  mode: DeploymentMode
  build: InstanceUpdateOneInput
  files: ArtifactUpdateManyWithoutDeployInput
  root: ArtifactUpdateManyInput
  desc: String
  tags: ServiceTagUpdateManyWithoutDeploymentInput
  events: EventUpdateManyWithoutDeploymentInput
  config: Json
}

input DeploymentUpdateWithWhereUniqueWithoutServiceInput {
  where: DeploymentWhereUniqueInput!
  data: DeploymentUpdateWithoutServiceDataInput!
}

input DeploymentUpdateWithWhereUniqueWithoutSpaceInput {
  where: DeploymentWhereUniqueInput!
  data: DeploymentUpdateWithoutSpaceDataInput!
}

input DeploymentUpdateWithWhereUniqueWithoutTagsHistoryInput {
  where: DeploymentWhereUniqueInput!
  data: DeploymentUpdateWithoutTagsHistoryDataInput!
}

input DeploymentUpsertNestedInput {
  update: DeploymentUpdateDataInput!
  create: DeploymentCreateInput!
}

input DeploymentUpsertWithoutActiveServiceInput {
  update: DeploymentUpdateWithoutActiveServiceDataInput!
  create: DeploymentCreateWithoutActiveServiceInput!
}

input DeploymentUpsertWithoutEventsInput {
  update: DeploymentUpdateWithoutEventsDataInput!
  create: DeploymentCreateWithoutEventsInput!
}

input DeploymentUpsertWithoutFilesInput {
  update: DeploymentUpdateWithoutFilesDataInput!
  create: DeploymentCreateWithoutFilesInput!
}

input DeploymentUpsertWithoutInstancesInput {
  update: DeploymentUpdateWithoutInstancesDataInput!
  create: DeploymentCreateWithoutInstancesInput!
}

input DeploymentUpsertWithoutTagsInput {
  update: DeploymentUpdateWithoutTagsDataInput!
  create: DeploymentCreateWithoutTagsInput!
}

input DeploymentUpsertWithWhereUniqueWithoutServiceInput {
  where: DeploymentWhereUniqueInput!
  update: DeploymentUpdateWithoutServiceDataInput!
  create: DeploymentCreateWithoutServiceInput!
}

input DeploymentUpsertWithWhereUniqueWithoutSpaceInput {
  where: DeploymentWhereUniqueInput!
  update: DeploymentUpdateWithoutSpaceDataInput!
  create: DeploymentCreateWithoutSpaceInput!
}

input DeploymentUpsertWithWhereUniqueWithoutTagsHistoryInput {
  where: DeploymentWhereUniqueInput!
  update: DeploymentUpdateWithoutTagsHistoryDataInput!
  create: DeploymentCreateWithoutTagsHistoryInput!
}

input DeploymentWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  type: DeploymentType
  type_not: DeploymentType
  type_in: [DeploymentType!]
  type_not_in: [DeploymentType!]
  subhost: String
  subhost_not: String
  subhost_in: [String!]
  subhost_not_in: [String!]
  subhost_lt: String
  subhost_lte: String
  subhost_gt: String
  subhost_gte: String
  subhost_contains: String
  subhost_not_contains: String
  subhost_starts_with: String
  subhost_not_starts_with: String
  subhost_ends_with: String
  subhost_not_ends_with: String
  space: SpaceWhereInput
  service: ServiceWhereInput
  app: AppWhereInput
  instances_every: InstanceWhereInput
  instances_some: InstanceWhereInput
  instances_none: InstanceWhereInput
  activeService: ServiceWhereInput
  status: DeploymentStatus
  status_not: DeploymentStatus
  status_in: [DeploymentStatus!]
  status_not_in: [DeploymentStatus!]
  error: String
  error_not: String
  error_in: [String!]
  error_not_in: [String!]
  error_lt: String
  error_lte: String
  error_gt: String
  error_gte: String
  error_contains: String
  error_not_contains: String
  error_starts_with: String
  error_not_starts_with: String
  error_ends_with: String
  error_not_ends_with: String
  progress: String
  progress_not: String
  progress_in: [String!]
  progress_not_in: [String!]
  progress_lt: String
  progress_lte: String
  progress_gt: String
  progress_gte: String
  progress_contains: String
  progress_not_contains: String
  progress_starts_with: String
  progress_not_starts_with: String
  progress_ends_with: String
  progress_not_ends_with: String
  mode: DeploymentMode
  mode_not: DeploymentMode
  mode_in: [DeploymentMode!]
  mode_not_in: [DeploymentMode!]
  build: InstanceWhereInput
  files_every: ArtifactWhereInput
  files_some: ArtifactWhereInput
  files_none: ArtifactWhereInput
  root_every: ArtifactWhereInput
  root_some: ArtifactWhereInput
  root_none: ArtifactWhereInput
  desc: String
  desc_not: String
  desc_in: [String!]
  desc_not_in: [String!]
  desc_lt: String
  desc_lte: String
  desc_gt: String
  desc_gte: String
  desc_contains: String
  desc_not_contains: String
  desc_starts_with: String
  desc_not_starts_with: String
  desc_ends_with: String
  desc_not_ends_with: String
  tags_every: ServiceTagWhereInput
  tags_some: ServiceTagWhereInput
  tags_none: ServiceTagWhereInput
  tagsHistory_every: ServiceTagWhereInput
  tagsHistory_some: ServiceTagWhereInput
  tagsHistory_none: ServiceTagWhereInput
  events_every: EventWhereInput
  events_some: EventWhereInput
  events_none: EventWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [DeploymentWhereInput!]
  OR: [DeploymentWhereInput!]
  NOT: [DeploymentWhereInput!]
}

input DeploymentWhereUniqueInput {
  id: ID
  subhost: String
}

type Event {
  id: ID!
  code: String!
  type: EventType!
  actor: Auth
  space: Space
  auth: Auth
  service: Service
  deployment: Deployment
  image: Image
  variable: Variable
  data: Json
  createdAt: DateTime!
}

type EventConnection {
  pageInfo: PageInfo!
  edges: [EventEdge]!
  aggregate: AggregateEvent!
}

input EventCreateInput {
  code: String!
  type: EventType!
  actor: AuthCreateOneWithoutActionsInput
  space: SpaceCreateOneWithoutEventsInput
  auth: AuthCreateOneWithoutEventsInput
  service: ServiceCreateOneWithoutEventsInput
  deployment: DeploymentCreateOneWithoutEventsInput
  image: ImageCreateOneWithoutEventsInput
  variable: VariableCreateOneWithoutEventsInput
  data: Json
}

input EventCreateManyWithoutActorInput {
  create: [EventCreateWithoutActorInput!]
  connect: [EventWhereUniqueInput!]
}

input EventCreateManyWithoutAuthInput {
  create: [EventCreateWithoutAuthInput!]
  connect: [EventWhereUniqueInput!]
}

input EventCreateManyWithoutDeploymentInput {
  create: [EventCreateWithoutDeploymentInput!]
  connect: [EventWhereUniqueInput!]
}

input EventCreateManyWithoutImageInput {
  create: [EventCreateWithoutImageInput!]
  connect: [EventWhereUniqueInput!]
}

input EventCreateManyWithoutServiceInput {
  create: [EventCreateWithoutServiceInput!]
  connect: [EventWhereUniqueInput!]
}

input EventCreateManyWithoutSpaceInput {
  create: [EventCreateWithoutSpaceInput!]
  connect: [EventWhereUniqueInput!]
}

input EventCreateManyWithoutVariableInput {
  create: [EventCreateWithoutVariableInput!]
  connect: [EventWhereUniqueInput!]
}

input EventCreateWithoutActorInput {
  code: String!
  type: EventType!
  space: SpaceCreateOneWithoutEventsInput
  auth: AuthCreateOneWithoutEventsInput
  service: ServiceCreateOneWithoutEventsInput
  deployment: DeploymentCreateOneWithoutEventsInput
  image: ImageCreateOneWithoutEventsInput
  variable: VariableCreateOneWithoutEventsInput
  data: Json
}

input EventCreateWithoutAuthInput {
  code: String!
  type: EventType!
  actor: AuthCreateOneWithoutActionsInput
  space: SpaceCreateOneWithoutEventsInput
  service: ServiceCreateOneWithoutEventsInput
  deployment: DeploymentCreateOneWithoutEventsInput
  image: ImageCreateOneWithoutEventsInput
  variable: VariableCreateOneWithoutEventsInput
  data: Json
}

input EventCreateWithoutDeploymentInput {
  code: String!
  type: EventType!
  actor: AuthCreateOneWithoutActionsInput
  space: SpaceCreateOneWithoutEventsInput
  auth: AuthCreateOneWithoutEventsInput
  service: ServiceCreateOneWithoutEventsInput
  image: ImageCreateOneWithoutEventsInput
  variable: VariableCreateOneWithoutEventsInput
  data: Json
}

input EventCreateWithoutImageInput {
  code: String!
  type: EventType!
  actor: AuthCreateOneWithoutActionsInput
  space: SpaceCreateOneWithoutEventsInput
  auth: AuthCreateOneWithoutEventsInput
  service: ServiceCreateOneWithoutEventsInput
  deployment: DeploymentCreateOneWithoutEventsInput
  variable: VariableCreateOneWithoutEventsInput
  data: Json
}

input EventCreateWithoutServiceInput {
  code: String!
  type: EventType!
  actor: AuthCreateOneWithoutActionsInput
  space: SpaceCreateOneWithoutEventsInput
  auth: AuthCreateOneWithoutEventsInput
  deployment: DeploymentCreateOneWithoutEventsInput
  image: ImageCreateOneWithoutEventsInput
  variable: VariableCreateOneWithoutEventsInput
  data: Json
}

input EventCreateWithoutSpaceInput {
  code: String!
  type: EventType!
  actor: AuthCreateOneWithoutActionsInput
  auth: AuthCreateOneWithoutEventsInput
  service: ServiceCreateOneWithoutEventsInput
  deployment: DeploymentCreateOneWithoutEventsInput
  image: ImageCreateOneWithoutEventsInput
  variable: VariableCreateOneWithoutEventsInput
  data: Json
}

input EventCreateWithoutVariableInput {
  code: String!
  type: EventType!
  actor: AuthCreateOneWithoutActionsInput
  space: SpaceCreateOneWithoutEventsInput
  auth: AuthCreateOneWithoutEventsInput
  service: ServiceCreateOneWithoutEventsInput
  deployment: DeploymentCreateOneWithoutEventsInput
  image: ImageCreateOneWithoutEventsInput
  data: Json
}

type EventEdge {
  node: Event!
  cursor: String!
}

enum EventOrderByInput {
  id_ASC
  id_DESC
  code_ASC
  code_DESC
  type_ASC
  type_DESC
  data_ASC
  data_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type EventPreviousValues {
  id: ID!
  code: String!
  type: EventType!
  data: Json
  createdAt: DateTime!
}

input EventScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  code: String
  code_not: String
  code_in: [String!]
  code_not_in: [String!]
  code_lt: String
  code_lte: String
  code_gt: String
  code_gte: String
  code_contains: String
  code_not_contains: String
  code_starts_with: String
  code_not_starts_with: String
  code_ends_with: String
  code_not_ends_with: String
  type: EventType
  type_not: EventType
  type_in: [EventType!]
  type_not_in: [EventType!]
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [EventScalarWhereInput!]
  OR: [EventScalarWhereInput!]
  NOT: [EventScalarWhereInput!]
}

type EventSubscriptionPayload {
  mutation: MutationType!
  node: Event
  updatedFields: [String!]
  previousValues: EventPreviousValues
}

input EventSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: EventWhereInput
  AND: [EventSubscriptionWhereInput!]
  OR: [EventSubscriptionWhereInput!]
  NOT: [EventSubscriptionWhereInput!]
}

enum EventType {
  USER
  SYSTEM
}

input EventUpdateInput {
  code: String
  type: EventType
  actor: AuthUpdateOneWithoutActionsInput
  space: SpaceUpdateOneWithoutEventsInput
  auth: AuthUpdateOneWithoutEventsInput
  service: ServiceUpdateOneWithoutEventsInput
  deployment: DeploymentUpdateOneWithoutEventsInput
  image: ImageUpdateOneWithoutEventsInput
  variable: VariableUpdateOneWithoutEventsInput
  data: Json
}

input EventUpdateManyDataInput {
  code: String
  type: EventType
  data: Json
}

input EventUpdateManyMutationInput {
  code: String
  type: EventType
  data: Json
}

input EventUpdateManyWithoutActorInput {
  create: [EventCreateWithoutActorInput!]
  delete: [EventWhereUniqueInput!]
  connect: [EventWhereUniqueInput!]
  set: [EventWhereUniqueInput!]
  disconnect: [EventWhereUniqueInput!]
  update: [EventUpdateWithWhereUniqueWithoutActorInput!]
  upsert: [EventUpsertWithWhereUniqueWithoutActorInput!]
  deleteMany: [EventScalarWhereInput!]
  updateMany: [EventUpdateManyWithWhereNestedInput!]
}

input EventUpdateManyWithoutAuthInput {
  create: [EventCreateWithoutAuthInput!]
  delete: [EventWhereUniqueInput!]
  connect: [EventWhereUniqueInput!]
  set: [EventWhereUniqueInput!]
  disconnect: [EventWhereUniqueInput!]
  update: [EventUpdateWithWhereUniqueWithoutAuthInput!]
  upsert: [EventUpsertWithWhereUniqueWithoutAuthInput!]
  deleteMany: [EventScalarWhereInput!]
  updateMany: [EventUpdateManyWithWhereNestedInput!]
}

input EventUpdateManyWithoutDeploymentInput {
  create: [EventCreateWithoutDeploymentInput!]
  delete: [EventWhereUniqueInput!]
  connect: [EventWhereUniqueInput!]
  set: [EventWhereUniqueInput!]
  disconnect: [EventWhereUniqueInput!]
  update: [EventUpdateWithWhereUniqueWithoutDeploymentInput!]
  upsert: [EventUpsertWithWhereUniqueWithoutDeploymentInput!]
  deleteMany: [EventScalarWhereInput!]
  updateMany: [EventUpdateManyWithWhereNestedInput!]
}

input EventUpdateManyWithoutImageInput {
  create: [EventCreateWithoutImageInput!]
  delete: [EventWhereUniqueInput!]
  connect: [EventWhereUniqueInput!]
  set: [EventWhereUniqueInput!]
  disconnect: [EventWhereUniqueInput!]
  update: [EventUpdateWithWhereUniqueWithoutImageInput!]
  upsert: [EventUpsertWithWhereUniqueWithoutImageInput!]
  deleteMany: [EventScalarWhereInput!]
  updateMany: [EventUpdateManyWithWhereNestedInput!]
}

input EventUpdateManyWithoutServiceInput {
  create: [EventCreateWithoutServiceInput!]
  delete: [EventWhereUniqueInput!]
  connect: [EventWhereUniqueInput!]
  set: [EventWhereUniqueInput!]
  disconnect: [EventWhereUniqueInput!]
  update: [EventUpdateWithWhereUniqueWithoutServiceInput!]
  upsert: [EventUpsertWithWhereUniqueWithoutServiceInput!]
  deleteMany: [EventScalarWhereInput!]
  updateMany: [EventUpdateManyWithWhereNestedInput!]
}

input EventUpdateManyWithoutSpaceInput {
  create: [EventCreateWithoutSpaceInput!]
  delete: [EventWhereUniqueInput!]
  connect: [EventWhereUniqueInput!]
  set: [EventWhereUniqueInput!]
  disconnect: [EventWhereUniqueInput!]
  update: [EventUpdateWithWhereUniqueWithoutSpaceInput!]
  upsert: [EventUpsertWithWhereUniqueWithoutSpaceInput!]
  deleteMany: [EventScalarWhereInput!]
  updateMany: [EventUpdateManyWithWhereNestedInput!]
}

input EventUpdateManyWithoutVariableInput {
  create: [EventCreateWithoutVariableInput!]
  delete: [EventWhereUniqueInput!]
  connect: [EventWhereUniqueInput!]
  set: [EventWhereUniqueInput!]
  disconnect: [EventWhereUniqueInput!]
  update: [EventUpdateWithWhereUniqueWithoutVariableInput!]
  upsert: [EventUpsertWithWhereUniqueWithoutVariableInput!]
  deleteMany: [EventScalarWhereInput!]
  updateMany: [EventUpdateManyWithWhereNestedInput!]
}

input EventUpdateManyWithWhereNestedInput {
  where: EventScalarWhereInput!
  data: EventUpdateManyDataInput!
}

input EventUpdateWithoutActorDataInput {
  code: String
  type: EventType
  space: SpaceUpdateOneWithoutEventsInput
  auth: AuthUpdateOneWithoutEventsInput
  service: ServiceUpdateOneWithoutEventsInput
  deployment: DeploymentUpdateOneWithoutEventsInput
  image: ImageUpdateOneWithoutEventsInput
  variable: VariableUpdateOneWithoutEventsInput
  data: Json
}

input EventUpdateWithoutAuthDataInput {
  code: String
  type: EventType
  actor: AuthUpdateOneWithoutActionsInput
  space: SpaceUpdateOneWithoutEventsInput
  service: ServiceUpdateOneWithoutEventsInput
  deployment: DeploymentUpdateOneWithoutEventsInput
  image: ImageUpdateOneWithoutEventsInput
  variable: VariableUpdateOneWithoutEventsInput
  data: Json
}

input EventUpdateWithoutDeploymentDataInput {
  code: String
  type: EventType
  actor: AuthUpdateOneWithoutActionsInput
  space: SpaceUpdateOneWithoutEventsInput
  auth: AuthUpdateOneWithoutEventsInput
  service: ServiceUpdateOneWithoutEventsInput
  image: ImageUpdateOneWithoutEventsInput
  variable: VariableUpdateOneWithoutEventsInput
  data: Json
}

input EventUpdateWithoutImageDataInput {
  code: String
  type: EventType
  actor: AuthUpdateOneWithoutActionsInput
  space: SpaceUpdateOneWithoutEventsInput
  auth: AuthUpdateOneWithoutEventsInput
  service: ServiceUpdateOneWithoutEventsInput
  deployment: DeploymentUpdateOneWithoutEventsInput
  variable: VariableUpdateOneWithoutEventsInput
  data: Json
}

input EventUpdateWithoutServiceDataInput {
  code: String
  type: EventType
  actor: AuthUpdateOneWithoutActionsInput
  space: SpaceUpdateOneWithoutEventsInput
  auth: AuthUpdateOneWithoutEventsInput
  deployment: DeploymentUpdateOneWithoutEventsInput
  image: ImageUpdateOneWithoutEventsInput
  variable: VariableUpdateOneWithoutEventsInput
  data: Json
}

input EventUpdateWithoutSpaceDataInput {
  code: String
  type: EventType
  actor: AuthUpdateOneWithoutActionsInput
  auth: AuthUpdateOneWithoutEventsInput
  service: ServiceUpdateOneWithoutEventsInput
  deployment: DeploymentUpdateOneWithoutEventsInput
  image: ImageUpdateOneWithoutEventsInput
  variable: VariableUpdateOneWithoutEventsInput
  data: Json
}

input EventUpdateWithoutVariableDataInput {
  code: String
  type: EventType
  actor: AuthUpdateOneWithoutActionsInput
  space: SpaceUpdateOneWithoutEventsInput
  auth: AuthUpdateOneWithoutEventsInput
  service: ServiceUpdateOneWithoutEventsInput
  deployment: DeploymentUpdateOneWithoutEventsInput
  image: ImageUpdateOneWithoutEventsInput
  data: Json
}

input EventUpdateWithWhereUniqueWithoutActorInput {
  where: EventWhereUniqueInput!
  data: EventUpdateWithoutActorDataInput!
}

input EventUpdateWithWhereUniqueWithoutAuthInput {
  where: EventWhereUniqueInput!
  data: EventUpdateWithoutAuthDataInput!
}

input EventUpdateWithWhereUniqueWithoutDeploymentInput {
  where: EventWhereUniqueInput!
  data: EventUpdateWithoutDeploymentDataInput!
}

input EventUpdateWithWhereUniqueWithoutImageInput {
  where: EventWhereUniqueInput!
  data: EventUpdateWithoutImageDataInput!
}

input EventUpdateWithWhereUniqueWithoutServiceInput {
  where: EventWhereUniqueInput!
  data: EventUpdateWithoutServiceDataInput!
}

input EventUpdateWithWhereUniqueWithoutSpaceInput {
  where: EventWhereUniqueInput!
  data: EventUpdateWithoutSpaceDataInput!
}

input EventUpdateWithWhereUniqueWithoutVariableInput {
  where: EventWhereUniqueInput!
  data: EventUpdateWithoutVariableDataInput!
}

input EventUpsertWithWhereUniqueWithoutActorInput {
  where: EventWhereUniqueInput!
  update: EventUpdateWithoutActorDataInput!
  create: EventCreateWithoutActorInput!
}

input EventUpsertWithWhereUniqueWithoutAuthInput {
  where: EventWhereUniqueInput!
  update: EventUpdateWithoutAuthDataInput!
  create: EventCreateWithoutAuthInput!
}

input EventUpsertWithWhereUniqueWithoutDeploymentInput {
  where: EventWhereUniqueInput!
  update: EventUpdateWithoutDeploymentDataInput!
  create: EventCreateWithoutDeploymentInput!
}

input EventUpsertWithWhereUniqueWithoutImageInput {
  where: EventWhereUniqueInput!
  update: EventUpdateWithoutImageDataInput!
  create: EventCreateWithoutImageInput!
}

input EventUpsertWithWhereUniqueWithoutServiceInput {
  where: EventWhereUniqueInput!
  update: EventUpdateWithoutServiceDataInput!
  create: EventCreateWithoutServiceInput!
}

input EventUpsertWithWhereUniqueWithoutSpaceInput {
  where: EventWhereUniqueInput!
  update: EventUpdateWithoutSpaceDataInput!
  create: EventCreateWithoutSpaceInput!
}

input EventUpsertWithWhereUniqueWithoutVariableInput {
  where: EventWhereUniqueInput!
  update: EventUpdateWithoutVariableDataInput!
  create: EventCreateWithoutVariableInput!
}

input EventWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  code: String
  code_not: String
  code_in: [String!]
  code_not_in: [String!]
  code_lt: String
  code_lte: String
  code_gt: String
  code_gte: String
  code_contains: String
  code_not_contains: String
  code_starts_with: String
  code_not_starts_with: String
  code_ends_with: String
  code_not_ends_with: String
  type: EventType
  type_not: EventType
  type_in: [EventType!]
  type_not_in: [EventType!]
  actor: AuthWhereInput
  space: SpaceWhereInput
  auth: AuthWhereInput
  service: ServiceWhereInput
  deployment: DeploymentWhereInput
  image: ImageWhereInput
  variable: VariableWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [EventWhereInput!]
  OR: [EventWhereInput!]
  NOT: [EventWhereInput!]
}

input EventWhereUniqueInput {
  id: ID
}

type Host {
  id: ID!
  uuid: String
  name: String
  status: HostStatus
  cpu: Int
  memory: Int
  machineType: String
  platform: String
  startedAt: DateTime
  removedAt: DateTime
}

type HostConnection {
  pageInfo: PageInfo!
  edges: [HostEdge]!
  aggregate: AggregateHost!
}

input HostCreateInput {
  uuid: String
  name: String
  status: HostStatus
  cpu: Int
  memory: Int
  machineType: String
  platform: String
  startedAt: DateTime
  removedAt: DateTime
}

type HostEdge {
  node: Host!
  cursor: String!
}

enum HostOrderByInput {
  id_ASC
  id_DESC
  uuid_ASC
  uuid_DESC
  name_ASC
  name_DESC
  status_ASC
  status_DESC
  cpu_ASC
  cpu_DESC
  memory_ASC
  memory_DESC
  machineType_ASC
  machineType_DESC
  platform_ASC
  platform_DESC
  startedAt_ASC
  startedAt_DESC
  removedAt_ASC
  removedAt_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type HostPreviousValues {
  id: ID!
  uuid: String
  name: String
  status: HostStatus
  cpu: Int
  memory: Int
  machineType: String
  platform: String
  startedAt: DateTime
  removedAt: DateTime
}

enum HostStatus {
  ACTIVE
  REMOVED
}

type HostSubscriptionPayload {
  mutation: MutationType!
  node: Host
  updatedFields: [String!]
  previousValues: HostPreviousValues
}

input HostSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: HostWhereInput
  AND: [HostSubscriptionWhereInput!]
  OR: [HostSubscriptionWhereInput!]
  NOT: [HostSubscriptionWhereInput!]
}

input HostUpdateInput {
  uuid: String
  name: String
  status: HostStatus
  cpu: Int
  memory: Int
  machineType: String
  platform: String
  startedAt: DateTime
  removedAt: DateTime
}

input HostUpdateManyMutationInput {
  uuid: String
  name: String
  status: HostStatus
  cpu: Int
  memory: Int
  machineType: String
  platform: String
  startedAt: DateTime
  removedAt: DateTime
}

input HostWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  uuid: String
  uuid_not: String
  uuid_in: [String!]
  uuid_not_in: [String!]
  uuid_lt: String
  uuid_lte: String
  uuid_gt: String
  uuid_gte: String
  uuid_contains: String
  uuid_not_contains: String
  uuid_starts_with: String
  uuid_not_starts_with: String
  uuid_ends_with: String
  uuid_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  status: HostStatus
  status_not: HostStatus
  status_in: [HostStatus!]
  status_not_in: [HostStatus!]
  cpu: Int
  cpu_not: Int
  cpu_in: [Int!]
  cpu_not_in: [Int!]
  cpu_lt: Int
  cpu_lte: Int
  cpu_gt: Int
  cpu_gte: Int
  memory: Int
  memory_not: Int
  memory_in: [Int!]
  memory_not_in: [Int!]
  memory_lt: Int
  memory_lte: Int
  memory_gt: Int
  memory_gte: Int
  machineType: String
  machineType_not: String
  machineType_in: [String!]
  machineType_not_in: [String!]
  machineType_lt: String
  machineType_lte: String
  machineType_gt: String
  machineType_gte: String
  machineType_contains: String
  machineType_not_contains: String
  machineType_starts_with: String
  machineType_not_starts_with: String
  machineType_ends_with: String
  machineType_not_ends_with: String
  platform: String
  platform_not: String
  platform_in: [String!]
  platform_not_in: [String!]
  platform_lt: String
  platform_lte: String
  platform_gt: String
  platform_gte: String
  platform_contains: String
  platform_not_contains: String
  platform_starts_with: String
  platform_not_starts_with: String
  platform_ends_with: String
  platform_not_ends_with: String
  startedAt: DateTime
  startedAt_not: DateTime
  startedAt_in: [DateTime!]
  startedAt_not_in: [DateTime!]
  startedAt_lt: DateTime
  startedAt_lte: DateTime
  startedAt_gt: DateTime
  startedAt_gte: DateTime
  removedAt: DateTime
  removedAt_not: DateTime
  removedAt_in: [DateTime!]
  removedAt_not_in: [DateTime!]
  removedAt_lt: DateTime
  removedAt_lte: DateTime
  removedAt_gt: DateTime
  removedAt_gte: DateTime
  AND: [HostWhereInput!]
  OR: [HostWhereInput!]
  NOT: [HostWhereInput!]
}

input HostWhereUniqueInput {
  id: ID
  uuid: String
}

type Image {
  id: ID!
  name: String!
  desc: String
  readme: String
  publicity: ImagePublicity
  _unique_name: String!
  space: Space!
  imageDigests(where: ImageDigestWhereInput, orderBy: ImageDigestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ImageDigest!]
  events(where: EventWhereInput, orderBy: EventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Event!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ImageConnection {
  pageInfo: PageInfo!
  edges: [ImageEdge]!
  aggregate: AggregateImage!
}

input ImageCreateInput {
  name: String!
  desc: String
  readme: String
  publicity: ImagePublicity
  _unique_name: String!
  space: SpaceCreateOneWithoutImagesInput!
  imageDigests: ImageDigestCreateManyWithoutImageInput
  events: EventCreateManyWithoutImageInput
}

input ImageCreateManyInput {
  create: [ImageCreateInput!]
  connect: [ImageWhereUniqueInput!]
}

input ImageCreateManyWithoutSpaceInput {
  create: [ImageCreateWithoutSpaceInput!]
  connect: [ImageWhereUniqueInput!]
}

input ImageCreateOneWithoutEventsInput {
  create: ImageCreateWithoutEventsInput
  connect: ImageWhereUniqueInput
}

input ImageCreateOneWithoutImageDigestsInput {
  create: ImageCreateWithoutImageDigestsInput
  connect: ImageWhereUniqueInput
}

input ImageCreateWithoutEventsInput {
  name: String!
  desc: String
  readme: String
  publicity: ImagePublicity
  _unique_name: String!
  space: SpaceCreateOneWithoutImagesInput!
  imageDigests: ImageDigestCreateManyWithoutImageInput
}

input ImageCreateWithoutImageDigestsInput {
  name: String!
  desc: String
  readme: String
  publicity: ImagePublicity
  _unique_name: String!
  space: SpaceCreateOneWithoutImagesInput!
  events: EventCreateManyWithoutImageInput
}

input ImageCreateWithoutSpaceInput {
  name: String!
  desc: String
  readme: String
  publicity: ImagePublicity
  _unique_name: String!
  imageDigests: ImageDigestCreateManyWithoutImageInput
  events: EventCreateManyWithoutImageInput
}

type ImageDigest {
  id: ID!
  digest: String
  mediaType: String
  tags(where: ImageTagWhereInput, orderBy: ImageTagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ImageTag!]
  size: Int
  image: Image
  manifestUrl: String
  manifest: Json
  space: Space!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ImageDigestConnection {
  pageInfo: PageInfo!
  edges: [ImageDigestEdge]!
  aggregate: AggregateImageDigest!
}

input ImageDigestCreateInput {
  digest: String
  mediaType: String
  tags: ImageTagCreateManyWithoutImageDigestInput
  size: Int
  image: ImageCreateOneWithoutImageDigestsInput
  manifestUrl: String
  manifest: Json
  space: SpaceCreateOneWithoutImageDigestsInput!
}

input ImageDigestCreateManyWithoutImageInput {
  create: [ImageDigestCreateWithoutImageInput!]
  connect: [ImageDigestWhereUniqueInput!]
}

input ImageDigestCreateManyWithoutSpaceInput {
  create: [ImageDigestCreateWithoutSpaceInput!]
  connect: [ImageDigestWhereUniqueInput!]
}

input ImageDigestCreateOneWithoutTagsInput {
  create: ImageDigestCreateWithoutTagsInput
  connect: ImageDigestWhereUniqueInput
}

input ImageDigestCreateWithoutImageInput {
  digest: String
  mediaType: String
  tags: ImageTagCreateManyWithoutImageDigestInput
  size: Int
  manifestUrl: String
  manifest: Json
  space: SpaceCreateOneWithoutImageDigestsInput!
}

input ImageDigestCreateWithoutSpaceInput {
  digest: String
  mediaType: String
  tags: ImageTagCreateManyWithoutImageDigestInput
  size: Int
  image: ImageCreateOneWithoutImageDigestsInput
  manifestUrl: String
  manifest: Json
}

input ImageDigestCreateWithoutTagsInput {
  digest: String
  mediaType: String
  size: Int
  image: ImageCreateOneWithoutImageDigestsInput
  manifestUrl: String
  manifest: Json
  space: SpaceCreateOneWithoutImageDigestsInput!
}

type ImageDigestEdge {
  node: ImageDigest!
  cursor: String!
}

enum ImageDigestOrderByInput {
  id_ASC
  id_DESC
  digest_ASC
  digest_DESC
  mediaType_ASC
  mediaType_DESC
  size_ASC
  size_DESC
  manifestUrl_ASC
  manifestUrl_DESC
  manifest_ASC
  manifest_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ImageDigestPreviousValues {
  id: ID!
  digest: String
  mediaType: String
  size: Int
  manifestUrl: String
  manifest: Json
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ImageDigestScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  digest: String
  digest_not: String
  digest_in: [String!]
  digest_not_in: [String!]
  digest_lt: String
  digest_lte: String
  digest_gt: String
  digest_gte: String
  digest_contains: String
  digest_not_contains: String
  digest_starts_with: String
  digest_not_starts_with: String
  digest_ends_with: String
  digest_not_ends_with: String
  mediaType: String
  mediaType_not: String
  mediaType_in: [String!]
  mediaType_not_in: [String!]
  mediaType_lt: String
  mediaType_lte: String
  mediaType_gt: String
  mediaType_gte: String
  mediaType_contains: String
  mediaType_not_contains: String
  mediaType_starts_with: String
  mediaType_not_starts_with: String
  mediaType_ends_with: String
  mediaType_not_ends_with: String
  size: Int
  size_not: Int
  size_in: [Int!]
  size_not_in: [Int!]
  size_lt: Int
  size_lte: Int
  size_gt: Int
  size_gte: Int
  manifestUrl: String
  manifestUrl_not: String
  manifestUrl_in: [String!]
  manifestUrl_not_in: [String!]
  manifestUrl_lt: String
  manifestUrl_lte: String
  manifestUrl_gt: String
  manifestUrl_gte: String
  manifestUrl_contains: String
  manifestUrl_not_contains: String
  manifestUrl_starts_with: String
  manifestUrl_not_starts_with: String
  manifestUrl_ends_with: String
  manifestUrl_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ImageDigestScalarWhereInput!]
  OR: [ImageDigestScalarWhereInput!]
  NOT: [ImageDigestScalarWhereInput!]
}

type ImageDigestSubscriptionPayload {
  mutation: MutationType!
  node: ImageDigest
  updatedFields: [String!]
  previousValues: ImageDigestPreviousValues
}

input ImageDigestSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ImageDigestWhereInput
  AND: [ImageDigestSubscriptionWhereInput!]
  OR: [ImageDigestSubscriptionWhereInput!]
  NOT: [ImageDigestSubscriptionWhereInput!]
}

input ImageDigestUpdateInput {
  digest: String
  mediaType: String
  tags: ImageTagUpdateManyWithoutImageDigestInput
  size: Int
  image: ImageUpdateOneWithoutImageDigestsInput
  manifestUrl: String
  manifest: Json
  space: SpaceUpdateOneRequiredWithoutImageDigestsInput
}

input ImageDigestUpdateManyDataInput {
  digest: String
  mediaType: String
  size: Int
  manifestUrl: String
  manifest: Json
}

input ImageDigestUpdateManyMutationInput {
  digest: String
  mediaType: String
  size: Int
  manifestUrl: String
  manifest: Json
}

input ImageDigestUpdateManyWithoutImageInput {
  create: [ImageDigestCreateWithoutImageInput!]
  delete: [ImageDigestWhereUniqueInput!]
  connect: [ImageDigestWhereUniqueInput!]
  set: [ImageDigestWhereUniqueInput!]
  disconnect: [ImageDigestWhereUniqueInput!]
  update: [ImageDigestUpdateWithWhereUniqueWithoutImageInput!]
  upsert: [ImageDigestUpsertWithWhereUniqueWithoutImageInput!]
  deleteMany: [ImageDigestScalarWhereInput!]
  updateMany: [ImageDigestUpdateManyWithWhereNestedInput!]
}

input ImageDigestUpdateManyWithoutSpaceInput {
  create: [ImageDigestCreateWithoutSpaceInput!]
  delete: [ImageDigestWhereUniqueInput!]
  connect: [ImageDigestWhereUniqueInput!]
  set: [ImageDigestWhereUniqueInput!]
  disconnect: [ImageDigestWhereUniqueInput!]
  update: [ImageDigestUpdateWithWhereUniqueWithoutSpaceInput!]
  upsert: [ImageDigestUpsertWithWhereUniqueWithoutSpaceInput!]
  deleteMany: [ImageDigestScalarWhereInput!]
  updateMany: [ImageDigestUpdateManyWithWhereNestedInput!]
}

input ImageDigestUpdateManyWithWhereNestedInput {
  where: ImageDigestScalarWhereInput!
  data: ImageDigestUpdateManyDataInput!
}

input ImageDigestUpdateOneWithoutTagsInput {
  create: ImageDigestCreateWithoutTagsInput
  update: ImageDigestUpdateWithoutTagsDataInput
  upsert: ImageDigestUpsertWithoutTagsInput
  delete: Boolean
  disconnect: Boolean
  connect: ImageDigestWhereUniqueInput
}

input ImageDigestUpdateWithoutImageDataInput {
  digest: String
  mediaType: String
  tags: ImageTagUpdateManyWithoutImageDigestInput
  size: Int
  manifestUrl: String
  manifest: Json
  space: SpaceUpdateOneRequiredWithoutImageDigestsInput
}

input ImageDigestUpdateWithoutSpaceDataInput {
  digest: String
  mediaType: String
  tags: ImageTagUpdateManyWithoutImageDigestInput
  size: Int
  image: ImageUpdateOneWithoutImageDigestsInput
  manifestUrl: String
  manifest: Json
}

input ImageDigestUpdateWithoutTagsDataInput {
  digest: String
  mediaType: String
  size: Int
  image: ImageUpdateOneWithoutImageDigestsInput
  manifestUrl: String
  manifest: Json
  space: SpaceUpdateOneRequiredWithoutImageDigestsInput
}

input ImageDigestUpdateWithWhereUniqueWithoutImageInput {
  where: ImageDigestWhereUniqueInput!
  data: ImageDigestUpdateWithoutImageDataInput!
}

input ImageDigestUpdateWithWhereUniqueWithoutSpaceInput {
  where: ImageDigestWhereUniqueInput!
  data: ImageDigestUpdateWithoutSpaceDataInput!
}

input ImageDigestUpsertWithoutTagsInput {
  update: ImageDigestUpdateWithoutTagsDataInput!
  create: ImageDigestCreateWithoutTagsInput!
}

input ImageDigestUpsertWithWhereUniqueWithoutImageInput {
  where: ImageDigestWhereUniqueInput!
  update: ImageDigestUpdateWithoutImageDataInput!
  create: ImageDigestCreateWithoutImageInput!
}

input ImageDigestUpsertWithWhereUniqueWithoutSpaceInput {
  where: ImageDigestWhereUniqueInput!
  update: ImageDigestUpdateWithoutSpaceDataInput!
  create: ImageDigestCreateWithoutSpaceInput!
}

input ImageDigestWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  digest: String
  digest_not: String
  digest_in: [String!]
  digest_not_in: [String!]
  digest_lt: String
  digest_lte: String
  digest_gt: String
  digest_gte: String
  digest_contains: String
  digest_not_contains: String
  digest_starts_with: String
  digest_not_starts_with: String
  digest_ends_with: String
  digest_not_ends_with: String
  mediaType: String
  mediaType_not: String
  mediaType_in: [String!]
  mediaType_not_in: [String!]
  mediaType_lt: String
  mediaType_lte: String
  mediaType_gt: String
  mediaType_gte: String
  mediaType_contains: String
  mediaType_not_contains: String
  mediaType_starts_with: String
  mediaType_not_starts_with: String
  mediaType_ends_with: String
  mediaType_not_ends_with: String
  tags_every: ImageTagWhereInput
  tags_some: ImageTagWhereInput
  tags_none: ImageTagWhereInput
  size: Int
  size_not: Int
  size_in: [Int!]
  size_not_in: [Int!]
  size_lt: Int
  size_lte: Int
  size_gt: Int
  size_gte: Int
  image: ImageWhereInput
  manifestUrl: String
  manifestUrl_not: String
  manifestUrl_in: [String!]
  manifestUrl_not_in: [String!]
  manifestUrl_lt: String
  manifestUrl_lte: String
  manifestUrl_gt: String
  manifestUrl_gte: String
  manifestUrl_contains: String
  manifestUrl_not_contains: String
  manifestUrl_starts_with: String
  manifestUrl_not_starts_with: String
  manifestUrl_ends_with: String
  manifestUrl_not_ends_with: String
  space: SpaceWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ImageDigestWhereInput!]
  OR: [ImageDigestWhereInput!]
  NOT: [ImageDigestWhereInput!]
}

input ImageDigestWhereUniqueInput {
  id: ID
  manifestUrl: String
}

type ImageEdge {
  node: Image!
  cursor: String!
}

enum ImageOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  desc_ASC
  desc_DESC
  readme_ASC
  readme_DESC
  publicity_ASC
  publicity_DESC
  _unique_name_ASC
  _unique_name_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ImagePreviousValues {
  id: ID!
  name: String!
  desc: String
  readme: String
  publicity: ImagePublicity
  _unique_name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum ImagePublicity {
  PRIVATE
  PUBLIC
}

input ImageScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  desc: String
  desc_not: String
  desc_in: [String!]
  desc_not_in: [String!]
  desc_lt: String
  desc_lte: String
  desc_gt: String
  desc_gte: String
  desc_contains: String
  desc_not_contains: String
  desc_starts_with: String
  desc_not_starts_with: String
  desc_ends_with: String
  desc_not_ends_with: String
  readme: String
  readme_not: String
  readme_in: [String!]
  readme_not_in: [String!]
  readme_lt: String
  readme_lte: String
  readme_gt: String
  readme_gte: String
  readme_contains: String
  readme_not_contains: String
  readme_starts_with: String
  readme_not_starts_with: String
  readme_ends_with: String
  readme_not_ends_with: String
  publicity: ImagePublicity
  publicity_not: ImagePublicity
  publicity_in: [ImagePublicity!]
  publicity_not_in: [ImagePublicity!]
  _unique_name: String
  _unique_name_not: String
  _unique_name_in: [String!]
  _unique_name_not_in: [String!]
  _unique_name_lt: String
  _unique_name_lte: String
  _unique_name_gt: String
  _unique_name_gte: String
  _unique_name_contains: String
  _unique_name_not_contains: String
  _unique_name_starts_with: String
  _unique_name_not_starts_with: String
  _unique_name_ends_with: String
  _unique_name_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ImageScalarWhereInput!]
  OR: [ImageScalarWhereInput!]
  NOT: [ImageScalarWhereInput!]
}

type ImageSubscriptionPayload {
  mutation: MutationType!
  node: Image
  updatedFields: [String!]
  previousValues: ImagePreviousValues
}

input ImageSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ImageWhereInput
  AND: [ImageSubscriptionWhereInput!]
  OR: [ImageSubscriptionWhereInput!]
  NOT: [ImageSubscriptionWhereInput!]
}

type ImageTag {
  tag: String!
  tagPath: String!
  imageDigest: ImageDigest
}

type ImageTagConnection {
  pageInfo: PageInfo!
  edges: [ImageTagEdge]!
  aggregate: AggregateImageTag!
}

input ImageTagCreateInput {
  tag: String!
  tagPath: String!
  imageDigest: ImageDigestCreateOneWithoutTagsInput
}

input ImageTagCreateManyWithoutImageDigestInput {
  create: [ImageTagCreateWithoutImageDigestInput!]
  connect: [ImageTagWhereUniqueInput!]
}

input ImageTagCreateWithoutImageDigestInput {
  tag: String!
  tagPath: String!
}

type ImageTagEdge {
  node: ImageTag!
  cursor: String!
}

enum ImageTagOrderByInput {
  tag_ASC
  tag_DESC
  tagPath_ASC
  tagPath_DESC
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ImageTagPreviousValues {
  tag: String!
  tagPath: String!
}

input ImageTagScalarWhereInput {
  tag: String
  tag_not: String
  tag_in: [String!]
  tag_not_in: [String!]
  tag_lt: String
  tag_lte: String
  tag_gt: String
  tag_gte: String
  tag_contains: String
  tag_not_contains: String
  tag_starts_with: String
  tag_not_starts_with: String
  tag_ends_with: String
  tag_not_ends_with: String
  tagPath: String
  tagPath_not: String
  tagPath_in: [String!]
  tagPath_not_in: [String!]
  tagPath_lt: String
  tagPath_lte: String
  tagPath_gt: String
  tagPath_gte: String
  tagPath_contains: String
  tagPath_not_contains: String
  tagPath_starts_with: String
  tagPath_not_starts_with: String
  tagPath_ends_with: String
  tagPath_not_ends_with: String
  AND: [ImageTagScalarWhereInput!]
  OR: [ImageTagScalarWhereInput!]
  NOT: [ImageTagScalarWhereInput!]
}

type ImageTagSubscriptionPayload {
  mutation: MutationType!
  node: ImageTag
  updatedFields: [String!]
  previousValues: ImageTagPreviousValues
}

input ImageTagSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ImageTagWhereInput
  AND: [ImageTagSubscriptionWhereInput!]
  OR: [ImageTagSubscriptionWhereInput!]
  NOT: [ImageTagSubscriptionWhereInput!]
}

input ImageTagUpdateInput {
  tag: String
  tagPath: String
  imageDigest: ImageDigestUpdateOneWithoutTagsInput
}

input ImageTagUpdateManyDataInput {
  tag: String
  tagPath: String
}

input ImageTagUpdateManyMutationInput {
  tag: String
  tagPath: String
}

input ImageTagUpdateManyWithoutImageDigestInput {
  create: [ImageTagCreateWithoutImageDigestInput!]
  delete: [ImageTagWhereUniqueInput!]
  connect: [ImageTagWhereUniqueInput!]
  set: [ImageTagWhereUniqueInput!]
  disconnect: [ImageTagWhereUniqueInput!]
  update: [ImageTagUpdateWithWhereUniqueWithoutImageDigestInput!]
  upsert: [ImageTagUpsertWithWhereUniqueWithoutImageDigestInput!]
  deleteMany: [ImageTagScalarWhereInput!]
  updateMany: [ImageTagUpdateManyWithWhereNestedInput!]
}

input ImageTagUpdateManyWithWhereNestedInput {
  where: ImageTagScalarWhereInput!
  data: ImageTagUpdateManyDataInput!
}

input ImageTagUpdateWithoutImageDigestDataInput {
  tag: String
  tagPath: String
}

input ImageTagUpdateWithWhereUniqueWithoutImageDigestInput {
  where: ImageTagWhereUniqueInput!
  data: ImageTagUpdateWithoutImageDigestDataInput!
}

input ImageTagUpsertWithWhereUniqueWithoutImageDigestInput {
  where: ImageTagWhereUniqueInput!
  update: ImageTagUpdateWithoutImageDigestDataInput!
  create: ImageTagCreateWithoutImageDigestInput!
}

input ImageTagWhereInput {
  tag: String
  tag_not: String
  tag_in: [String!]
  tag_not_in: [String!]
  tag_lt: String
  tag_lte: String
  tag_gt: String
  tag_gte: String
  tag_contains: String
  tag_not_contains: String
  tag_starts_with: String
  tag_not_starts_with: String
  tag_ends_with: String
  tag_not_ends_with: String
  tagPath: String
  tagPath_not: String
  tagPath_in: [String!]
  tagPath_not_in: [String!]
  tagPath_lt: String
  tagPath_lte: String
  tagPath_gt: String
  tagPath_gte: String
  tagPath_contains: String
  tagPath_not_contains: String
  tagPath_starts_with: String
  tagPath_not_starts_with: String
  tagPath_ends_with: String
  tagPath_not_ends_with: String
  imageDigest: ImageDigestWhereInput
  AND: [ImageTagWhereInput!]
  OR: [ImageTagWhereInput!]
  NOT: [ImageTagWhereInput!]
}

input ImageTagWhereUniqueInput {
  tagPath: String
}

input ImageUpdateDataInput {
  name: String
  desc: String
  readme: String
  publicity: ImagePublicity
  _unique_name: String
  space: SpaceUpdateOneRequiredWithoutImagesInput
  imageDigests: ImageDigestUpdateManyWithoutImageInput
  events: EventUpdateManyWithoutImageInput
}

input ImageUpdateInput {
  name: String
  desc: String
  readme: String
  publicity: ImagePublicity
  _unique_name: String
  space: SpaceUpdateOneRequiredWithoutImagesInput
  imageDigests: ImageDigestUpdateManyWithoutImageInput
  events: EventUpdateManyWithoutImageInput
}

input ImageUpdateManyDataInput {
  name: String
  desc: String
  readme: String
  publicity: ImagePublicity
  _unique_name: String
}

input ImageUpdateManyInput {
  create: [ImageCreateInput!]
  update: [ImageUpdateWithWhereUniqueNestedInput!]
  upsert: [ImageUpsertWithWhereUniqueNestedInput!]
  delete: [ImageWhereUniqueInput!]
  connect: [ImageWhereUniqueInput!]
  set: [ImageWhereUniqueInput!]
  disconnect: [ImageWhereUniqueInput!]
  deleteMany: [ImageScalarWhereInput!]
  updateMany: [ImageUpdateManyWithWhereNestedInput!]
}

input ImageUpdateManyMutationInput {
  name: String
  desc: String
  readme: String
  publicity: ImagePublicity
  _unique_name: String
}

input ImageUpdateManyWithoutSpaceInput {
  create: [ImageCreateWithoutSpaceInput!]
  delete: [ImageWhereUniqueInput!]
  connect: [ImageWhereUniqueInput!]
  set: [ImageWhereUniqueInput!]
  disconnect: [ImageWhereUniqueInput!]
  update: [ImageUpdateWithWhereUniqueWithoutSpaceInput!]
  upsert: [ImageUpsertWithWhereUniqueWithoutSpaceInput!]
  deleteMany: [ImageScalarWhereInput!]
  updateMany: [ImageUpdateManyWithWhereNestedInput!]
}

input ImageUpdateManyWithWhereNestedInput {
  where: ImageScalarWhereInput!
  data: ImageUpdateManyDataInput!
}

input ImageUpdateOneWithoutEventsInput {
  create: ImageCreateWithoutEventsInput
  update: ImageUpdateWithoutEventsDataInput
  upsert: ImageUpsertWithoutEventsInput
  delete: Boolean
  disconnect: Boolean
  connect: ImageWhereUniqueInput
}

input ImageUpdateOneWithoutImageDigestsInput {
  create: ImageCreateWithoutImageDigestsInput
  update: ImageUpdateWithoutImageDigestsDataInput
  upsert: ImageUpsertWithoutImageDigestsInput
  delete: Boolean
  disconnect: Boolean
  connect: ImageWhereUniqueInput
}

input ImageUpdateWithoutEventsDataInput {
  name: String
  desc: String
  readme: String
  publicity: ImagePublicity
  _unique_name: String
  space: SpaceUpdateOneRequiredWithoutImagesInput
  imageDigests: ImageDigestUpdateManyWithoutImageInput
}

input ImageUpdateWithoutImageDigestsDataInput {
  name: String
  desc: String
  readme: String
  publicity: ImagePublicity
  _unique_name: String
  space: SpaceUpdateOneRequiredWithoutImagesInput
  events: EventUpdateManyWithoutImageInput
}

input ImageUpdateWithoutSpaceDataInput {
  name: String
  desc: String
  readme: String
  publicity: ImagePublicity
  _unique_name: String
  imageDigests: ImageDigestUpdateManyWithoutImageInput
  events: EventUpdateManyWithoutImageInput
}

input ImageUpdateWithWhereUniqueNestedInput {
  where: ImageWhereUniqueInput!
  data: ImageUpdateDataInput!
}

input ImageUpdateWithWhereUniqueWithoutSpaceInput {
  where: ImageWhereUniqueInput!
  data: ImageUpdateWithoutSpaceDataInput!
}

input ImageUpsertWithoutEventsInput {
  update: ImageUpdateWithoutEventsDataInput!
  create: ImageCreateWithoutEventsInput!
}

input ImageUpsertWithoutImageDigestsInput {
  update: ImageUpdateWithoutImageDigestsDataInput!
  create: ImageCreateWithoutImageDigestsInput!
}

input ImageUpsertWithWhereUniqueNestedInput {
  where: ImageWhereUniqueInput!
  update: ImageUpdateDataInput!
  create: ImageCreateInput!
}

input ImageUpsertWithWhereUniqueWithoutSpaceInput {
  where: ImageWhereUniqueInput!
  update: ImageUpdateWithoutSpaceDataInput!
  create: ImageCreateWithoutSpaceInput!
}

input ImageWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  desc: String
  desc_not: String
  desc_in: [String!]
  desc_not_in: [String!]
  desc_lt: String
  desc_lte: String
  desc_gt: String
  desc_gte: String
  desc_contains: String
  desc_not_contains: String
  desc_starts_with: String
  desc_not_starts_with: String
  desc_ends_with: String
  desc_not_ends_with: String
  readme: String
  readme_not: String
  readme_in: [String!]
  readme_not_in: [String!]
  readme_lt: String
  readme_lte: String
  readme_gt: String
  readme_gte: String
  readme_contains: String
  readme_not_contains: String
  readme_starts_with: String
  readme_not_starts_with: String
  readme_ends_with: String
  readme_not_ends_with: String
  publicity: ImagePublicity
  publicity_not: ImagePublicity
  publicity_in: [ImagePublicity!]
  publicity_not_in: [ImagePublicity!]
  _unique_name: String
  _unique_name_not: String
  _unique_name_in: [String!]
  _unique_name_not_in: [String!]
  _unique_name_lt: String
  _unique_name_lte: String
  _unique_name_gt: String
  _unique_name_gte: String
  _unique_name_contains: String
  _unique_name_not_contains: String
  _unique_name_starts_with: String
  _unique_name_not_starts_with: String
  _unique_name_ends_with: String
  _unique_name_not_ends_with: String
  space: SpaceWhereInput
  imageDigests_every: ImageDigestWhereInput
  imageDigests_some: ImageDigestWhereInput
  imageDigests_none: ImageDigestWhereInput
  events_every: EventWhereInput
  events_some: EventWhereInput
  events_none: EventWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ImageWhereInput!]
  OR: [ImageWhereInput!]
  NOT: [ImageWhereInput!]
}

input ImageWhereUniqueInput {
  id: ID
  _unique_name: String
}

type Instance {
  id: ID!
  uuid: String
  mode: InstanceMode!
  type: InstanceType
  role: InstanceRole
  status: InstanceStatus!
  space: Space
  service: Service!
  deployment: Deployment!
  children(where: InstanceWhereInput, orderBy: InstanceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Instance!]
  parentInstance: Instance
  containerId: String
  host: String
  reason: InstanceReason
  error: String
  options: Json
  cpu: Int
  memory: Int
  billable: Boolean
  startedAt: DateTime
  removedAt: DateTime
}

type InstanceConnection {
  pageInfo: PageInfo!
  edges: [InstanceEdge]!
  aggregate: AggregateInstance!
}

input InstanceCreateInput {
  uuid: String
  mode: InstanceMode!
  type: InstanceType
  role: InstanceRole
  status: InstanceStatus!
  space: SpaceCreateOneInput
  service: ServiceCreateOneWithoutInstancesInput!
  deployment: DeploymentCreateOneWithoutInstancesInput!
  children: InstanceCreateManyWithoutParentInstanceInput
  parentInstance: InstanceCreateOneWithoutChildrenInput
  containerId: String
  host: String
  reason: InstanceReason
  error: String
  options: Json
  cpu: Int
  memory: Int
  billable: Boolean
  startedAt: DateTime
  removedAt: DateTime
}

input InstanceCreateManyWithoutDeploymentInput {
  create: [InstanceCreateWithoutDeploymentInput!]
  connect: [InstanceWhereUniqueInput!]
}

input InstanceCreateManyWithoutParentInstanceInput {
  create: [InstanceCreateWithoutParentInstanceInput!]
  connect: [InstanceWhereUniqueInput!]
}

input InstanceCreateManyWithoutServiceInput {
  create: [InstanceCreateWithoutServiceInput!]
  connect: [InstanceWhereUniqueInput!]
}

input InstanceCreateOneInput {
  create: InstanceCreateInput
  connect: InstanceWhereUniqueInput
}

input InstanceCreateOneWithoutChildrenInput {
  create: InstanceCreateWithoutChildrenInput
  connect: InstanceWhereUniqueInput
}

input InstanceCreateWithoutChildrenInput {
  uuid: String
  mode: InstanceMode!
  type: InstanceType
  role: InstanceRole
  status: InstanceStatus!
  space: SpaceCreateOneInput
  service: ServiceCreateOneWithoutInstancesInput!
  deployment: DeploymentCreateOneWithoutInstancesInput!
  parentInstance: InstanceCreateOneWithoutChildrenInput
  containerId: String
  host: String
  reason: InstanceReason
  error: String
  options: Json
  cpu: Int
  memory: Int
  billable: Boolean
  startedAt: DateTime
  removedAt: DateTime
}

input InstanceCreateWithoutDeploymentInput {
  uuid: String
  mode: InstanceMode!
  type: InstanceType
  role: InstanceRole
  status: InstanceStatus!
  space: SpaceCreateOneInput
  service: ServiceCreateOneWithoutInstancesInput!
  children: InstanceCreateManyWithoutParentInstanceInput
  parentInstance: InstanceCreateOneWithoutChildrenInput
  containerId: String
  host: String
  reason: InstanceReason
  error: String
  options: Json
  cpu: Int
  memory: Int
  billable: Boolean
  startedAt: DateTime
  removedAt: DateTime
}

input InstanceCreateWithoutParentInstanceInput {
  uuid: String
  mode: InstanceMode!
  type: InstanceType
  role: InstanceRole
  status: InstanceStatus!
  space: SpaceCreateOneInput
  service: ServiceCreateOneWithoutInstancesInput!
  deployment: DeploymentCreateOneWithoutInstancesInput!
  children: InstanceCreateManyWithoutParentInstanceInput
  containerId: String
  host: String
  reason: InstanceReason
  error: String
  options: Json
  cpu: Int
  memory: Int
  billable: Boolean
  startedAt: DateTime
  removedAt: DateTime
}

input InstanceCreateWithoutServiceInput {
  uuid: String
  mode: InstanceMode!
  type: InstanceType
  role: InstanceRole
  status: InstanceStatus!
  space: SpaceCreateOneInput
  deployment: DeploymentCreateOneWithoutInstancesInput!
  children: InstanceCreateManyWithoutParentInstanceInput
  parentInstance: InstanceCreateOneWithoutChildrenInput
  containerId: String
  host: String
  reason: InstanceReason
  error: String
  options: Json
  cpu: Int
  memory: Int
  billable: Boolean
  startedAt: DateTime
  removedAt: DateTime
}

type InstanceEdge {
  node: Instance!
  cursor: String!
}

enum InstanceMode {
  STEPS
  RUN
  HTTPS
}

enum InstanceOrderByInput {
  id_ASC
  id_DESC
  uuid_ASC
  uuid_DESC
  mode_ASC
  mode_DESC
  type_ASC
  type_DESC
  role_ASC
  role_DESC
  status_ASC
  status_DESC
  containerId_ASC
  containerId_DESC
  host_ASC
  host_DESC
  reason_ASC
  reason_DESC
  error_ASC
  error_DESC
  options_ASC
  options_DESC
  cpu_ASC
  cpu_DESC
  memory_ASC
  memory_DESC
  billable_ASC
  billable_DESC
  startedAt_ASC
  startedAt_DESC
  removedAt_ASC
  removedAt_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type InstancePreviousValues {
  id: ID!
  uuid: String
  mode: InstanceMode!
  type: InstanceType
  role: InstanceRole
  status: InstanceStatus!
  containerId: String
  host: String
  reason: InstanceReason
  error: String
  options: Json
  cpu: Int
  memory: Int
  billable: Boolean
  startedAt: DateTime
  removedAt: DateTime
}

enum InstanceReason {
  EXITED
  ERROR
  SCALING
  INACTIVITY
  MIGRATION
  CONNECTIVITY
  NOT_FOUND
  KILLED
}

enum InstanceRole {
  BUILD
  TEST
  SERVICE
}

input InstanceScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  uuid: String
  uuid_not: String
  uuid_in: [String!]
  uuid_not_in: [String!]
  uuid_lt: String
  uuid_lte: String
  uuid_gt: String
  uuid_gte: String
  uuid_contains: String
  uuid_not_contains: String
  uuid_starts_with: String
  uuid_not_starts_with: String
  uuid_ends_with: String
  uuid_not_ends_with: String
  mode: InstanceMode
  mode_not: InstanceMode
  mode_in: [InstanceMode!]
  mode_not_in: [InstanceMode!]
  type: InstanceType
  type_not: InstanceType
  type_in: [InstanceType!]
  type_not_in: [InstanceType!]
  role: InstanceRole
  role_not: InstanceRole
  role_in: [InstanceRole!]
  role_not_in: [InstanceRole!]
  status: InstanceStatus
  status_not: InstanceStatus
  status_in: [InstanceStatus!]
  status_not_in: [InstanceStatus!]
  containerId: String
  containerId_not: String
  containerId_in: [String!]
  containerId_not_in: [String!]
  containerId_lt: String
  containerId_lte: String
  containerId_gt: String
  containerId_gte: String
  containerId_contains: String
  containerId_not_contains: String
  containerId_starts_with: String
  containerId_not_starts_with: String
  containerId_ends_with: String
  containerId_not_ends_with: String
  host: String
  host_not: String
  host_in: [String!]
  host_not_in: [String!]
  host_lt: String
  host_lte: String
  host_gt: String
  host_gte: String
  host_contains: String
  host_not_contains: String
  host_starts_with: String
  host_not_starts_with: String
  host_ends_with: String
  host_not_ends_with: String
  reason: InstanceReason
  reason_not: InstanceReason
  reason_in: [InstanceReason!]
  reason_not_in: [InstanceReason!]
  error: String
  error_not: String
  error_in: [String!]
  error_not_in: [String!]
  error_lt: String
  error_lte: String
  error_gt: String
  error_gte: String
  error_contains: String
  error_not_contains: String
  error_starts_with: String
  error_not_starts_with: String
  error_ends_with: String
  error_not_ends_with: String
  cpu: Int
  cpu_not: Int
  cpu_in: [Int!]
  cpu_not_in: [Int!]
  cpu_lt: Int
  cpu_lte: Int
  cpu_gt: Int
  cpu_gte: Int
  memory: Int
  memory_not: Int
  memory_in: [Int!]
  memory_not_in: [Int!]
  memory_lt: Int
  memory_lte: Int
  memory_gt: Int
  memory_gte: Int
  billable: Boolean
  billable_not: Boolean
  startedAt: DateTime
  startedAt_not: DateTime
  startedAt_in: [DateTime!]
  startedAt_not_in: [DateTime!]
  startedAt_lt: DateTime
  startedAt_lte: DateTime
  startedAt_gt: DateTime
  startedAt_gte: DateTime
  removedAt: DateTime
  removedAt_not: DateTime
  removedAt_in: [DateTime!]
  removedAt_not_in: [DateTime!]
  removedAt_lt: DateTime
  removedAt_lte: DateTime
  removedAt_gt: DateTime
  removedAt_gte: DateTime
  AND: [InstanceScalarWhereInput!]
  OR: [InstanceScalarWhereInput!]
  NOT: [InstanceScalarWhereInput!]
}

enum InstanceStatus {
  INIT
  ACTIVE
  ENDING
  REMOVED
}

type InstanceSubscriptionPayload {
  mutation: MutationType!
  node: Instance
  updatedFields: [String!]
  previousValues: InstancePreviousValues
}

input InstanceSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: InstanceWhereInput
  AND: [InstanceSubscriptionWhereInput!]
  OR: [InstanceSubscriptionWhereInput!]
  NOT: [InstanceSubscriptionWhereInput!]
}

enum InstanceType {
  PRIMARY
  SIDECAR
  STEP
}

input InstanceUpdateDataInput {
  uuid: String
  mode: InstanceMode
  type: InstanceType
  role: InstanceRole
  status: InstanceStatus
  space: SpaceUpdateOneInput
  service: ServiceUpdateOneRequiredWithoutInstancesInput
  deployment: DeploymentUpdateOneRequiredWithoutInstancesInput
  children: InstanceUpdateManyWithoutParentInstanceInput
  parentInstance: InstanceUpdateOneWithoutChildrenInput
  containerId: String
  host: String
  reason: InstanceReason
  error: String
  options: Json
  cpu: Int
  memory: Int
  billable: Boolean
  startedAt: DateTime
  removedAt: DateTime
}

input InstanceUpdateInput {
  uuid: String
  mode: InstanceMode
  type: InstanceType
  role: InstanceRole
  status: InstanceStatus
  space: SpaceUpdateOneInput
  service: ServiceUpdateOneRequiredWithoutInstancesInput
  deployment: DeploymentUpdateOneRequiredWithoutInstancesInput
  children: InstanceUpdateManyWithoutParentInstanceInput
  parentInstance: InstanceUpdateOneWithoutChildrenInput
  containerId: String
  host: String
  reason: InstanceReason
  error: String
  options: Json
  cpu: Int
  memory: Int
  billable: Boolean
  startedAt: DateTime
  removedAt: DateTime
}

input InstanceUpdateManyDataInput {
  uuid: String
  mode: InstanceMode
  type: InstanceType
  role: InstanceRole
  status: InstanceStatus
  containerId: String
  host: String
  reason: InstanceReason
  error: String
  options: Json
  cpu: Int
  memory: Int
  billable: Boolean
  startedAt: DateTime
  removedAt: DateTime
}

input InstanceUpdateManyMutationInput {
  uuid: String
  mode: InstanceMode
  type: InstanceType
  role: InstanceRole
  status: InstanceStatus
  containerId: String
  host: String
  reason: InstanceReason
  error: String
  options: Json
  cpu: Int
  memory: Int
  billable: Boolean
  startedAt: DateTime
  removedAt: DateTime
}

input InstanceUpdateManyWithoutDeploymentInput {
  create: [InstanceCreateWithoutDeploymentInput!]
  delete: [InstanceWhereUniqueInput!]
  connect: [InstanceWhereUniqueInput!]
  set: [InstanceWhereUniqueInput!]
  disconnect: [InstanceWhereUniqueInput!]
  update: [InstanceUpdateWithWhereUniqueWithoutDeploymentInput!]
  upsert: [InstanceUpsertWithWhereUniqueWithoutDeploymentInput!]
  deleteMany: [InstanceScalarWhereInput!]
  updateMany: [InstanceUpdateManyWithWhereNestedInput!]
}

input InstanceUpdateManyWithoutParentInstanceInput {
  create: [InstanceCreateWithoutParentInstanceInput!]
  delete: [InstanceWhereUniqueInput!]
  connect: [InstanceWhereUniqueInput!]
  set: [InstanceWhereUniqueInput!]
  disconnect: [InstanceWhereUniqueInput!]
  update: [InstanceUpdateWithWhereUniqueWithoutParentInstanceInput!]
  upsert: [InstanceUpsertWithWhereUniqueWithoutParentInstanceInput!]
  deleteMany: [InstanceScalarWhereInput!]
  updateMany: [InstanceUpdateManyWithWhereNestedInput!]
}

input InstanceUpdateManyWithoutServiceInput {
  create: [InstanceCreateWithoutServiceInput!]
  delete: [InstanceWhereUniqueInput!]
  connect: [InstanceWhereUniqueInput!]
  set: [InstanceWhereUniqueInput!]
  disconnect: [InstanceWhereUniqueInput!]
  update: [InstanceUpdateWithWhereUniqueWithoutServiceInput!]
  upsert: [InstanceUpsertWithWhereUniqueWithoutServiceInput!]
  deleteMany: [InstanceScalarWhereInput!]
  updateMany: [InstanceUpdateManyWithWhereNestedInput!]
}

input InstanceUpdateManyWithWhereNestedInput {
  where: InstanceScalarWhereInput!
  data: InstanceUpdateManyDataInput!
}

input InstanceUpdateOneInput {
  create: InstanceCreateInput
  update: InstanceUpdateDataInput
  upsert: InstanceUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: InstanceWhereUniqueInput
}

input InstanceUpdateOneWithoutChildrenInput {
  create: InstanceCreateWithoutChildrenInput
  update: InstanceUpdateWithoutChildrenDataInput
  upsert: InstanceUpsertWithoutChildrenInput
  delete: Boolean
  disconnect: Boolean
  connect: InstanceWhereUniqueInput
}

input InstanceUpdateWithoutChildrenDataInput {
  uuid: String
  mode: InstanceMode
  type: InstanceType
  role: InstanceRole
  status: InstanceStatus
  space: SpaceUpdateOneInput
  service: ServiceUpdateOneRequiredWithoutInstancesInput
  deployment: DeploymentUpdateOneRequiredWithoutInstancesInput
  parentInstance: InstanceUpdateOneWithoutChildrenInput
  containerId: String
  host: String
  reason: InstanceReason
  error: String
  options: Json
  cpu: Int
  memory: Int
  billable: Boolean
  startedAt: DateTime
  removedAt: DateTime
}

input InstanceUpdateWithoutDeploymentDataInput {
  uuid: String
  mode: InstanceMode
  type: InstanceType
  role: InstanceRole
  status: InstanceStatus
  space: SpaceUpdateOneInput
  service: ServiceUpdateOneRequiredWithoutInstancesInput
  children: InstanceUpdateManyWithoutParentInstanceInput
  parentInstance: InstanceUpdateOneWithoutChildrenInput
  containerId: String
  host: String
  reason: InstanceReason
  error: String
  options: Json
  cpu: Int
  memory: Int
  billable: Boolean
  startedAt: DateTime
  removedAt: DateTime
}

input InstanceUpdateWithoutParentInstanceDataInput {
  uuid: String
  mode: InstanceMode
  type: InstanceType
  role: InstanceRole
  status: InstanceStatus
  space: SpaceUpdateOneInput
  service: ServiceUpdateOneRequiredWithoutInstancesInput
  deployment: DeploymentUpdateOneRequiredWithoutInstancesInput
  children: InstanceUpdateManyWithoutParentInstanceInput
  containerId: String
  host: String
  reason: InstanceReason
  error: String
  options: Json
  cpu: Int
  memory: Int
  billable: Boolean
  startedAt: DateTime
  removedAt: DateTime
}

input InstanceUpdateWithoutServiceDataInput {
  uuid: String
  mode: InstanceMode
  type: InstanceType
  role: InstanceRole
  status: InstanceStatus
  space: SpaceUpdateOneInput
  deployment: DeploymentUpdateOneRequiredWithoutInstancesInput
  children: InstanceUpdateManyWithoutParentInstanceInput
  parentInstance: InstanceUpdateOneWithoutChildrenInput
  containerId: String
  host: String
  reason: InstanceReason
  error: String
  options: Json
  cpu: Int
  memory: Int
  billable: Boolean
  startedAt: DateTime
  removedAt: DateTime
}

input InstanceUpdateWithWhereUniqueWithoutDeploymentInput {
  where: InstanceWhereUniqueInput!
  data: InstanceUpdateWithoutDeploymentDataInput!
}

input InstanceUpdateWithWhereUniqueWithoutParentInstanceInput {
  where: InstanceWhereUniqueInput!
  data: InstanceUpdateWithoutParentInstanceDataInput!
}

input InstanceUpdateWithWhereUniqueWithoutServiceInput {
  where: InstanceWhereUniqueInput!
  data: InstanceUpdateWithoutServiceDataInput!
}

input InstanceUpsertNestedInput {
  update: InstanceUpdateDataInput!
  create: InstanceCreateInput!
}

input InstanceUpsertWithoutChildrenInput {
  update: InstanceUpdateWithoutChildrenDataInput!
  create: InstanceCreateWithoutChildrenInput!
}

input InstanceUpsertWithWhereUniqueWithoutDeploymentInput {
  where: InstanceWhereUniqueInput!
  update: InstanceUpdateWithoutDeploymentDataInput!
  create: InstanceCreateWithoutDeploymentInput!
}

input InstanceUpsertWithWhereUniqueWithoutParentInstanceInput {
  where: InstanceWhereUniqueInput!
  update: InstanceUpdateWithoutParentInstanceDataInput!
  create: InstanceCreateWithoutParentInstanceInput!
}

input InstanceUpsertWithWhereUniqueWithoutServiceInput {
  where: InstanceWhereUniqueInput!
  update: InstanceUpdateWithoutServiceDataInput!
  create: InstanceCreateWithoutServiceInput!
}

input InstanceWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  uuid: String
  uuid_not: String
  uuid_in: [String!]
  uuid_not_in: [String!]
  uuid_lt: String
  uuid_lte: String
  uuid_gt: String
  uuid_gte: String
  uuid_contains: String
  uuid_not_contains: String
  uuid_starts_with: String
  uuid_not_starts_with: String
  uuid_ends_with: String
  uuid_not_ends_with: String
  mode: InstanceMode
  mode_not: InstanceMode
  mode_in: [InstanceMode!]
  mode_not_in: [InstanceMode!]
  type: InstanceType
  type_not: InstanceType
  type_in: [InstanceType!]
  type_not_in: [InstanceType!]
  role: InstanceRole
  role_not: InstanceRole
  role_in: [InstanceRole!]
  role_not_in: [InstanceRole!]
  status: InstanceStatus
  status_not: InstanceStatus
  status_in: [InstanceStatus!]
  status_not_in: [InstanceStatus!]
  space: SpaceWhereInput
  service: ServiceWhereInput
  deployment: DeploymentWhereInput
  children_every: InstanceWhereInput
  children_some: InstanceWhereInput
  children_none: InstanceWhereInput
  parentInstance: InstanceWhereInput
  containerId: String
  containerId_not: String
  containerId_in: [String!]
  containerId_not_in: [String!]
  containerId_lt: String
  containerId_lte: String
  containerId_gt: String
  containerId_gte: String
  containerId_contains: String
  containerId_not_contains: String
  containerId_starts_with: String
  containerId_not_starts_with: String
  containerId_ends_with: String
  containerId_not_ends_with: String
  host: String
  host_not: String
  host_in: [String!]
  host_not_in: [String!]
  host_lt: String
  host_lte: String
  host_gt: String
  host_gte: String
  host_contains: String
  host_not_contains: String
  host_starts_with: String
  host_not_starts_with: String
  host_ends_with: String
  host_not_ends_with: String
  reason: InstanceReason
  reason_not: InstanceReason
  reason_in: [InstanceReason!]
  reason_not_in: [InstanceReason!]
  error: String
  error_not: String
  error_in: [String!]
  error_not_in: [String!]
  error_lt: String
  error_lte: String
  error_gt: String
  error_gte: String
  error_contains: String
  error_not_contains: String
  error_starts_with: String
  error_not_starts_with: String
  error_ends_with: String
  error_not_ends_with: String
  cpu: Int
  cpu_not: Int
  cpu_in: [Int!]
  cpu_not_in: [Int!]
  cpu_lt: Int
  cpu_lte: Int
  cpu_gt: Int
  cpu_gte: Int
  memory: Int
  memory_not: Int
  memory_in: [Int!]
  memory_not_in: [Int!]
  memory_lt: Int
  memory_lte: Int
  memory_gt: Int
  memory_gte: Int
  billable: Boolean
  billable_not: Boolean
  startedAt: DateTime
  startedAt_not: DateTime
  startedAt_in: [DateTime!]
  startedAt_not_in: [DateTime!]
  startedAt_lt: DateTime
  startedAt_lte: DateTime
  startedAt_gt: DateTime
  startedAt_gte: DateTime
  removedAt: DateTime
  removedAt_not: DateTime
  removedAt_in: [DateTime!]
  removedAt_not_in: [DateTime!]
  removedAt_lt: DateTime
  removedAt_lte: DateTime
  removedAt_gt: DateTime
  removedAt_gte: DateTime
  AND: [InstanceWhereInput!]
  OR: [InstanceWhereInput!]
  NOT: [InstanceWhereInput!]
}

input InstanceWhereUniqueInput {
  id: ID
  uuid: String
}

type Invoice {
  id: ID!
  type: InvoiceType!
  month: String!
  from: DateTime!
  to: DateTime!
  paid: DateTime
  amount: Float!
  items(where: InvoiceItemWhereInput, orderBy: InvoiceItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [InvoiceItem!]
  plan: Plan!
  discount: Int
  space: Space!
  charges(where: InvoiceChargeWhereInput, orderBy: InvoiceChargeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [InvoiceCharge!]
  createdAt: DateTime!
}

type InvoiceCharge {
  id: ID!
  status: InvoiceChargeStatus!
  invoice: Invoice
  paymentCard: PaymentCard
  createdAt: DateTime!
}

type InvoiceChargeConnection {
  pageInfo: PageInfo!
  edges: [InvoiceChargeEdge]!
  aggregate: AggregateInvoiceCharge!
}

input InvoiceChargeCreateInput {
  status: InvoiceChargeStatus!
  invoice: InvoiceCreateOneWithoutChargesInput
  paymentCard: PaymentCardCreateOneWithoutChargesInput
}

input InvoiceChargeCreateManyWithoutInvoiceInput {
  create: [InvoiceChargeCreateWithoutInvoiceInput!]
  connect: [InvoiceChargeWhereUniqueInput!]
}

input InvoiceChargeCreateManyWithoutPaymentCardInput {
  create: [InvoiceChargeCreateWithoutPaymentCardInput!]
  connect: [InvoiceChargeWhereUniqueInput!]
}

input InvoiceChargeCreateWithoutInvoiceInput {
  status: InvoiceChargeStatus!
  paymentCard: PaymentCardCreateOneWithoutChargesInput
}

input InvoiceChargeCreateWithoutPaymentCardInput {
  status: InvoiceChargeStatus!
  invoice: InvoiceCreateOneWithoutChargesInput
}

type InvoiceChargeEdge {
  node: InvoiceCharge!
  cursor: String!
}

enum InvoiceChargeOrderByInput {
  id_ASC
  id_DESC
  status_ASC
  status_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type InvoiceChargePreviousValues {
  id: ID!
  status: InvoiceChargeStatus!
  createdAt: DateTime!
}

input InvoiceChargeScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  status: InvoiceChargeStatus
  status_not: InvoiceChargeStatus
  status_in: [InvoiceChargeStatus!]
  status_not_in: [InvoiceChargeStatus!]
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [InvoiceChargeScalarWhereInput!]
  OR: [InvoiceChargeScalarWhereInput!]
  NOT: [InvoiceChargeScalarWhereInput!]
}

enum InvoiceChargeStatus {
  IN_PROGRESS
  SUCCESS
  FAIL
}

type InvoiceChargeSubscriptionPayload {
  mutation: MutationType!
  node: InvoiceCharge
  updatedFields: [String!]
  previousValues: InvoiceChargePreviousValues
}

input InvoiceChargeSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: InvoiceChargeWhereInput
  AND: [InvoiceChargeSubscriptionWhereInput!]
  OR: [InvoiceChargeSubscriptionWhereInput!]
  NOT: [InvoiceChargeSubscriptionWhereInput!]
}

input InvoiceChargeUpdateInput {
  status: InvoiceChargeStatus
  invoice: InvoiceUpdateOneWithoutChargesInput
  paymentCard: PaymentCardUpdateOneWithoutChargesInput
}

input InvoiceChargeUpdateManyDataInput {
  status: InvoiceChargeStatus
}

input InvoiceChargeUpdateManyMutationInput {
  status: InvoiceChargeStatus
}

input InvoiceChargeUpdateManyWithoutInvoiceInput {
  create: [InvoiceChargeCreateWithoutInvoiceInput!]
  delete: [InvoiceChargeWhereUniqueInput!]
  connect: [InvoiceChargeWhereUniqueInput!]
  set: [InvoiceChargeWhereUniqueInput!]
  disconnect: [InvoiceChargeWhereUniqueInput!]
  update: [InvoiceChargeUpdateWithWhereUniqueWithoutInvoiceInput!]
  upsert: [InvoiceChargeUpsertWithWhereUniqueWithoutInvoiceInput!]
  deleteMany: [InvoiceChargeScalarWhereInput!]
  updateMany: [InvoiceChargeUpdateManyWithWhereNestedInput!]
}

input InvoiceChargeUpdateManyWithoutPaymentCardInput {
  create: [InvoiceChargeCreateWithoutPaymentCardInput!]
  delete: [InvoiceChargeWhereUniqueInput!]
  connect: [InvoiceChargeWhereUniqueInput!]
  set: [InvoiceChargeWhereUniqueInput!]
  disconnect: [InvoiceChargeWhereUniqueInput!]
  update: [InvoiceChargeUpdateWithWhereUniqueWithoutPaymentCardInput!]
  upsert: [InvoiceChargeUpsertWithWhereUniqueWithoutPaymentCardInput!]
  deleteMany: [InvoiceChargeScalarWhereInput!]
  updateMany: [InvoiceChargeUpdateManyWithWhereNestedInput!]
}

input InvoiceChargeUpdateManyWithWhereNestedInput {
  where: InvoiceChargeScalarWhereInput!
  data: InvoiceChargeUpdateManyDataInput!
}

input InvoiceChargeUpdateWithoutInvoiceDataInput {
  status: InvoiceChargeStatus
  paymentCard: PaymentCardUpdateOneWithoutChargesInput
}

input InvoiceChargeUpdateWithoutPaymentCardDataInput {
  status: InvoiceChargeStatus
  invoice: InvoiceUpdateOneWithoutChargesInput
}

input InvoiceChargeUpdateWithWhereUniqueWithoutInvoiceInput {
  where: InvoiceChargeWhereUniqueInput!
  data: InvoiceChargeUpdateWithoutInvoiceDataInput!
}

input InvoiceChargeUpdateWithWhereUniqueWithoutPaymentCardInput {
  where: InvoiceChargeWhereUniqueInput!
  data: InvoiceChargeUpdateWithoutPaymentCardDataInput!
}

input InvoiceChargeUpsertWithWhereUniqueWithoutInvoiceInput {
  where: InvoiceChargeWhereUniqueInput!
  update: InvoiceChargeUpdateWithoutInvoiceDataInput!
  create: InvoiceChargeCreateWithoutInvoiceInput!
}

input InvoiceChargeUpsertWithWhereUniqueWithoutPaymentCardInput {
  where: InvoiceChargeWhereUniqueInput!
  update: InvoiceChargeUpdateWithoutPaymentCardDataInput!
  create: InvoiceChargeCreateWithoutPaymentCardInput!
}

input InvoiceChargeWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  status: InvoiceChargeStatus
  status_not: InvoiceChargeStatus
  status_in: [InvoiceChargeStatus!]
  status_not_in: [InvoiceChargeStatus!]
  invoice: InvoiceWhereInput
  paymentCard: PaymentCardWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [InvoiceChargeWhereInput!]
  OR: [InvoiceChargeWhereInput!]
  NOT: [InvoiceChargeWhereInput!]
}

input InvoiceChargeWhereUniqueInput {
  id: ID
}

type InvoiceConnection {
  pageInfo: PageInfo!
  edges: [InvoiceEdge]!
  aggregate: AggregateInvoice!
}

input InvoiceCreateInput {
  type: InvoiceType!
  month: String!
  from: DateTime!
  to: DateTime!
  paid: DateTime
  amount: Float!
  items: InvoiceItemCreateManyWithoutInvoiceInput
  plan: PlanCreateOneWithoutInvoicesInput!
  discount: Int
  space: SpaceCreateOneWithoutInvoicesInput!
  charges: InvoiceChargeCreateManyWithoutInvoiceInput
}

input InvoiceCreateManyWithoutPlanInput {
  create: [InvoiceCreateWithoutPlanInput!]
  connect: [InvoiceWhereUniqueInput!]
}

input InvoiceCreateManyWithoutSpaceInput {
  create: [InvoiceCreateWithoutSpaceInput!]
  connect: [InvoiceWhereUniqueInput!]
}

input InvoiceCreateOneWithoutChargesInput {
  create: InvoiceCreateWithoutChargesInput
  connect: InvoiceWhereUniqueInput
}

input InvoiceCreateOneWithoutItemsInput {
  create: InvoiceCreateWithoutItemsInput
  connect: InvoiceWhereUniqueInput
}

input InvoiceCreateWithoutChargesInput {
  type: InvoiceType!
  month: String!
  from: DateTime!
  to: DateTime!
  paid: DateTime
  amount: Float!
  items: InvoiceItemCreateManyWithoutInvoiceInput
  plan: PlanCreateOneWithoutInvoicesInput!
  discount: Int
  space: SpaceCreateOneWithoutInvoicesInput!
}

input InvoiceCreateWithoutItemsInput {
  type: InvoiceType!
  month: String!
  from: DateTime!
  to: DateTime!
  paid: DateTime
  amount: Float!
  plan: PlanCreateOneWithoutInvoicesInput!
  discount: Int
  space: SpaceCreateOneWithoutInvoicesInput!
  charges: InvoiceChargeCreateManyWithoutInvoiceInput
}

input InvoiceCreateWithoutPlanInput {
  type: InvoiceType!
  month: String!
  from: DateTime!
  to: DateTime!
  paid: DateTime
  amount: Float!
  items: InvoiceItemCreateManyWithoutInvoiceInput
  discount: Int
  space: SpaceCreateOneWithoutInvoicesInput!
  charges: InvoiceChargeCreateManyWithoutInvoiceInput
}

input InvoiceCreateWithoutSpaceInput {
  type: InvoiceType!
  month: String!
  from: DateTime!
  to: DateTime!
  paid: DateTime
  amount: Float!
  items: InvoiceItemCreateManyWithoutInvoiceInput
  plan: PlanCreateOneWithoutInvoicesInput!
  discount: Int
  charges: InvoiceChargeCreateManyWithoutInvoiceInput
}

type InvoiceEdge {
  node: Invoice!
  cursor: String!
}

type InvoiceItem {
  id: ID!
  name: String!
  desc: String
  from: DateTime!
  to: DateTime!
  quantity: Float!
  price: Float!
  total: Float!
  unit: String
  chargeable: Boolean!
  discount: Int
  invoice: Invoice!
}

type InvoiceItemConnection {
  pageInfo: PageInfo!
  edges: [InvoiceItemEdge]!
  aggregate: AggregateInvoiceItem!
}

input InvoiceItemCreateInput {
  name: String!
  desc: String
  from: DateTime!
  to: DateTime!
  quantity: Float!
  price: Float!
  total: Float!
  unit: String
  chargeable: Boolean!
  discount: Int
  invoice: InvoiceCreateOneWithoutItemsInput!
}

input InvoiceItemCreateManyWithoutInvoiceInput {
  create: [InvoiceItemCreateWithoutInvoiceInput!]
  connect: [InvoiceItemWhereUniqueInput!]
}

input InvoiceItemCreateWithoutInvoiceInput {
  name: String!
  desc: String
  from: DateTime!
  to: DateTime!
  quantity: Float!
  price: Float!
  total: Float!
  unit: String
  chargeable: Boolean!
  discount: Int
}

type InvoiceItemEdge {
  node: InvoiceItem!
  cursor: String!
}

enum InvoiceItemOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  desc_ASC
  desc_DESC
  from_ASC
  from_DESC
  to_ASC
  to_DESC
  quantity_ASC
  quantity_DESC
  price_ASC
  price_DESC
  total_ASC
  total_DESC
  unit_ASC
  unit_DESC
  chargeable_ASC
  chargeable_DESC
  discount_ASC
  discount_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type InvoiceItemPreviousValues {
  id: ID!
  name: String!
  desc: String
  from: DateTime!
  to: DateTime!
  quantity: Float!
  price: Float!
  total: Float!
  unit: String
  chargeable: Boolean!
  discount: Int
}

input InvoiceItemScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  desc: String
  desc_not: String
  desc_in: [String!]
  desc_not_in: [String!]
  desc_lt: String
  desc_lte: String
  desc_gt: String
  desc_gte: String
  desc_contains: String
  desc_not_contains: String
  desc_starts_with: String
  desc_not_starts_with: String
  desc_ends_with: String
  desc_not_ends_with: String
  from: DateTime
  from_not: DateTime
  from_in: [DateTime!]
  from_not_in: [DateTime!]
  from_lt: DateTime
  from_lte: DateTime
  from_gt: DateTime
  from_gte: DateTime
  to: DateTime
  to_not: DateTime
  to_in: [DateTime!]
  to_not_in: [DateTime!]
  to_lt: DateTime
  to_lte: DateTime
  to_gt: DateTime
  to_gte: DateTime
  quantity: Float
  quantity_not: Float
  quantity_in: [Float!]
  quantity_not_in: [Float!]
  quantity_lt: Float
  quantity_lte: Float
  quantity_gt: Float
  quantity_gte: Float
  price: Float
  price_not: Float
  price_in: [Float!]
  price_not_in: [Float!]
  price_lt: Float
  price_lte: Float
  price_gt: Float
  price_gte: Float
  total: Float
  total_not: Float
  total_in: [Float!]
  total_not_in: [Float!]
  total_lt: Float
  total_lte: Float
  total_gt: Float
  total_gte: Float
  unit: String
  unit_not: String
  unit_in: [String!]
  unit_not_in: [String!]
  unit_lt: String
  unit_lte: String
  unit_gt: String
  unit_gte: String
  unit_contains: String
  unit_not_contains: String
  unit_starts_with: String
  unit_not_starts_with: String
  unit_ends_with: String
  unit_not_ends_with: String
  chargeable: Boolean
  chargeable_not: Boolean
  discount: Int
  discount_not: Int
  discount_in: [Int!]
  discount_not_in: [Int!]
  discount_lt: Int
  discount_lte: Int
  discount_gt: Int
  discount_gte: Int
  AND: [InvoiceItemScalarWhereInput!]
  OR: [InvoiceItemScalarWhereInput!]
  NOT: [InvoiceItemScalarWhereInput!]
}

type InvoiceItemSubscriptionPayload {
  mutation: MutationType!
  node: InvoiceItem
  updatedFields: [String!]
  previousValues: InvoiceItemPreviousValues
}

input InvoiceItemSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: InvoiceItemWhereInput
  AND: [InvoiceItemSubscriptionWhereInput!]
  OR: [InvoiceItemSubscriptionWhereInput!]
  NOT: [InvoiceItemSubscriptionWhereInput!]
}

input InvoiceItemUpdateInput {
  name: String
  desc: String
  from: DateTime
  to: DateTime
  quantity: Float
  price: Float
  total: Float
  unit: String
  chargeable: Boolean
  discount: Int
  invoice: InvoiceUpdateOneRequiredWithoutItemsInput
}

input InvoiceItemUpdateManyDataInput {
  name: String
  desc: String
  from: DateTime
  to: DateTime
  quantity: Float
  price: Float
  total: Float
  unit: String
  chargeable: Boolean
  discount: Int
}

input InvoiceItemUpdateManyMutationInput {
  name: String
  desc: String
  from: DateTime
  to: DateTime
  quantity: Float
  price: Float
  total: Float
  unit: String
  chargeable: Boolean
  discount: Int
}

input InvoiceItemUpdateManyWithoutInvoiceInput {
  create: [InvoiceItemCreateWithoutInvoiceInput!]
  delete: [InvoiceItemWhereUniqueInput!]
  connect: [InvoiceItemWhereUniqueInput!]
  set: [InvoiceItemWhereUniqueInput!]
  disconnect: [InvoiceItemWhereUniqueInput!]
  update: [InvoiceItemUpdateWithWhereUniqueWithoutInvoiceInput!]
  upsert: [InvoiceItemUpsertWithWhereUniqueWithoutInvoiceInput!]
  deleteMany: [InvoiceItemScalarWhereInput!]
  updateMany: [InvoiceItemUpdateManyWithWhereNestedInput!]
}

input InvoiceItemUpdateManyWithWhereNestedInput {
  where: InvoiceItemScalarWhereInput!
  data: InvoiceItemUpdateManyDataInput!
}

input InvoiceItemUpdateWithoutInvoiceDataInput {
  name: String
  desc: String
  from: DateTime
  to: DateTime
  quantity: Float
  price: Float
  total: Float
  unit: String
  chargeable: Boolean
  discount: Int
}

input InvoiceItemUpdateWithWhereUniqueWithoutInvoiceInput {
  where: InvoiceItemWhereUniqueInput!
  data: InvoiceItemUpdateWithoutInvoiceDataInput!
}

input InvoiceItemUpsertWithWhereUniqueWithoutInvoiceInput {
  where: InvoiceItemWhereUniqueInput!
  update: InvoiceItemUpdateWithoutInvoiceDataInput!
  create: InvoiceItemCreateWithoutInvoiceInput!
}

input InvoiceItemWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  desc: String
  desc_not: String
  desc_in: [String!]
  desc_not_in: [String!]
  desc_lt: String
  desc_lte: String
  desc_gt: String
  desc_gte: String
  desc_contains: String
  desc_not_contains: String
  desc_starts_with: String
  desc_not_starts_with: String
  desc_ends_with: String
  desc_not_ends_with: String
  from: DateTime
  from_not: DateTime
  from_in: [DateTime!]
  from_not_in: [DateTime!]
  from_lt: DateTime
  from_lte: DateTime
  from_gt: DateTime
  from_gte: DateTime
  to: DateTime
  to_not: DateTime
  to_in: [DateTime!]
  to_not_in: [DateTime!]
  to_lt: DateTime
  to_lte: DateTime
  to_gt: DateTime
  to_gte: DateTime
  quantity: Float
  quantity_not: Float
  quantity_in: [Float!]
  quantity_not_in: [Float!]
  quantity_lt: Float
  quantity_lte: Float
  quantity_gt: Float
  quantity_gte: Float
  price: Float
  price_not: Float
  price_in: [Float!]
  price_not_in: [Float!]
  price_lt: Float
  price_lte: Float
  price_gt: Float
  price_gte: Float
  total: Float
  total_not: Float
  total_in: [Float!]
  total_not_in: [Float!]
  total_lt: Float
  total_lte: Float
  total_gt: Float
  total_gte: Float
  unit: String
  unit_not: String
  unit_in: [String!]
  unit_not_in: [String!]
  unit_lt: String
  unit_lte: String
  unit_gt: String
  unit_gte: String
  unit_contains: String
  unit_not_contains: String
  unit_starts_with: String
  unit_not_starts_with: String
  unit_ends_with: String
  unit_not_ends_with: String
  chargeable: Boolean
  chargeable_not: Boolean
  discount: Int
  discount_not: Int
  discount_in: [Int!]
  discount_not_in: [Int!]
  discount_lt: Int
  discount_lte: Int
  discount_gt: Int
  discount_gte: Int
  invoice: InvoiceWhereInput
  AND: [InvoiceItemWhereInput!]
  OR: [InvoiceItemWhereInput!]
  NOT: [InvoiceItemWhereInput!]
}

input InvoiceItemWhereUniqueInput {
  id: ID
}

enum InvoiceOrderByInput {
  id_ASC
  id_DESC
  type_ASC
  type_DESC
  month_ASC
  month_DESC
  from_ASC
  from_DESC
  to_ASC
  to_DESC
  paid_ASC
  paid_DESC
  amount_ASC
  amount_DESC
  discount_ASC
  discount_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type InvoicePreviousValues {
  id: ID!
  type: InvoiceType!
  month: String!
  from: DateTime!
  to: DateTime!
  paid: DateTime
  amount: Float!
  discount: Int
  createdAt: DateTime!
}

input InvoiceScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  type: InvoiceType
  type_not: InvoiceType
  type_in: [InvoiceType!]
  type_not_in: [InvoiceType!]
  month: String
  month_not: String
  month_in: [String!]
  month_not_in: [String!]
  month_lt: String
  month_lte: String
  month_gt: String
  month_gte: String
  month_contains: String
  month_not_contains: String
  month_starts_with: String
  month_not_starts_with: String
  month_ends_with: String
  month_not_ends_with: String
  from: DateTime
  from_not: DateTime
  from_in: [DateTime!]
  from_not_in: [DateTime!]
  from_lt: DateTime
  from_lte: DateTime
  from_gt: DateTime
  from_gte: DateTime
  to: DateTime
  to_not: DateTime
  to_in: [DateTime!]
  to_not_in: [DateTime!]
  to_lt: DateTime
  to_lte: DateTime
  to_gt: DateTime
  to_gte: DateTime
  paid: DateTime
  paid_not: DateTime
  paid_in: [DateTime!]
  paid_not_in: [DateTime!]
  paid_lt: DateTime
  paid_lte: DateTime
  paid_gt: DateTime
  paid_gte: DateTime
  amount: Float
  amount_not: Float
  amount_in: [Float!]
  amount_not_in: [Float!]
  amount_lt: Float
  amount_lte: Float
  amount_gt: Float
  amount_gte: Float
  discount: Int
  discount_not: Int
  discount_in: [Int!]
  discount_not_in: [Int!]
  discount_lt: Int
  discount_lte: Int
  discount_gt: Int
  discount_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [InvoiceScalarWhereInput!]
  OR: [InvoiceScalarWhereInput!]
  NOT: [InvoiceScalarWhereInput!]
}

type InvoiceSubscriptionPayload {
  mutation: MutationType!
  node: Invoice
  updatedFields: [String!]
  previousValues: InvoicePreviousValues
}

input InvoiceSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: InvoiceWhereInput
  AND: [InvoiceSubscriptionWhereInput!]
  OR: [InvoiceSubscriptionWhereInput!]
  NOT: [InvoiceSubscriptionWhereInput!]
}

enum InvoiceType {
  MONTHLY
  ADHOC
}

input InvoiceUpdateInput {
  type: InvoiceType
  month: String
  from: DateTime
  to: DateTime
  paid: DateTime
  amount: Float
  items: InvoiceItemUpdateManyWithoutInvoiceInput
  plan: PlanUpdateOneRequiredWithoutInvoicesInput
  discount: Int
  space: SpaceUpdateOneRequiredWithoutInvoicesInput
  charges: InvoiceChargeUpdateManyWithoutInvoiceInput
}

input InvoiceUpdateManyDataInput {
  type: InvoiceType
  month: String
  from: DateTime
  to: DateTime
  paid: DateTime
  amount: Float
  discount: Int
}

input InvoiceUpdateManyMutationInput {
  type: InvoiceType
  month: String
  from: DateTime
  to: DateTime
  paid: DateTime
  amount: Float
  discount: Int
}

input InvoiceUpdateManyWithoutPlanInput {
  create: [InvoiceCreateWithoutPlanInput!]
  delete: [InvoiceWhereUniqueInput!]
  connect: [InvoiceWhereUniqueInput!]
  set: [InvoiceWhereUniqueInput!]
  disconnect: [InvoiceWhereUniqueInput!]
  update: [InvoiceUpdateWithWhereUniqueWithoutPlanInput!]
  upsert: [InvoiceUpsertWithWhereUniqueWithoutPlanInput!]
  deleteMany: [InvoiceScalarWhereInput!]
  updateMany: [InvoiceUpdateManyWithWhereNestedInput!]
}

input InvoiceUpdateManyWithoutSpaceInput {
  create: [InvoiceCreateWithoutSpaceInput!]
  delete: [InvoiceWhereUniqueInput!]
  connect: [InvoiceWhereUniqueInput!]
  set: [InvoiceWhereUniqueInput!]
  disconnect: [InvoiceWhereUniqueInput!]
  update: [InvoiceUpdateWithWhereUniqueWithoutSpaceInput!]
  upsert: [InvoiceUpsertWithWhereUniqueWithoutSpaceInput!]
  deleteMany: [InvoiceScalarWhereInput!]
  updateMany: [InvoiceUpdateManyWithWhereNestedInput!]
}

input InvoiceUpdateManyWithWhereNestedInput {
  where: InvoiceScalarWhereInput!
  data: InvoiceUpdateManyDataInput!
}

input InvoiceUpdateOneRequiredWithoutItemsInput {
  create: InvoiceCreateWithoutItemsInput
  update: InvoiceUpdateWithoutItemsDataInput
  upsert: InvoiceUpsertWithoutItemsInput
  connect: InvoiceWhereUniqueInput
}

input InvoiceUpdateOneWithoutChargesInput {
  create: InvoiceCreateWithoutChargesInput
  update: InvoiceUpdateWithoutChargesDataInput
  upsert: InvoiceUpsertWithoutChargesInput
  delete: Boolean
  disconnect: Boolean
  connect: InvoiceWhereUniqueInput
}

input InvoiceUpdateWithoutChargesDataInput {
  type: InvoiceType
  month: String
  from: DateTime
  to: DateTime
  paid: DateTime
  amount: Float
  items: InvoiceItemUpdateManyWithoutInvoiceInput
  plan: PlanUpdateOneRequiredWithoutInvoicesInput
  discount: Int
  space: SpaceUpdateOneRequiredWithoutInvoicesInput
}

input InvoiceUpdateWithoutItemsDataInput {
  type: InvoiceType
  month: String
  from: DateTime
  to: DateTime
  paid: DateTime
  amount: Float
  plan: PlanUpdateOneRequiredWithoutInvoicesInput
  discount: Int
  space: SpaceUpdateOneRequiredWithoutInvoicesInput
  charges: InvoiceChargeUpdateManyWithoutInvoiceInput
}

input InvoiceUpdateWithoutPlanDataInput {
  type: InvoiceType
  month: String
  from: DateTime
  to: DateTime
  paid: DateTime
  amount: Float
  items: InvoiceItemUpdateManyWithoutInvoiceInput
  discount: Int
  space: SpaceUpdateOneRequiredWithoutInvoicesInput
  charges: InvoiceChargeUpdateManyWithoutInvoiceInput
}

input InvoiceUpdateWithoutSpaceDataInput {
  type: InvoiceType
  month: String
  from: DateTime
  to: DateTime
  paid: DateTime
  amount: Float
  items: InvoiceItemUpdateManyWithoutInvoiceInput
  plan: PlanUpdateOneRequiredWithoutInvoicesInput
  discount: Int
  charges: InvoiceChargeUpdateManyWithoutInvoiceInput
}

input InvoiceUpdateWithWhereUniqueWithoutPlanInput {
  where: InvoiceWhereUniqueInput!
  data: InvoiceUpdateWithoutPlanDataInput!
}

input InvoiceUpdateWithWhereUniqueWithoutSpaceInput {
  where: InvoiceWhereUniqueInput!
  data: InvoiceUpdateWithoutSpaceDataInput!
}

input InvoiceUpsertWithoutChargesInput {
  update: InvoiceUpdateWithoutChargesDataInput!
  create: InvoiceCreateWithoutChargesInput!
}

input InvoiceUpsertWithoutItemsInput {
  update: InvoiceUpdateWithoutItemsDataInput!
  create: InvoiceCreateWithoutItemsInput!
}

input InvoiceUpsertWithWhereUniqueWithoutPlanInput {
  where: InvoiceWhereUniqueInput!
  update: InvoiceUpdateWithoutPlanDataInput!
  create: InvoiceCreateWithoutPlanInput!
}

input InvoiceUpsertWithWhereUniqueWithoutSpaceInput {
  where: InvoiceWhereUniqueInput!
  update: InvoiceUpdateWithoutSpaceDataInput!
  create: InvoiceCreateWithoutSpaceInput!
}

input InvoiceWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  type: InvoiceType
  type_not: InvoiceType
  type_in: [InvoiceType!]
  type_not_in: [InvoiceType!]
  month: String
  month_not: String
  month_in: [String!]
  month_not_in: [String!]
  month_lt: String
  month_lte: String
  month_gt: String
  month_gte: String
  month_contains: String
  month_not_contains: String
  month_starts_with: String
  month_not_starts_with: String
  month_ends_with: String
  month_not_ends_with: String
  from: DateTime
  from_not: DateTime
  from_in: [DateTime!]
  from_not_in: [DateTime!]
  from_lt: DateTime
  from_lte: DateTime
  from_gt: DateTime
  from_gte: DateTime
  to: DateTime
  to_not: DateTime
  to_in: [DateTime!]
  to_not_in: [DateTime!]
  to_lt: DateTime
  to_lte: DateTime
  to_gt: DateTime
  to_gte: DateTime
  paid: DateTime
  paid_not: DateTime
  paid_in: [DateTime!]
  paid_not_in: [DateTime!]
  paid_lt: DateTime
  paid_lte: DateTime
  paid_gt: DateTime
  paid_gte: DateTime
  amount: Float
  amount_not: Float
  amount_in: [Float!]
  amount_not_in: [Float!]
  amount_lt: Float
  amount_lte: Float
  amount_gt: Float
  amount_gte: Float
  items_every: InvoiceItemWhereInput
  items_some: InvoiceItemWhereInput
  items_none: InvoiceItemWhereInput
  plan: PlanWhereInput
  discount: Int
  discount_not: Int
  discount_in: [Int!]
  discount_not_in: [Int!]
  discount_lt: Int
  discount_lte: Int
  discount_gt: Int
  discount_gte: Int
  space: SpaceWhereInput
  charges_every: InvoiceChargeWhereInput
  charges_some: InvoiceChargeWhereInput
  charges_none: InvoiceChargeWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [InvoiceWhereInput!]
  OR: [InvoiceWhereInput!]
  NOT: [InvoiceWhereInput!]
}

input InvoiceWhereUniqueInput {
  id: ID
}

scalar Json

scalar Long

type Mutation {
  createApp(data: AppCreateInput!): App!
  updateApp(data: AppUpdateInput!, where: AppWhereUniqueInput!): App
  updateManyApps(data: AppUpdateManyMutationInput!, where: AppWhereInput): BatchPayload!
  upsertApp(where: AppWhereUniqueInput!, create: AppCreateInput!, update: AppUpdateInput!): App!
  deleteApp(where: AppWhereUniqueInput!): App
  deleteManyApps(where: AppWhereInput): BatchPayload!
  createAppDeployment(data: AppDeploymentCreateInput!): AppDeployment!
  updateAppDeployment(data: AppDeploymentUpdateInput!, where: AppDeploymentWhereUniqueInput!): AppDeployment
  updateManyAppDeployments(data: AppDeploymentUpdateManyMutationInput!, where: AppDeploymentWhereInput): BatchPayload!
  upsertAppDeployment(where: AppDeploymentWhereUniqueInput!, create: AppDeploymentCreateInput!, update: AppDeploymentUpdateInput!): AppDeployment!
  deleteAppDeployment(where: AppDeploymentWhereUniqueInput!): AppDeployment
  deleteManyAppDeployments(where: AppDeploymentWhereInput): BatchPayload!
  createAppSource(data: AppSourceCreateInput!): AppSource!
  updateAppSource(data: AppSourceUpdateInput!, where: AppSourceWhereUniqueInput!): AppSource
  updateManyAppSources(data: AppSourceUpdateManyMutationInput!, where: AppSourceWhereInput): BatchPayload!
  upsertAppSource(where: AppSourceWhereUniqueInput!, create: AppSourceCreateInput!, update: AppSourceUpdateInput!): AppSource!
  deleteAppSource(where: AppSourceWhereUniqueInput!): AppSource
  deleteManyAppSources(where: AppSourceWhereInput): BatchPayload!
  createAppSourceEvent(data: AppSourceEventCreateInput!): AppSourceEvent!
  updateAppSourceEvent(data: AppSourceEventUpdateInput!, where: AppSourceEventWhereUniqueInput!): AppSourceEvent
  updateManyAppSourceEvents(data: AppSourceEventUpdateManyMutationInput!, where: AppSourceEventWhereInput): BatchPayload!
  upsertAppSourceEvent(where: AppSourceEventWhereUniqueInput!, create: AppSourceEventCreateInput!, update: AppSourceEventUpdateInput!): AppSourceEvent!
  deleteAppSourceEvent(where: AppSourceEventWhereUniqueInput!): AppSourceEvent
  deleteManyAppSourceEvents(where: AppSourceEventWhereInput): BatchPayload!
  createArtifact(data: ArtifactCreateInput!): Artifact!
  updateArtifact(data: ArtifactUpdateInput!, where: ArtifactWhereUniqueInput!): Artifact
  updateManyArtifacts(data: ArtifactUpdateManyMutationInput!, where: ArtifactWhereInput): BatchPayload!
  upsertArtifact(where: ArtifactWhereUniqueInput!, create: ArtifactCreateInput!, update: ArtifactUpdateInput!): Artifact!
  deleteArtifact(where: ArtifactWhereUniqueInput!): Artifact
  deleteManyArtifacts(where: ArtifactWhereInput): BatchPayload!
  createArtifactRaw(data: ArtifactRawCreateInput!): ArtifactRaw!
  updateArtifactRaw(data: ArtifactRawUpdateInput!, where: ArtifactRawWhereUniqueInput!): ArtifactRaw
  updateManyArtifactRaws(data: ArtifactRawUpdateManyMutationInput!, where: ArtifactRawWhereInput): BatchPayload!
  upsertArtifactRaw(where: ArtifactRawWhereUniqueInput!, create: ArtifactRawCreateInput!, update: ArtifactRawUpdateInput!): ArtifactRaw!
  deleteArtifactRaw(where: ArtifactRawWhereUniqueInput!): ArtifactRaw
  deleteManyArtifactRaws(where: ArtifactRawWhereInput): BatchPayload!
  createAuth(data: AuthCreateInput!): Auth!
  updateAuth(data: AuthUpdateInput!, where: AuthWhereUniqueInput!): Auth
  updateManyAuths(data: AuthUpdateManyMutationInput!, where: AuthWhereInput): BatchPayload!
  upsertAuth(where: AuthWhereUniqueInput!, create: AuthCreateInput!, update: AuthUpdateInput!): Auth!
  deleteAuth(where: AuthWhereUniqueInput!): Auth
  deleteManyAuths(where: AuthWhereInput): BatchPayload!
  createDeployment(data: DeploymentCreateInput!): Deployment!
  updateDeployment(data: DeploymentUpdateInput!, where: DeploymentWhereUniqueInput!): Deployment
  updateManyDeployments(data: DeploymentUpdateManyMutationInput!, where: DeploymentWhereInput): BatchPayload!
  upsertDeployment(where: DeploymentWhereUniqueInput!, create: DeploymentCreateInput!, update: DeploymentUpdateInput!): Deployment!
  deleteDeployment(where: DeploymentWhereUniqueInput!): Deployment
  deleteManyDeployments(where: DeploymentWhereInput): BatchPayload!
  createEvent(data: EventCreateInput!): Event!
  updateEvent(data: EventUpdateInput!, where: EventWhereUniqueInput!): Event
  updateManyEvents(data: EventUpdateManyMutationInput!, where: EventWhereInput): BatchPayload!
  upsertEvent(where: EventWhereUniqueInput!, create: EventCreateInput!, update: EventUpdateInput!): Event!
  deleteEvent(where: EventWhereUniqueInput!): Event
  deleteManyEvents(where: EventWhereInput): BatchPayload!
  createHost(data: HostCreateInput!): Host!
  updateHost(data: HostUpdateInput!, where: HostWhereUniqueInput!): Host
  updateManyHosts(data: HostUpdateManyMutationInput!, where: HostWhereInput): BatchPayload!
  upsertHost(where: HostWhereUniqueInput!, create: HostCreateInput!, update: HostUpdateInput!): Host!
  deleteHost(where: HostWhereUniqueInput!): Host
  deleteManyHosts(where: HostWhereInput): BatchPayload!
  createImage(data: ImageCreateInput!): Image!
  updateImage(data: ImageUpdateInput!, where: ImageWhereUniqueInput!): Image
  updateManyImages(data: ImageUpdateManyMutationInput!, where: ImageWhereInput): BatchPayload!
  upsertImage(where: ImageWhereUniqueInput!, create: ImageCreateInput!, update: ImageUpdateInput!): Image!
  deleteImage(where: ImageWhereUniqueInput!): Image
  deleteManyImages(where: ImageWhereInput): BatchPayload!
  createImageDigest(data: ImageDigestCreateInput!): ImageDigest!
  updateImageDigest(data: ImageDigestUpdateInput!, where: ImageDigestWhereUniqueInput!): ImageDigest
  updateManyImageDigests(data: ImageDigestUpdateManyMutationInput!, where: ImageDigestWhereInput): BatchPayload!
  upsertImageDigest(where: ImageDigestWhereUniqueInput!, create: ImageDigestCreateInput!, update: ImageDigestUpdateInput!): ImageDigest!
  deleteImageDigest(where: ImageDigestWhereUniqueInput!): ImageDigest
  deleteManyImageDigests(where: ImageDigestWhereInput): BatchPayload!
  createImageTag(data: ImageTagCreateInput!): ImageTag!
  updateImageTag(data: ImageTagUpdateInput!, where: ImageTagWhereUniqueInput!): ImageTag
  updateManyImageTags(data: ImageTagUpdateManyMutationInput!, where: ImageTagWhereInput): BatchPayload!
  upsertImageTag(where: ImageTagWhereUniqueInput!, create: ImageTagCreateInput!, update: ImageTagUpdateInput!): ImageTag!
  deleteImageTag(where: ImageTagWhereUniqueInput!): ImageTag
  deleteManyImageTags(where: ImageTagWhereInput): BatchPayload!
  createInstance(data: InstanceCreateInput!): Instance!
  updateInstance(data: InstanceUpdateInput!, where: InstanceWhereUniqueInput!): Instance
  updateManyInstances(data: InstanceUpdateManyMutationInput!, where: InstanceWhereInput): BatchPayload!
  upsertInstance(where: InstanceWhereUniqueInput!, create: InstanceCreateInput!, update: InstanceUpdateInput!): Instance!
  deleteInstance(where: InstanceWhereUniqueInput!): Instance
  deleteManyInstances(where: InstanceWhereInput): BatchPayload!
  createInvoice(data: InvoiceCreateInput!): Invoice!
  updateInvoice(data: InvoiceUpdateInput!, where: InvoiceWhereUniqueInput!): Invoice
  updateManyInvoices(data: InvoiceUpdateManyMutationInput!, where: InvoiceWhereInput): BatchPayload!
  upsertInvoice(where: InvoiceWhereUniqueInput!, create: InvoiceCreateInput!, update: InvoiceUpdateInput!): Invoice!
  deleteInvoice(where: InvoiceWhereUniqueInput!): Invoice
  deleteManyInvoices(where: InvoiceWhereInput): BatchPayload!
  createInvoiceCharge(data: InvoiceChargeCreateInput!): InvoiceCharge!
  updateInvoiceCharge(data: InvoiceChargeUpdateInput!, where: InvoiceChargeWhereUniqueInput!): InvoiceCharge
  updateManyInvoiceCharges(data: InvoiceChargeUpdateManyMutationInput!, where: InvoiceChargeWhereInput): BatchPayload!
  upsertInvoiceCharge(where: InvoiceChargeWhereUniqueInput!, create: InvoiceChargeCreateInput!, update: InvoiceChargeUpdateInput!): InvoiceCharge!
  deleteInvoiceCharge(where: InvoiceChargeWhereUniqueInput!): InvoiceCharge
  deleteManyInvoiceCharges(where: InvoiceChargeWhereInput): BatchPayload!
  createInvoiceItem(data: InvoiceItemCreateInput!): InvoiceItem!
  updateInvoiceItem(data: InvoiceItemUpdateInput!, where: InvoiceItemWhereUniqueInput!): InvoiceItem
  updateManyInvoiceItems(data: InvoiceItemUpdateManyMutationInput!, where: InvoiceItemWhereInput): BatchPayload!
  upsertInvoiceItem(where: InvoiceItemWhereUniqueInput!, create: InvoiceItemCreateInput!, update: InvoiceItemUpdateInput!): InvoiceItem!
  deleteInvoiceItem(where: InvoiceItemWhereUniqueInput!): InvoiceItem
  deleteManyInvoiceItems(where: InvoiceItemWhereInput): BatchPayload!
  createPaymentCard(data: PaymentCardCreateInput!): PaymentCard!
  updatePaymentCard(data: PaymentCardUpdateInput!, where: PaymentCardWhereUniqueInput!): PaymentCard
  updateManyPaymentCards(data: PaymentCardUpdateManyMutationInput!, where: PaymentCardWhereInput): BatchPayload!
  upsertPaymentCard(where: PaymentCardWhereUniqueInput!, create: PaymentCardCreateInput!, update: PaymentCardUpdateInput!): PaymentCard!
  deletePaymentCard(where: PaymentCardWhereUniqueInput!): PaymentCard
  deleteManyPaymentCards(where: PaymentCardWhereInput): BatchPayload!
  createPlan(data: PlanCreateInput!): Plan!
  updatePlan(data: PlanUpdateInput!, where: PlanWhereUniqueInput!): Plan
  updateManyPlans(data: PlanUpdateManyMutationInput!, where: PlanWhereInput): BatchPayload!
  upsertPlan(where: PlanWhereUniqueInput!, create: PlanCreateInput!, update: PlanUpdateInput!): Plan!
  deletePlan(where: PlanWhereUniqueInput!): Plan
  deleteManyPlans(where: PlanWhereInput): BatchPayload!
  createProvider(data: ProviderCreateInput!): Provider!
  updateProvider(data: ProviderUpdateInput!, where: ProviderWhereUniqueInput!): Provider
  updateManyProviders(data: ProviderUpdateManyMutationInput!, where: ProviderWhereInput): BatchPayload!
  upsertProvider(where: ProviderWhereUniqueInput!, create: ProviderCreateInput!, update: ProviderUpdateInput!): Provider!
  deleteProvider(where: ProviderWhereUniqueInput!): Provider
  deleteManyProviders(where: ProviderWhereInput): BatchPayload!
  createRole(data: RoleCreateInput!): Role!
  updateRole(data: RoleUpdateInput!, where: RoleWhereUniqueInput!): Role
  updateManyRoles(data: RoleUpdateManyMutationInput!, where: RoleWhereInput): BatchPayload!
  upsertRole(where: RoleWhereUniqueInput!, create: RoleCreateInput!, update: RoleUpdateInput!): Role!
  deleteRole(where: RoleWhereUniqueInput!): Role
  deleteManyRoles(where: RoleWhereInput): BatchPayload!
  createService(data: ServiceCreateInput!): Service!
  updateService(data: ServiceUpdateInput!, where: ServiceWhereUniqueInput!): Service
  updateManyServices(data: ServiceUpdateManyMutationInput!, where: ServiceWhereInput): BatchPayload!
  upsertService(where: ServiceWhereUniqueInput!, create: ServiceCreateInput!, update: ServiceUpdateInput!): Service!
  deleteService(where: ServiceWhereUniqueInput!): Service
  deleteManyServices(where: ServiceWhereInput): BatchPayload!
  createServiceTag(data: ServiceTagCreateInput!): ServiceTag!
  updateServiceTag(data: ServiceTagUpdateInput!, where: ServiceTagWhereUniqueInput!): ServiceTag
  updateManyServiceTags(data: ServiceTagUpdateManyMutationInput!, where: ServiceTagWhereInput): BatchPayload!
  upsertServiceTag(where: ServiceTagWhereUniqueInput!, create: ServiceTagCreateInput!, update: ServiceTagUpdateInput!): ServiceTag!
  deleteServiceTag(where: ServiceTagWhereUniqueInput!): ServiceTag
  deleteManyServiceTags(where: ServiceTagWhereInput): BatchPayload!
  createSpace(data: SpaceCreateInput!): Space!
  updateSpace(data: SpaceUpdateInput!, where: SpaceWhereUniqueInput!): Space
  updateManySpaces(data: SpaceUpdateManyMutationInput!, where: SpaceWhereInput): BatchPayload!
  upsertSpace(where: SpaceWhereUniqueInput!, create: SpaceCreateInput!, update: SpaceUpdateInput!): Space!
  deleteSpace(where: SpaceWhereUniqueInput!): Space
  deleteManySpaces(where: SpaceWhereInput): BatchPayload!
  createToken(data: TokenCreateInput!): Token!
  updateToken(data: TokenUpdateInput!, where: TokenWhereUniqueInput!): Token
  updateManyTokens(data: TokenUpdateManyMutationInput!, where: TokenWhereInput): BatchPayload!
  upsertToken(where: TokenWhereUniqueInput!, create: TokenCreateInput!, update: TokenUpdateInput!): Token!
  deleteToken(where: TokenWhereUniqueInput!): Token
  deleteManyTokens(where: TokenWhereInput): BatchPayload!
  createTrigger(data: TriggerCreateInput!): Trigger!
  updateTrigger(data: TriggerUpdateInput!, where: TriggerWhereUniqueInput!): Trigger
  updateManyTriggers(data: TriggerUpdateManyMutationInput!, where: TriggerWhereInput): BatchPayload!
  upsertTrigger(where: TriggerWhereUniqueInput!, create: TriggerCreateInput!, update: TriggerUpdateInput!): Trigger!
  deleteTrigger(where: TriggerWhereUniqueInput!): Trigger
  deleteManyTriggers(where: TriggerWhereInput): BatchPayload!
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  createVariable(data: VariableCreateInput!): Variable!
  updateVariable(data: VariableUpdateInput!, where: VariableWhereUniqueInput!): Variable
  updateManyVariables(data: VariableUpdateManyMutationInput!, where: VariableWhereInput): BatchPayload!
  upsertVariable(where: VariableWhereUniqueInput!, create: VariableCreateInput!, update: VariableUpdateInput!): Variable!
  deleteVariable(where: VariableWhereUniqueInput!): Variable
  deleteManyVariables(where: VariableWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type PaymentCard {
  id: ID!
  stripeId: String!
  brand: String
  last4Chars: String
  expiryMonth: Int
  expiryYear: Int
  charges(where: InvoiceChargeWhereInput, orderBy: InvoiceChargeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [InvoiceCharge!]
  user: User!
}

type PaymentCardConnection {
  pageInfo: PageInfo!
  edges: [PaymentCardEdge]!
  aggregate: AggregatePaymentCard!
}

input PaymentCardCreateInput {
  stripeId: String!
  brand: String
  last4Chars: String
  expiryMonth: Int
  expiryYear: Int
  charges: InvoiceChargeCreateManyWithoutPaymentCardInput
  user: UserCreateOneWithoutPaymentCardsInput!
}

input PaymentCardCreateManyWithoutUserInput {
  create: [PaymentCardCreateWithoutUserInput!]
  connect: [PaymentCardWhereUniqueInput!]
}

input PaymentCardCreateOneInput {
  create: PaymentCardCreateInput
  connect: PaymentCardWhereUniqueInput
}

input PaymentCardCreateOneWithoutChargesInput {
  create: PaymentCardCreateWithoutChargesInput
  connect: PaymentCardWhereUniqueInput
}

input PaymentCardCreateWithoutChargesInput {
  stripeId: String!
  brand: String
  last4Chars: String
  expiryMonth: Int
  expiryYear: Int
  user: UserCreateOneWithoutPaymentCardsInput!
}

input PaymentCardCreateWithoutUserInput {
  stripeId: String!
  brand: String
  last4Chars: String
  expiryMonth: Int
  expiryYear: Int
  charges: InvoiceChargeCreateManyWithoutPaymentCardInput
}

type PaymentCardEdge {
  node: PaymentCard!
  cursor: String!
}

enum PaymentCardOrderByInput {
  id_ASC
  id_DESC
  stripeId_ASC
  stripeId_DESC
  brand_ASC
  brand_DESC
  last4Chars_ASC
  last4Chars_DESC
  expiryMonth_ASC
  expiryMonth_DESC
  expiryYear_ASC
  expiryYear_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type PaymentCardPreviousValues {
  id: ID!
  stripeId: String!
  brand: String
  last4Chars: String
  expiryMonth: Int
  expiryYear: Int
}

input PaymentCardScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  stripeId: String
  stripeId_not: String
  stripeId_in: [String!]
  stripeId_not_in: [String!]
  stripeId_lt: String
  stripeId_lte: String
  stripeId_gt: String
  stripeId_gte: String
  stripeId_contains: String
  stripeId_not_contains: String
  stripeId_starts_with: String
  stripeId_not_starts_with: String
  stripeId_ends_with: String
  stripeId_not_ends_with: String
  brand: String
  brand_not: String
  brand_in: [String!]
  brand_not_in: [String!]
  brand_lt: String
  brand_lte: String
  brand_gt: String
  brand_gte: String
  brand_contains: String
  brand_not_contains: String
  brand_starts_with: String
  brand_not_starts_with: String
  brand_ends_with: String
  brand_not_ends_with: String
  last4Chars: String
  last4Chars_not: String
  last4Chars_in: [String!]
  last4Chars_not_in: [String!]
  last4Chars_lt: String
  last4Chars_lte: String
  last4Chars_gt: String
  last4Chars_gte: String
  last4Chars_contains: String
  last4Chars_not_contains: String
  last4Chars_starts_with: String
  last4Chars_not_starts_with: String
  last4Chars_ends_with: String
  last4Chars_not_ends_with: String
  expiryMonth: Int
  expiryMonth_not: Int
  expiryMonth_in: [Int!]
  expiryMonth_not_in: [Int!]
  expiryMonth_lt: Int
  expiryMonth_lte: Int
  expiryMonth_gt: Int
  expiryMonth_gte: Int
  expiryYear: Int
  expiryYear_not: Int
  expiryYear_in: [Int!]
  expiryYear_not_in: [Int!]
  expiryYear_lt: Int
  expiryYear_lte: Int
  expiryYear_gt: Int
  expiryYear_gte: Int
  AND: [PaymentCardScalarWhereInput!]
  OR: [PaymentCardScalarWhereInput!]
  NOT: [PaymentCardScalarWhereInput!]
}

type PaymentCardSubscriptionPayload {
  mutation: MutationType!
  node: PaymentCard
  updatedFields: [String!]
  previousValues: PaymentCardPreviousValues
}

input PaymentCardSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: PaymentCardWhereInput
  AND: [PaymentCardSubscriptionWhereInput!]
  OR: [PaymentCardSubscriptionWhereInput!]
  NOT: [PaymentCardSubscriptionWhereInput!]
}

input PaymentCardUpdateDataInput {
  stripeId: String
  brand: String
  last4Chars: String
  expiryMonth: Int
  expiryYear: Int
  charges: InvoiceChargeUpdateManyWithoutPaymentCardInput
  user: UserUpdateOneRequiredWithoutPaymentCardsInput
}

input PaymentCardUpdateInput {
  stripeId: String
  brand: String
  last4Chars: String
  expiryMonth: Int
  expiryYear: Int
  charges: InvoiceChargeUpdateManyWithoutPaymentCardInput
  user: UserUpdateOneRequiredWithoutPaymentCardsInput
}

input PaymentCardUpdateManyDataInput {
  stripeId: String
  brand: String
  last4Chars: String
  expiryMonth: Int
  expiryYear: Int
}

input PaymentCardUpdateManyMutationInput {
  stripeId: String
  brand: String
  last4Chars: String
  expiryMonth: Int
  expiryYear: Int
}

input PaymentCardUpdateManyWithoutUserInput {
  create: [PaymentCardCreateWithoutUserInput!]
  delete: [PaymentCardWhereUniqueInput!]
  connect: [PaymentCardWhereUniqueInput!]
  set: [PaymentCardWhereUniqueInput!]
  disconnect: [PaymentCardWhereUniqueInput!]
  update: [PaymentCardUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [PaymentCardUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [PaymentCardScalarWhereInput!]
  updateMany: [PaymentCardUpdateManyWithWhereNestedInput!]
}

input PaymentCardUpdateManyWithWhereNestedInput {
  where: PaymentCardScalarWhereInput!
  data: PaymentCardUpdateManyDataInput!
}

input PaymentCardUpdateOneInput {
  create: PaymentCardCreateInput
  update: PaymentCardUpdateDataInput
  upsert: PaymentCardUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: PaymentCardWhereUniqueInput
}

input PaymentCardUpdateOneWithoutChargesInput {
  create: PaymentCardCreateWithoutChargesInput
  update: PaymentCardUpdateWithoutChargesDataInput
  upsert: PaymentCardUpsertWithoutChargesInput
  delete: Boolean
  disconnect: Boolean
  connect: PaymentCardWhereUniqueInput
}

input PaymentCardUpdateWithoutChargesDataInput {
  stripeId: String
  brand: String
  last4Chars: String
  expiryMonth: Int
  expiryYear: Int
  user: UserUpdateOneRequiredWithoutPaymentCardsInput
}

input PaymentCardUpdateWithoutUserDataInput {
  stripeId: String
  brand: String
  last4Chars: String
  expiryMonth: Int
  expiryYear: Int
  charges: InvoiceChargeUpdateManyWithoutPaymentCardInput
}

input PaymentCardUpdateWithWhereUniqueWithoutUserInput {
  where: PaymentCardWhereUniqueInput!
  data: PaymentCardUpdateWithoutUserDataInput!
}

input PaymentCardUpsertNestedInput {
  update: PaymentCardUpdateDataInput!
  create: PaymentCardCreateInput!
}

input PaymentCardUpsertWithoutChargesInput {
  update: PaymentCardUpdateWithoutChargesDataInput!
  create: PaymentCardCreateWithoutChargesInput!
}

input PaymentCardUpsertWithWhereUniqueWithoutUserInput {
  where: PaymentCardWhereUniqueInput!
  update: PaymentCardUpdateWithoutUserDataInput!
  create: PaymentCardCreateWithoutUserInput!
}

input PaymentCardWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  stripeId: String
  stripeId_not: String
  stripeId_in: [String!]
  stripeId_not_in: [String!]
  stripeId_lt: String
  stripeId_lte: String
  stripeId_gt: String
  stripeId_gte: String
  stripeId_contains: String
  stripeId_not_contains: String
  stripeId_starts_with: String
  stripeId_not_starts_with: String
  stripeId_ends_with: String
  stripeId_not_ends_with: String
  brand: String
  brand_not: String
  brand_in: [String!]
  brand_not_in: [String!]
  brand_lt: String
  brand_lte: String
  brand_gt: String
  brand_gte: String
  brand_contains: String
  brand_not_contains: String
  brand_starts_with: String
  brand_not_starts_with: String
  brand_ends_with: String
  brand_not_ends_with: String
  last4Chars: String
  last4Chars_not: String
  last4Chars_in: [String!]
  last4Chars_not_in: [String!]
  last4Chars_lt: String
  last4Chars_lte: String
  last4Chars_gt: String
  last4Chars_gte: String
  last4Chars_contains: String
  last4Chars_not_contains: String
  last4Chars_starts_with: String
  last4Chars_not_starts_with: String
  last4Chars_ends_with: String
  last4Chars_not_ends_with: String
  expiryMonth: Int
  expiryMonth_not: Int
  expiryMonth_in: [Int!]
  expiryMonth_not_in: [Int!]
  expiryMonth_lt: Int
  expiryMonth_lte: Int
  expiryMonth_gt: Int
  expiryMonth_gte: Int
  expiryYear: Int
  expiryYear_not: Int
  expiryYear_in: [Int!]
  expiryYear_not_in: [Int!]
  expiryYear_lt: Int
  expiryYear_lte: Int
  expiryYear_gt: Int
  expiryYear_gte: Int
  charges_every: InvoiceChargeWhereInput
  charges_some: InvoiceChargeWhereInput
  charges_none: InvoiceChargeWhereInput
  user: UserWhereInput
  AND: [PaymentCardWhereInput!]
  OR: [PaymentCardWhereInput!]
  NOT: [PaymentCardWhereInput!]
}

input PaymentCardWhereUniqueInput {
  id: ID
  stripeId: String
}

type Plan {
  id: ID!
  name: String!
  displayName: String!
  price: Float!
  status: PlanStatus
  features: Json!
  createdAt: DateTime!
  spaces(where: SpaceWhereInput, orderBy: SpaceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Space!]
  invoices(where: InvoiceWhereInput, orderBy: InvoiceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Invoice!]
}

type PlanConnection {
  pageInfo: PageInfo!
  edges: [PlanEdge]!
  aggregate: AggregatePlan!
}

input PlanCreateInput {
  name: String!
  displayName: String!
  price: Float!
  status: PlanStatus
  features: Json!
  spaces: SpaceCreateManyWithoutPlanInput
  invoices: InvoiceCreateManyWithoutPlanInput
}

input PlanCreateOneWithoutInvoicesInput {
  create: PlanCreateWithoutInvoicesInput
  connect: PlanWhereUniqueInput
}

input PlanCreateOneWithoutSpacesInput {
  create: PlanCreateWithoutSpacesInput
  connect: PlanWhereUniqueInput
}

input PlanCreateWithoutInvoicesInput {
  name: String!
  displayName: String!
  price: Float!
  status: PlanStatus
  features: Json!
  spaces: SpaceCreateManyWithoutPlanInput
}

input PlanCreateWithoutSpacesInput {
  name: String!
  displayName: String!
  price: Float!
  status: PlanStatus
  features: Json!
  invoices: InvoiceCreateManyWithoutPlanInput
}

type PlanEdge {
  node: Plan!
  cursor: String!
}

enum PlanOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  displayName_ASC
  displayName_DESC
  price_ASC
  price_DESC
  status_ASC
  status_DESC
  features_ASC
  features_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type PlanPreviousValues {
  id: ID!
  name: String!
  displayName: String!
  price: Float!
  status: PlanStatus
  features: Json!
  createdAt: DateTime!
}

enum PlanStatus {
  ACTIVE
  RETIRED
}

type PlanSubscriptionPayload {
  mutation: MutationType!
  node: Plan
  updatedFields: [String!]
  previousValues: PlanPreviousValues
}

input PlanSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: PlanWhereInput
  AND: [PlanSubscriptionWhereInput!]
  OR: [PlanSubscriptionWhereInput!]
  NOT: [PlanSubscriptionWhereInput!]
}

input PlanUpdateInput {
  name: String
  displayName: String
  price: Float
  status: PlanStatus
  features: Json
  spaces: SpaceUpdateManyWithoutPlanInput
  invoices: InvoiceUpdateManyWithoutPlanInput
}

input PlanUpdateManyMutationInput {
  name: String
  displayName: String
  price: Float
  status: PlanStatus
  features: Json
}

input PlanUpdateOneRequiredWithoutInvoicesInput {
  create: PlanCreateWithoutInvoicesInput
  update: PlanUpdateWithoutInvoicesDataInput
  upsert: PlanUpsertWithoutInvoicesInput
  connect: PlanWhereUniqueInput
}

input PlanUpdateOneWithoutSpacesInput {
  create: PlanCreateWithoutSpacesInput
  update: PlanUpdateWithoutSpacesDataInput
  upsert: PlanUpsertWithoutSpacesInput
  delete: Boolean
  disconnect: Boolean
  connect: PlanWhereUniqueInput
}

input PlanUpdateWithoutInvoicesDataInput {
  name: String
  displayName: String
  price: Float
  status: PlanStatus
  features: Json
  spaces: SpaceUpdateManyWithoutPlanInput
}

input PlanUpdateWithoutSpacesDataInput {
  name: String
  displayName: String
  price: Float
  status: PlanStatus
  features: Json
  invoices: InvoiceUpdateManyWithoutPlanInput
}

input PlanUpsertWithoutInvoicesInput {
  update: PlanUpdateWithoutInvoicesDataInput!
  create: PlanCreateWithoutInvoicesInput!
}

input PlanUpsertWithoutSpacesInput {
  update: PlanUpdateWithoutSpacesDataInput!
  create: PlanCreateWithoutSpacesInput!
}

input PlanWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  displayName: String
  displayName_not: String
  displayName_in: [String!]
  displayName_not_in: [String!]
  displayName_lt: String
  displayName_lte: String
  displayName_gt: String
  displayName_gte: String
  displayName_contains: String
  displayName_not_contains: String
  displayName_starts_with: String
  displayName_not_starts_with: String
  displayName_ends_with: String
  displayName_not_ends_with: String
  price: Float
  price_not: Float
  price_in: [Float!]
  price_not_in: [Float!]
  price_lt: Float
  price_lte: Float
  price_gt: Float
  price_gte: Float
  status: PlanStatus
  status_not: PlanStatus
  status_in: [PlanStatus!]
  status_not_in: [PlanStatus!]
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  spaces_every: SpaceWhereInput
  spaces_some: SpaceWhereInput
  spaces_none: SpaceWhereInput
  invoices_every: InvoiceWhereInput
  invoices_some: InvoiceWhereInput
  invoices_none: InvoiceWhereInput
  AND: [PlanWhereInput!]
  OR: [PlanWhereInput!]
  NOT: [PlanWhereInput!]
}

input PlanWhereUniqueInput {
  id: ID
  name: String
}

type Provider {
  id: ID!
  displayName: String
  name: String
  _unique_name: String!
  provider: String
  accountId: String!
  subAccountId: String
  accessToken: String
  refreshToken: String
  email: String
  scope: [String!]!
  space: Space
  auth: Auth!
  triggers(where: TriggerWhereInput, orderBy: TriggerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Trigger!]
  data: Json
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ProviderConnection {
  pageInfo: PageInfo!
  edges: [ProviderEdge]!
  aggregate: AggregateProvider!
}

input ProviderCreateInput {
  displayName: String
  name: String
  _unique_name: String!
  provider: String
  accountId: String!
  subAccountId: String
  accessToken: String
  refreshToken: String
  email: String
  scope: ProviderCreatescopeInput
  space: SpaceCreateOneWithoutProvidersInput
  auth: AuthCreateOneWithoutProvidersInput!
  triggers: TriggerCreateManyWithoutProviderInput
  data: Json
}

input ProviderCreateManyWithoutAuthInput {
  create: [ProviderCreateWithoutAuthInput!]
  connect: [ProviderWhereUniqueInput!]
}

input ProviderCreateManyWithoutSpaceInput {
  create: [ProviderCreateWithoutSpaceInput!]
  connect: [ProviderWhereUniqueInput!]
}

input ProviderCreateOneWithoutTriggersInput {
  create: ProviderCreateWithoutTriggersInput
  connect: ProviderWhereUniqueInput
}

input ProviderCreatescopeInput {
  set: [String!]
}

input ProviderCreateWithoutAuthInput {
  displayName: String
  name: String
  _unique_name: String!
  provider: String
  accountId: String!
  subAccountId: String
  accessToken: String
  refreshToken: String
  email: String
  scope: ProviderCreatescopeInput
  space: SpaceCreateOneWithoutProvidersInput
  triggers: TriggerCreateManyWithoutProviderInput
  data: Json
}

input ProviderCreateWithoutSpaceInput {
  displayName: String
  name: String
  _unique_name: String!
  provider: String
  accountId: String!
  subAccountId: String
  accessToken: String
  refreshToken: String
  email: String
  scope: ProviderCreatescopeInput
  auth: AuthCreateOneWithoutProvidersInput!
  triggers: TriggerCreateManyWithoutProviderInput
  data: Json
}

input ProviderCreateWithoutTriggersInput {
  displayName: String
  name: String
  _unique_name: String!
  provider: String
  accountId: String!
  subAccountId: String
  accessToken: String
  refreshToken: String
  email: String
  scope: ProviderCreatescopeInput
  space: SpaceCreateOneWithoutProvidersInput
  auth: AuthCreateOneWithoutProvidersInput!
  data: Json
}

type ProviderEdge {
  node: Provider!
  cursor: String!
}

enum ProviderOrderByInput {
  id_ASC
  id_DESC
  displayName_ASC
  displayName_DESC
  name_ASC
  name_DESC
  _unique_name_ASC
  _unique_name_DESC
  provider_ASC
  provider_DESC
  accountId_ASC
  accountId_DESC
  subAccountId_ASC
  subAccountId_DESC
  accessToken_ASC
  accessToken_DESC
  refreshToken_ASC
  refreshToken_DESC
  email_ASC
  email_DESC
  data_ASC
  data_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ProviderPreviousValues {
  id: ID!
  displayName: String
  name: String
  _unique_name: String!
  provider: String
  accountId: String!
  subAccountId: String
  accessToken: String
  refreshToken: String
  email: String
  scope: [String!]!
  data: Json
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ProviderScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  displayName: String
  displayName_not: String
  displayName_in: [String!]
  displayName_not_in: [String!]
  displayName_lt: String
  displayName_lte: String
  displayName_gt: String
  displayName_gte: String
  displayName_contains: String
  displayName_not_contains: String
  displayName_starts_with: String
  displayName_not_starts_with: String
  displayName_ends_with: String
  displayName_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  _unique_name: String
  _unique_name_not: String
  _unique_name_in: [String!]
  _unique_name_not_in: [String!]
  _unique_name_lt: String
  _unique_name_lte: String
  _unique_name_gt: String
  _unique_name_gte: String
  _unique_name_contains: String
  _unique_name_not_contains: String
  _unique_name_starts_with: String
  _unique_name_not_starts_with: String
  _unique_name_ends_with: String
  _unique_name_not_ends_with: String
  provider: String
  provider_not: String
  provider_in: [String!]
  provider_not_in: [String!]
  provider_lt: String
  provider_lte: String
  provider_gt: String
  provider_gte: String
  provider_contains: String
  provider_not_contains: String
  provider_starts_with: String
  provider_not_starts_with: String
  provider_ends_with: String
  provider_not_ends_with: String
  accountId: String
  accountId_not: String
  accountId_in: [String!]
  accountId_not_in: [String!]
  accountId_lt: String
  accountId_lte: String
  accountId_gt: String
  accountId_gte: String
  accountId_contains: String
  accountId_not_contains: String
  accountId_starts_with: String
  accountId_not_starts_with: String
  accountId_ends_with: String
  accountId_not_ends_with: String
  subAccountId: String
  subAccountId_not: String
  subAccountId_in: [String!]
  subAccountId_not_in: [String!]
  subAccountId_lt: String
  subAccountId_lte: String
  subAccountId_gt: String
  subAccountId_gte: String
  subAccountId_contains: String
  subAccountId_not_contains: String
  subAccountId_starts_with: String
  subAccountId_not_starts_with: String
  subAccountId_ends_with: String
  subAccountId_not_ends_with: String
  accessToken: String
  accessToken_not: String
  accessToken_in: [String!]
  accessToken_not_in: [String!]
  accessToken_lt: String
  accessToken_lte: String
  accessToken_gt: String
  accessToken_gte: String
  accessToken_contains: String
  accessToken_not_contains: String
  accessToken_starts_with: String
  accessToken_not_starts_with: String
  accessToken_ends_with: String
  accessToken_not_ends_with: String
  refreshToken: String
  refreshToken_not: String
  refreshToken_in: [String!]
  refreshToken_not_in: [String!]
  refreshToken_lt: String
  refreshToken_lte: String
  refreshToken_gt: String
  refreshToken_gte: String
  refreshToken_contains: String
  refreshToken_not_contains: String
  refreshToken_starts_with: String
  refreshToken_not_starts_with: String
  refreshToken_ends_with: String
  refreshToken_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ProviderScalarWhereInput!]
  OR: [ProviderScalarWhereInput!]
  NOT: [ProviderScalarWhereInput!]
}

type ProviderSubscriptionPayload {
  mutation: MutationType!
  node: Provider
  updatedFields: [String!]
  previousValues: ProviderPreviousValues
}

input ProviderSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ProviderWhereInput
  AND: [ProviderSubscriptionWhereInput!]
  OR: [ProviderSubscriptionWhereInput!]
  NOT: [ProviderSubscriptionWhereInput!]
}

input ProviderUpdateInput {
  displayName: String
  name: String
  _unique_name: String
  provider: String
  accountId: String
  subAccountId: String
  accessToken: String
  refreshToken: String
  email: String
  scope: ProviderUpdatescopeInput
  space: SpaceUpdateOneWithoutProvidersInput
  auth: AuthUpdateOneRequiredWithoutProvidersInput
  triggers: TriggerUpdateManyWithoutProviderInput
  data: Json
}

input ProviderUpdateManyDataInput {
  displayName: String
  name: String
  _unique_name: String
  provider: String
  accountId: String
  subAccountId: String
  accessToken: String
  refreshToken: String
  email: String
  scope: ProviderUpdatescopeInput
  data: Json
}

input ProviderUpdateManyMutationInput {
  displayName: String
  name: String
  _unique_name: String
  provider: String
  accountId: String
  subAccountId: String
  accessToken: String
  refreshToken: String
  email: String
  scope: ProviderUpdatescopeInput
  data: Json
}

input ProviderUpdateManyWithoutAuthInput {
  create: [ProviderCreateWithoutAuthInput!]
  delete: [ProviderWhereUniqueInput!]
  connect: [ProviderWhereUniqueInput!]
  set: [ProviderWhereUniqueInput!]
  disconnect: [ProviderWhereUniqueInput!]
  update: [ProviderUpdateWithWhereUniqueWithoutAuthInput!]
  upsert: [ProviderUpsertWithWhereUniqueWithoutAuthInput!]
  deleteMany: [ProviderScalarWhereInput!]
  updateMany: [ProviderUpdateManyWithWhereNestedInput!]
}

input ProviderUpdateManyWithoutSpaceInput {
  create: [ProviderCreateWithoutSpaceInput!]
  delete: [ProviderWhereUniqueInput!]
  connect: [ProviderWhereUniqueInput!]
  set: [ProviderWhereUniqueInput!]
  disconnect: [ProviderWhereUniqueInput!]
  update: [ProviderUpdateWithWhereUniqueWithoutSpaceInput!]
  upsert: [ProviderUpsertWithWhereUniqueWithoutSpaceInput!]
  deleteMany: [ProviderScalarWhereInput!]
  updateMany: [ProviderUpdateManyWithWhereNestedInput!]
}

input ProviderUpdateManyWithWhereNestedInput {
  where: ProviderScalarWhereInput!
  data: ProviderUpdateManyDataInput!
}

input ProviderUpdateOneWithoutTriggersInput {
  create: ProviderCreateWithoutTriggersInput
  update: ProviderUpdateWithoutTriggersDataInput
  upsert: ProviderUpsertWithoutTriggersInput
  delete: Boolean
  disconnect: Boolean
  connect: ProviderWhereUniqueInput
}

input ProviderUpdatescopeInput {
  set: [String!]
}

input ProviderUpdateWithoutAuthDataInput {
  displayName: String
  name: String
  _unique_name: String
  provider: String
  accountId: String
  subAccountId: String
  accessToken: String
  refreshToken: String
  email: String
  scope: ProviderUpdatescopeInput
  space: SpaceUpdateOneWithoutProvidersInput
  triggers: TriggerUpdateManyWithoutProviderInput
  data: Json
}

input ProviderUpdateWithoutSpaceDataInput {
  displayName: String
  name: String
  _unique_name: String
  provider: String
  accountId: String
  subAccountId: String
  accessToken: String
  refreshToken: String
  email: String
  scope: ProviderUpdatescopeInput
  auth: AuthUpdateOneRequiredWithoutProvidersInput
  triggers: TriggerUpdateManyWithoutProviderInput
  data: Json
}

input ProviderUpdateWithoutTriggersDataInput {
  displayName: String
  name: String
  _unique_name: String
  provider: String
  accountId: String
  subAccountId: String
  accessToken: String
  refreshToken: String
  email: String
  scope: ProviderUpdatescopeInput
  space: SpaceUpdateOneWithoutProvidersInput
  auth: AuthUpdateOneRequiredWithoutProvidersInput
  data: Json
}

input ProviderUpdateWithWhereUniqueWithoutAuthInput {
  where: ProviderWhereUniqueInput!
  data: ProviderUpdateWithoutAuthDataInput!
}

input ProviderUpdateWithWhereUniqueWithoutSpaceInput {
  where: ProviderWhereUniqueInput!
  data: ProviderUpdateWithoutSpaceDataInput!
}

input ProviderUpsertWithoutTriggersInput {
  update: ProviderUpdateWithoutTriggersDataInput!
  create: ProviderCreateWithoutTriggersInput!
}

input ProviderUpsertWithWhereUniqueWithoutAuthInput {
  where: ProviderWhereUniqueInput!
  update: ProviderUpdateWithoutAuthDataInput!
  create: ProviderCreateWithoutAuthInput!
}

input ProviderUpsertWithWhereUniqueWithoutSpaceInput {
  where: ProviderWhereUniqueInput!
  update: ProviderUpdateWithoutSpaceDataInput!
  create: ProviderCreateWithoutSpaceInput!
}

input ProviderWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  displayName: String
  displayName_not: String
  displayName_in: [String!]
  displayName_not_in: [String!]
  displayName_lt: String
  displayName_lte: String
  displayName_gt: String
  displayName_gte: String
  displayName_contains: String
  displayName_not_contains: String
  displayName_starts_with: String
  displayName_not_starts_with: String
  displayName_ends_with: String
  displayName_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  _unique_name: String
  _unique_name_not: String
  _unique_name_in: [String!]
  _unique_name_not_in: [String!]
  _unique_name_lt: String
  _unique_name_lte: String
  _unique_name_gt: String
  _unique_name_gte: String
  _unique_name_contains: String
  _unique_name_not_contains: String
  _unique_name_starts_with: String
  _unique_name_not_starts_with: String
  _unique_name_ends_with: String
  _unique_name_not_ends_with: String
  provider: String
  provider_not: String
  provider_in: [String!]
  provider_not_in: [String!]
  provider_lt: String
  provider_lte: String
  provider_gt: String
  provider_gte: String
  provider_contains: String
  provider_not_contains: String
  provider_starts_with: String
  provider_not_starts_with: String
  provider_ends_with: String
  provider_not_ends_with: String
  accountId: String
  accountId_not: String
  accountId_in: [String!]
  accountId_not_in: [String!]
  accountId_lt: String
  accountId_lte: String
  accountId_gt: String
  accountId_gte: String
  accountId_contains: String
  accountId_not_contains: String
  accountId_starts_with: String
  accountId_not_starts_with: String
  accountId_ends_with: String
  accountId_not_ends_with: String
  subAccountId: String
  subAccountId_not: String
  subAccountId_in: [String!]
  subAccountId_not_in: [String!]
  subAccountId_lt: String
  subAccountId_lte: String
  subAccountId_gt: String
  subAccountId_gte: String
  subAccountId_contains: String
  subAccountId_not_contains: String
  subAccountId_starts_with: String
  subAccountId_not_starts_with: String
  subAccountId_ends_with: String
  subAccountId_not_ends_with: String
  accessToken: String
  accessToken_not: String
  accessToken_in: [String!]
  accessToken_not_in: [String!]
  accessToken_lt: String
  accessToken_lte: String
  accessToken_gt: String
  accessToken_gte: String
  accessToken_contains: String
  accessToken_not_contains: String
  accessToken_starts_with: String
  accessToken_not_starts_with: String
  accessToken_ends_with: String
  accessToken_not_ends_with: String
  refreshToken: String
  refreshToken_not: String
  refreshToken_in: [String!]
  refreshToken_not_in: [String!]
  refreshToken_lt: String
  refreshToken_lte: String
  refreshToken_gt: String
  refreshToken_gte: String
  refreshToken_contains: String
  refreshToken_not_contains: String
  refreshToken_starts_with: String
  refreshToken_not_starts_with: String
  refreshToken_ends_with: String
  refreshToken_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  space: SpaceWhereInput
  auth: AuthWhereInput
  triggers_every: TriggerWhereInput
  triggers_some: TriggerWhereInput
  triggers_none: TriggerWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ProviderWhereInput!]
  OR: [ProviderWhereInput!]
  NOT: [ProviderWhereInput!]
}

input ProviderWhereUniqueInput {
  id: ID
  _unique_name: String
}

type Query {
  app(where: AppWhereUniqueInput!): App
  apps(where: AppWhereInput, orderBy: AppOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [App]!
  appsConnection(where: AppWhereInput, orderBy: AppOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AppConnection!
  appDeployment(where: AppDeploymentWhereUniqueInput!): AppDeployment
  appDeployments(where: AppDeploymentWhereInput, orderBy: AppDeploymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AppDeployment]!
  appDeploymentsConnection(where: AppDeploymentWhereInput, orderBy: AppDeploymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AppDeploymentConnection!
  appSource(where: AppSourceWhereUniqueInput!): AppSource
  appSources(where: AppSourceWhereInput, orderBy: AppSourceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AppSource]!
  appSourcesConnection(where: AppSourceWhereInput, orderBy: AppSourceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AppSourceConnection!
  appSourceEvent(where: AppSourceEventWhereUniqueInput!): AppSourceEvent
  appSourceEvents(where: AppSourceEventWhereInput, orderBy: AppSourceEventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AppSourceEvent]!
  appSourceEventsConnection(where: AppSourceEventWhereInput, orderBy: AppSourceEventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AppSourceEventConnection!
  artifact(where: ArtifactWhereUniqueInput!): Artifact
  artifacts(where: ArtifactWhereInput, orderBy: ArtifactOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Artifact]!
  artifactsConnection(where: ArtifactWhereInput, orderBy: ArtifactOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ArtifactConnection!
  artifactRaw(where: ArtifactRawWhereUniqueInput!): ArtifactRaw
  artifactRaws(where: ArtifactRawWhereInput, orderBy: ArtifactRawOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ArtifactRaw]!
  artifactRawsConnection(where: ArtifactRawWhereInput, orderBy: ArtifactRawOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ArtifactRawConnection!
  auth(where: AuthWhereUniqueInput!): Auth
  auths(where: AuthWhereInput, orderBy: AuthOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Auth]!
  authsConnection(where: AuthWhereInput, orderBy: AuthOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AuthConnection!
  deployment(where: DeploymentWhereUniqueInput!): Deployment
  deployments(where: DeploymentWhereInput, orderBy: DeploymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Deployment]!
  deploymentsConnection(where: DeploymentWhereInput, orderBy: DeploymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DeploymentConnection!
  event(where: EventWhereUniqueInput!): Event
  events(where: EventWhereInput, orderBy: EventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Event]!
  eventsConnection(where: EventWhereInput, orderBy: EventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EventConnection!
  host(where: HostWhereUniqueInput!): Host
  hosts(where: HostWhereInput, orderBy: HostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Host]!
  hostsConnection(where: HostWhereInput, orderBy: HostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): HostConnection!
  image(where: ImageWhereUniqueInput!): Image
  images(where: ImageWhereInput, orderBy: ImageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Image]!
  imagesConnection(where: ImageWhereInput, orderBy: ImageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ImageConnection!
  imageDigest(where: ImageDigestWhereUniqueInput!): ImageDigest
  imageDigests(where: ImageDigestWhereInput, orderBy: ImageDigestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ImageDigest]!
  imageDigestsConnection(where: ImageDigestWhereInput, orderBy: ImageDigestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ImageDigestConnection!
  imageTag(where: ImageTagWhereUniqueInput!): ImageTag
  imageTags(where: ImageTagWhereInput, orderBy: ImageTagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ImageTag]!
  imageTagsConnection(where: ImageTagWhereInput, orderBy: ImageTagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ImageTagConnection!
  instance(where: InstanceWhereUniqueInput!): Instance
  instances(where: InstanceWhereInput, orderBy: InstanceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Instance]!
  instancesConnection(where: InstanceWhereInput, orderBy: InstanceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): InstanceConnection!
  invoice(where: InvoiceWhereUniqueInput!): Invoice
  invoices(where: InvoiceWhereInput, orderBy: InvoiceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Invoice]!
  invoicesConnection(where: InvoiceWhereInput, orderBy: InvoiceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): InvoiceConnection!
  invoiceCharge(where: InvoiceChargeWhereUniqueInput!): InvoiceCharge
  invoiceCharges(where: InvoiceChargeWhereInput, orderBy: InvoiceChargeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [InvoiceCharge]!
  invoiceChargesConnection(where: InvoiceChargeWhereInput, orderBy: InvoiceChargeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): InvoiceChargeConnection!
  invoiceItem(where: InvoiceItemWhereUniqueInput!): InvoiceItem
  invoiceItems(where: InvoiceItemWhereInput, orderBy: InvoiceItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [InvoiceItem]!
  invoiceItemsConnection(where: InvoiceItemWhereInput, orderBy: InvoiceItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): InvoiceItemConnection!
  paymentCard(where: PaymentCardWhereUniqueInput!): PaymentCard
  paymentCards(where: PaymentCardWhereInput, orderBy: PaymentCardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PaymentCard]!
  paymentCardsConnection(where: PaymentCardWhereInput, orderBy: PaymentCardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PaymentCardConnection!
  plan(where: PlanWhereUniqueInput!): Plan
  plans(where: PlanWhereInput, orderBy: PlanOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Plan]!
  plansConnection(where: PlanWhereInput, orderBy: PlanOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PlanConnection!
  provider(where: ProviderWhereUniqueInput!): Provider
  providers(where: ProviderWhereInput, orderBy: ProviderOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Provider]!
  providersConnection(where: ProviderWhereInput, orderBy: ProviderOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProviderConnection!
  role(where: RoleWhereUniqueInput!): Role
  roles(where: RoleWhereInput, orderBy: RoleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Role]!
  rolesConnection(where: RoleWhereInput, orderBy: RoleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RoleConnection!
  service(where: ServiceWhereUniqueInput!): Service
  services(where: ServiceWhereInput, orderBy: ServiceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Service]!
  servicesConnection(where: ServiceWhereInput, orderBy: ServiceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ServiceConnection!
  serviceTag(where: ServiceTagWhereUniqueInput!): ServiceTag
  serviceTags(where: ServiceTagWhereInput, orderBy: ServiceTagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ServiceTag]!
  serviceTagsConnection(where: ServiceTagWhereInput, orderBy: ServiceTagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ServiceTagConnection!
  space(where: SpaceWhereUniqueInput!): Space
  spaces(where: SpaceWhereInput, orderBy: SpaceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Space]!
  spacesConnection(where: SpaceWhereInput, orderBy: SpaceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SpaceConnection!
  token(where: TokenWhereUniqueInput!): Token
  tokens(where: TokenWhereInput, orderBy: TokenOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Token]!
  tokensConnection(where: TokenWhereInput, orderBy: TokenOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TokenConnection!
  trigger(where: TriggerWhereUniqueInput!): Trigger
  triggers(where: TriggerWhereInput, orderBy: TriggerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Trigger]!
  triggersConnection(where: TriggerWhereInput, orderBy: TriggerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TriggerConnection!
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  variable(where: VariableWhereUniqueInput!): Variable
  variables(where: VariableWhereInput, orderBy: VariableOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Variable]!
  variablesConnection(where: VariableWhereInput, orderBy: VariableOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VariableConnection!
  node(id: ID!): Node
}

type Role {
  id: ID!
  auth: Auth
  space: Space
  scope: RoleScope!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type RoleConnection {
  pageInfo: PageInfo!
  edges: [RoleEdge]!
  aggregate: AggregateRole!
}

input RoleCreateInput {
  auth: AuthCreateOneWithoutRolesInput
  space: SpaceCreateOneWithoutRolesInput
  scope: RoleScope!
}

input RoleCreateManyWithoutAuthInput {
  create: [RoleCreateWithoutAuthInput!]
  connect: [RoleWhereUniqueInput!]
}

input RoleCreateManyWithoutSpaceInput {
  create: [RoleCreateWithoutSpaceInput!]
  connect: [RoleWhereUniqueInput!]
}

input RoleCreateWithoutAuthInput {
  space: SpaceCreateOneWithoutRolesInput
  scope: RoleScope!
}

input RoleCreateWithoutSpaceInput {
  auth: AuthCreateOneWithoutRolesInput
  scope: RoleScope!
}

type RoleEdge {
  node: Role!
  cursor: String!
}

enum RoleOrderByInput {
  id_ASC
  id_DESC
  scope_ASC
  scope_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type RolePreviousValues {
  id: ID!
  scope: RoleScope!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input RoleScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  scope: RoleScope
  scope_not: RoleScope
  scope_in: [RoleScope!]
  scope_not_in: [RoleScope!]
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [RoleScalarWhereInput!]
  OR: [RoleScalarWhereInput!]
  NOT: [RoleScalarWhereInput!]
}

enum RoleScope {
  ADMIN
  SPACE_ADMIN
  SPACE_WRITE
  SPACE_READ
}

type RoleSubscriptionPayload {
  mutation: MutationType!
  node: Role
  updatedFields: [String!]
  previousValues: RolePreviousValues
}

input RoleSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: RoleWhereInput
  AND: [RoleSubscriptionWhereInput!]
  OR: [RoleSubscriptionWhereInput!]
  NOT: [RoleSubscriptionWhereInput!]
}

input RoleUpdateInput {
  auth: AuthUpdateOneWithoutRolesInput
  space: SpaceUpdateOneWithoutRolesInput
  scope: RoleScope
}

input RoleUpdateManyDataInput {
  scope: RoleScope
}

input RoleUpdateManyMutationInput {
  scope: RoleScope
}

input RoleUpdateManyWithoutAuthInput {
  create: [RoleCreateWithoutAuthInput!]
  delete: [RoleWhereUniqueInput!]
  connect: [RoleWhereUniqueInput!]
  set: [RoleWhereUniqueInput!]
  disconnect: [RoleWhereUniqueInput!]
  update: [RoleUpdateWithWhereUniqueWithoutAuthInput!]
  upsert: [RoleUpsertWithWhereUniqueWithoutAuthInput!]
  deleteMany: [RoleScalarWhereInput!]
  updateMany: [RoleUpdateManyWithWhereNestedInput!]
}

input RoleUpdateManyWithoutSpaceInput {
  create: [RoleCreateWithoutSpaceInput!]
  delete: [RoleWhereUniqueInput!]
  connect: [RoleWhereUniqueInput!]
  set: [RoleWhereUniqueInput!]
  disconnect: [RoleWhereUniqueInput!]
  update: [RoleUpdateWithWhereUniqueWithoutSpaceInput!]
  upsert: [RoleUpsertWithWhereUniqueWithoutSpaceInput!]
  deleteMany: [RoleScalarWhereInput!]
  updateMany: [RoleUpdateManyWithWhereNestedInput!]
}

input RoleUpdateManyWithWhereNestedInput {
  where: RoleScalarWhereInput!
  data: RoleUpdateManyDataInput!
}

input RoleUpdateWithoutAuthDataInput {
  space: SpaceUpdateOneWithoutRolesInput
  scope: RoleScope
}

input RoleUpdateWithoutSpaceDataInput {
  auth: AuthUpdateOneWithoutRolesInput
  scope: RoleScope
}

input RoleUpdateWithWhereUniqueWithoutAuthInput {
  where: RoleWhereUniqueInput!
  data: RoleUpdateWithoutAuthDataInput!
}

input RoleUpdateWithWhereUniqueWithoutSpaceInput {
  where: RoleWhereUniqueInput!
  data: RoleUpdateWithoutSpaceDataInput!
}

input RoleUpsertWithWhereUniqueWithoutAuthInput {
  where: RoleWhereUniqueInput!
  update: RoleUpdateWithoutAuthDataInput!
  create: RoleCreateWithoutAuthInput!
}

input RoleUpsertWithWhereUniqueWithoutSpaceInput {
  where: RoleWhereUniqueInput!
  update: RoleUpdateWithoutSpaceDataInput!
  create: RoleCreateWithoutSpaceInput!
}

input RoleWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  auth: AuthWhereInput
  space: SpaceWhereInput
  scope: RoleScope
  scope_not: RoleScope
  scope_in: [RoleScope!]
  scope_not_in: [RoleScope!]
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [RoleWhereInput!]
  OR: [RoleWhereInput!]
  NOT: [RoleWhereInput!]
}

input RoleWhereUniqueInput {
  id: ID
}

type Service {
  id: ID!
  name: String!
  _unique_name: String!
  status: ServiceStatus!
  space: Space!
  images(where: ImageWhereInput, orderBy: ImageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Image!]
  instances(where: InstanceWhereInput, orderBy: InstanceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Instance!]
  activeDeployment: Deployment
  deployments(where: DeploymentWhereInput, orderBy: DeploymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Deployment!]
  triggers(where: TriggerWhereInput, orderBy: TriggerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Trigger!]
  locked: Boolean
  config: Json
  configDate: DateTime
  tags(where: ServiceTagWhereInput, orderBy: ServiceTagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ServiceTag!]
  events(where: EventWhereInput, orderBy: EventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Event!]
  deletedAt: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ServiceConnection {
  pageInfo: PageInfo!
  edges: [ServiceEdge]!
  aggregate: AggregateService!
}

input ServiceCreateInput {
  name: String!
  _unique_name: String!
  status: ServiceStatus!
  space: SpaceCreateOneWithoutServicesInput!
  images: ImageCreateManyInput
  instances: InstanceCreateManyWithoutServiceInput
  activeDeployment: DeploymentCreateOneWithoutActiveServiceInput
  deployments: DeploymentCreateManyWithoutServiceInput
  triggers: TriggerCreateManyWithoutServiceInput
  locked: Boolean
  config: Json
  configDate: DateTime
  tags: ServiceTagCreateManyWithoutServiceInput
  events: EventCreateManyWithoutServiceInput
  deletedAt: DateTime
}

input ServiceCreateManyWithoutSpaceInput {
  create: [ServiceCreateWithoutSpaceInput!]
  connect: [ServiceWhereUniqueInput!]
}

input ServiceCreateOneWithoutActiveDeploymentInput {
  create: ServiceCreateWithoutActiveDeploymentInput
  connect: ServiceWhereUniqueInput
}

input ServiceCreateOneWithoutDeploymentsInput {
  create: ServiceCreateWithoutDeploymentsInput
  connect: ServiceWhereUniqueInput
}

input ServiceCreateOneWithoutEventsInput {
  create: ServiceCreateWithoutEventsInput
  connect: ServiceWhereUniqueInput
}

input ServiceCreateOneWithoutInstancesInput {
  create: ServiceCreateWithoutInstancesInput
  connect: ServiceWhereUniqueInput
}

input ServiceCreateOneWithoutTagsInput {
  create: ServiceCreateWithoutTagsInput
  connect: ServiceWhereUniqueInput
}

input ServiceCreateOneWithoutTriggersInput {
  create: ServiceCreateWithoutTriggersInput
  connect: ServiceWhereUniqueInput
}

input ServiceCreateWithoutActiveDeploymentInput {
  name: String!
  _unique_name: String!
  status: ServiceStatus!
  space: SpaceCreateOneWithoutServicesInput!
  images: ImageCreateManyInput
  instances: InstanceCreateManyWithoutServiceInput
  deployments: DeploymentCreateManyWithoutServiceInput
  triggers: TriggerCreateManyWithoutServiceInput
  locked: Boolean
  config: Json
  configDate: DateTime
  tags: ServiceTagCreateManyWithoutServiceInput
  events: EventCreateManyWithoutServiceInput
  deletedAt: DateTime
}

input ServiceCreateWithoutDeploymentsInput {
  name: String!
  _unique_name: String!
  status: ServiceStatus!
  space: SpaceCreateOneWithoutServicesInput!
  images: ImageCreateManyInput
  instances: InstanceCreateManyWithoutServiceInput
  activeDeployment: DeploymentCreateOneWithoutActiveServiceInput
  triggers: TriggerCreateManyWithoutServiceInput
  locked: Boolean
  config: Json
  configDate: DateTime
  tags: ServiceTagCreateManyWithoutServiceInput
  events: EventCreateManyWithoutServiceInput
  deletedAt: DateTime
}

input ServiceCreateWithoutEventsInput {
  name: String!
  _unique_name: String!
  status: ServiceStatus!
  space: SpaceCreateOneWithoutServicesInput!
  images: ImageCreateManyInput
  instances: InstanceCreateManyWithoutServiceInput
  activeDeployment: DeploymentCreateOneWithoutActiveServiceInput
  deployments: DeploymentCreateManyWithoutServiceInput
  triggers: TriggerCreateManyWithoutServiceInput
  locked: Boolean
  config: Json
  configDate: DateTime
  tags: ServiceTagCreateManyWithoutServiceInput
  deletedAt: DateTime
}

input ServiceCreateWithoutInstancesInput {
  name: String!
  _unique_name: String!
  status: ServiceStatus!
  space: SpaceCreateOneWithoutServicesInput!
  images: ImageCreateManyInput
  activeDeployment: DeploymentCreateOneWithoutActiveServiceInput
  deployments: DeploymentCreateManyWithoutServiceInput
  triggers: TriggerCreateManyWithoutServiceInput
  locked: Boolean
  config: Json
  configDate: DateTime
  tags: ServiceTagCreateManyWithoutServiceInput
  events: EventCreateManyWithoutServiceInput
  deletedAt: DateTime
}

input ServiceCreateWithoutSpaceInput {
  name: String!
  _unique_name: String!
  status: ServiceStatus!
  images: ImageCreateManyInput
  instances: InstanceCreateManyWithoutServiceInput
  activeDeployment: DeploymentCreateOneWithoutActiveServiceInput
  deployments: DeploymentCreateManyWithoutServiceInput
  triggers: TriggerCreateManyWithoutServiceInput
  locked: Boolean
  config: Json
  configDate: DateTime
  tags: ServiceTagCreateManyWithoutServiceInput
  events: EventCreateManyWithoutServiceInput
  deletedAt: DateTime
}

input ServiceCreateWithoutTagsInput {
  name: String!
  _unique_name: String!
  status: ServiceStatus!
  space: SpaceCreateOneWithoutServicesInput!
  images: ImageCreateManyInput
  instances: InstanceCreateManyWithoutServiceInput
  activeDeployment: DeploymentCreateOneWithoutActiveServiceInput
  deployments: DeploymentCreateManyWithoutServiceInput
  triggers: TriggerCreateManyWithoutServiceInput
  locked: Boolean
  config: Json
  configDate: DateTime
  events: EventCreateManyWithoutServiceInput
  deletedAt: DateTime
}

input ServiceCreateWithoutTriggersInput {
  name: String!
  _unique_name: String!
  status: ServiceStatus!
  space: SpaceCreateOneWithoutServicesInput!
  images: ImageCreateManyInput
  instances: InstanceCreateManyWithoutServiceInput
  activeDeployment: DeploymentCreateOneWithoutActiveServiceInput
  deployments: DeploymentCreateManyWithoutServiceInput
  locked: Boolean
  config: Json
  configDate: DateTime
  tags: ServiceTagCreateManyWithoutServiceInput
  events: EventCreateManyWithoutServiceInput
  deletedAt: DateTime
}

type ServiceEdge {
  node: Service!
  cursor: String!
}

enum ServiceOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  _unique_name_ASC
  _unique_name_DESC
  status_ASC
  status_DESC
  locked_ASC
  locked_DESC
  config_ASC
  config_DESC
  configDate_ASC
  configDate_DESC
  deletedAt_ASC
  deletedAt_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ServicePreviousValues {
  id: ID!
  name: String!
  _unique_name: String!
  status: ServiceStatus!
  locked: Boolean
  config: Json
  configDate: DateTime
  deletedAt: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ServiceScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  _unique_name: String
  _unique_name_not: String
  _unique_name_in: [String!]
  _unique_name_not_in: [String!]
  _unique_name_lt: String
  _unique_name_lte: String
  _unique_name_gt: String
  _unique_name_gte: String
  _unique_name_contains: String
  _unique_name_not_contains: String
  _unique_name_starts_with: String
  _unique_name_not_starts_with: String
  _unique_name_ends_with: String
  _unique_name_not_ends_with: String
  status: ServiceStatus
  status_not: ServiceStatus
  status_in: [ServiceStatus!]
  status_not_in: [ServiceStatus!]
  locked: Boolean
  locked_not: Boolean
  configDate: DateTime
  configDate_not: DateTime
  configDate_in: [DateTime!]
  configDate_not_in: [DateTime!]
  configDate_lt: DateTime
  configDate_lte: DateTime
  configDate_gt: DateTime
  configDate_gte: DateTime
  deletedAt: DateTime
  deletedAt_not: DateTime
  deletedAt_in: [DateTime!]
  deletedAt_not_in: [DateTime!]
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ServiceScalarWhereInput!]
  OR: [ServiceScalarWhereInput!]
  NOT: [ServiceScalarWhereInput!]
}

enum ServiceStatus {
  ACTIVE
  DISABLED
  PENDING_DELETE
}

type ServiceSubscriptionPayload {
  mutation: MutationType!
  node: Service
  updatedFields: [String!]
  previousValues: ServicePreviousValues
}

input ServiceSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ServiceWhereInput
  AND: [ServiceSubscriptionWhereInput!]
  OR: [ServiceSubscriptionWhereInput!]
  NOT: [ServiceSubscriptionWhereInput!]
}

type ServiceTag {
  id: ID!
  tag: String!
  public: Boolean
  alias: [String!]!
  trigger: Trigger
  subhost: String
  scaling: Json
  regions: [String!]!
  draftFiles: Json
  draftConfig: Json
  _unique_name: String!
  service: Service!
  deployment: Deployment
  history(where: DeploymentWhereInput, orderBy: DeploymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Deployment!]
}

type ServiceTagConnection {
  pageInfo: PageInfo!
  edges: [ServiceTagEdge]!
  aggregate: AggregateServiceTag!
}

input ServiceTagCreatealiasInput {
  set: [String!]
}

input ServiceTagCreateInput {
  tag: String!
  public: Boolean
  alias: ServiceTagCreatealiasInput
  trigger: TriggerCreateOneInput
  subhost: String
  scaling: Json
  regions: ServiceTagCreateregionsInput
  draftFiles: Json
  draftConfig: Json
  _unique_name: String!
  service: ServiceCreateOneWithoutTagsInput!
  deployment: DeploymentCreateOneWithoutTagsInput
  history: DeploymentCreateManyWithoutTagsHistoryInput
}

input ServiceTagCreateManyWithoutDeploymentInput {
  create: [ServiceTagCreateWithoutDeploymentInput!]
  connect: [ServiceTagWhereUniqueInput!]
}

input ServiceTagCreateManyWithoutHistoryInput {
  create: [ServiceTagCreateWithoutHistoryInput!]
  connect: [ServiceTagWhereUniqueInput!]
}

input ServiceTagCreateManyWithoutServiceInput {
  create: [ServiceTagCreateWithoutServiceInput!]
  connect: [ServiceTagWhereUniqueInput!]
}

input ServiceTagCreateregionsInput {
  set: [String!]
}

input ServiceTagCreateWithoutDeploymentInput {
  tag: String!
  public: Boolean
  alias: ServiceTagCreatealiasInput
  trigger: TriggerCreateOneInput
  subhost: String
  scaling: Json
  regions: ServiceTagCreateregionsInput
  draftFiles: Json
  draftConfig: Json
  _unique_name: String!
  service: ServiceCreateOneWithoutTagsInput!
  history: DeploymentCreateManyWithoutTagsHistoryInput
}

input ServiceTagCreateWithoutHistoryInput {
  tag: String!
  public: Boolean
  alias: ServiceTagCreatealiasInput
  trigger: TriggerCreateOneInput
  subhost: String
  scaling: Json
  regions: ServiceTagCreateregionsInput
  draftFiles: Json
  draftConfig: Json
  _unique_name: String!
  service: ServiceCreateOneWithoutTagsInput!
  deployment: DeploymentCreateOneWithoutTagsInput
}

input ServiceTagCreateWithoutServiceInput {
  tag: String!
  public: Boolean
  alias: ServiceTagCreatealiasInput
  trigger: TriggerCreateOneInput
  subhost: String
  scaling: Json
  regions: ServiceTagCreateregionsInput
  draftFiles: Json
  draftConfig: Json
  _unique_name: String!
  deployment: DeploymentCreateOneWithoutTagsInput
  history: DeploymentCreateManyWithoutTagsHistoryInput
}

type ServiceTagEdge {
  node: ServiceTag!
  cursor: String!
}

enum ServiceTagOrderByInput {
  id_ASC
  id_DESC
  tag_ASC
  tag_DESC
  public_ASC
  public_DESC
  subhost_ASC
  subhost_DESC
  scaling_ASC
  scaling_DESC
  draftFiles_ASC
  draftFiles_DESC
  draftConfig_ASC
  draftConfig_DESC
  _unique_name_ASC
  _unique_name_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ServiceTagPreviousValues {
  id: ID!
  tag: String!
  public: Boolean
  alias: [String!]!
  subhost: String
  scaling: Json
  regions: [String!]!
  draftFiles: Json
  draftConfig: Json
  _unique_name: String!
}

input ServiceTagScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  tag: String
  tag_not: String
  tag_in: [String!]
  tag_not_in: [String!]
  tag_lt: String
  tag_lte: String
  tag_gt: String
  tag_gte: String
  tag_contains: String
  tag_not_contains: String
  tag_starts_with: String
  tag_not_starts_with: String
  tag_ends_with: String
  tag_not_ends_with: String
  public: Boolean
  public_not: Boolean
  subhost: String
  subhost_not: String
  subhost_in: [String!]
  subhost_not_in: [String!]
  subhost_lt: String
  subhost_lte: String
  subhost_gt: String
  subhost_gte: String
  subhost_contains: String
  subhost_not_contains: String
  subhost_starts_with: String
  subhost_not_starts_with: String
  subhost_ends_with: String
  subhost_not_ends_with: String
  _unique_name: String
  _unique_name_not: String
  _unique_name_in: [String!]
  _unique_name_not_in: [String!]
  _unique_name_lt: String
  _unique_name_lte: String
  _unique_name_gt: String
  _unique_name_gte: String
  _unique_name_contains: String
  _unique_name_not_contains: String
  _unique_name_starts_with: String
  _unique_name_not_starts_with: String
  _unique_name_ends_with: String
  _unique_name_not_ends_with: String
  AND: [ServiceTagScalarWhereInput!]
  OR: [ServiceTagScalarWhereInput!]
  NOT: [ServiceTagScalarWhereInput!]
}

type ServiceTagSubscriptionPayload {
  mutation: MutationType!
  node: ServiceTag
  updatedFields: [String!]
  previousValues: ServiceTagPreviousValues
}

input ServiceTagSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ServiceTagWhereInput
  AND: [ServiceTagSubscriptionWhereInput!]
  OR: [ServiceTagSubscriptionWhereInput!]
  NOT: [ServiceTagSubscriptionWhereInput!]
}

input ServiceTagUpdatealiasInput {
  set: [String!]
}

input ServiceTagUpdateInput {
  tag: String
  public: Boolean
  alias: ServiceTagUpdatealiasInput
  trigger: TriggerUpdateOneInput
  subhost: String
  scaling: Json
  regions: ServiceTagUpdateregionsInput
  draftFiles: Json
  draftConfig: Json
  _unique_name: String
  service: ServiceUpdateOneRequiredWithoutTagsInput
  deployment: DeploymentUpdateOneWithoutTagsInput
  history: DeploymentUpdateManyWithoutTagsHistoryInput
}

input ServiceTagUpdateManyDataInput {
  tag: String
  public: Boolean
  alias: ServiceTagUpdatealiasInput
  subhost: String
  scaling: Json
  regions: ServiceTagUpdateregionsInput
  draftFiles: Json
  draftConfig: Json
  _unique_name: String
}

input ServiceTagUpdateManyMutationInput {
  tag: String
  public: Boolean
  alias: ServiceTagUpdatealiasInput
  subhost: String
  scaling: Json
  regions: ServiceTagUpdateregionsInput
  draftFiles: Json
  draftConfig: Json
  _unique_name: String
}

input ServiceTagUpdateManyWithoutDeploymentInput {
  create: [ServiceTagCreateWithoutDeploymentInput!]
  delete: [ServiceTagWhereUniqueInput!]
  connect: [ServiceTagWhereUniqueInput!]
  set: [ServiceTagWhereUniqueInput!]
  disconnect: [ServiceTagWhereUniqueInput!]
  update: [ServiceTagUpdateWithWhereUniqueWithoutDeploymentInput!]
  upsert: [ServiceTagUpsertWithWhereUniqueWithoutDeploymentInput!]
  deleteMany: [ServiceTagScalarWhereInput!]
  updateMany: [ServiceTagUpdateManyWithWhereNestedInput!]
}

input ServiceTagUpdateManyWithoutHistoryInput {
  create: [ServiceTagCreateWithoutHistoryInput!]
  delete: [ServiceTagWhereUniqueInput!]
  connect: [ServiceTagWhereUniqueInput!]
  set: [ServiceTagWhereUniqueInput!]
  disconnect: [ServiceTagWhereUniqueInput!]
  update: [ServiceTagUpdateWithWhereUniqueWithoutHistoryInput!]
  upsert: [ServiceTagUpsertWithWhereUniqueWithoutHistoryInput!]
  deleteMany: [ServiceTagScalarWhereInput!]
  updateMany: [ServiceTagUpdateManyWithWhereNestedInput!]
}

input ServiceTagUpdateManyWithoutServiceInput {
  create: [ServiceTagCreateWithoutServiceInput!]
  delete: [ServiceTagWhereUniqueInput!]
  connect: [ServiceTagWhereUniqueInput!]
  set: [ServiceTagWhereUniqueInput!]
  disconnect: [ServiceTagWhereUniqueInput!]
  update: [ServiceTagUpdateWithWhereUniqueWithoutServiceInput!]
  upsert: [ServiceTagUpsertWithWhereUniqueWithoutServiceInput!]
  deleteMany: [ServiceTagScalarWhereInput!]
  updateMany: [ServiceTagUpdateManyWithWhereNestedInput!]
}

input ServiceTagUpdateManyWithWhereNestedInput {
  where: ServiceTagScalarWhereInput!
  data: ServiceTagUpdateManyDataInput!
}

input ServiceTagUpdateregionsInput {
  set: [String!]
}

input ServiceTagUpdateWithoutDeploymentDataInput {
  tag: String
  public: Boolean
  alias: ServiceTagUpdatealiasInput
  trigger: TriggerUpdateOneInput
  subhost: String
  scaling: Json
  regions: ServiceTagUpdateregionsInput
  draftFiles: Json
  draftConfig: Json
  _unique_name: String
  service: ServiceUpdateOneRequiredWithoutTagsInput
  history: DeploymentUpdateManyWithoutTagsHistoryInput
}

input ServiceTagUpdateWithoutHistoryDataInput {
  tag: String
  public: Boolean
  alias: ServiceTagUpdatealiasInput
  trigger: TriggerUpdateOneInput
  subhost: String
  scaling: Json
  regions: ServiceTagUpdateregionsInput
  draftFiles: Json
  draftConfig: Json
  _unique_name: String
  service: ServiceUpdateOneRequiredWithoutTagsInput
  deployment: DeploymentUpdateOneWithoutTagsInput
}

input ServiceTagUpdateWithoutServiceDataInput {
  tag: String
  public: Boolean
  alias: ServiceTagUpdatealiasInput
  trigger: TriggerUpdateOneInput
  subhost: String
  scaling: Json
  regions: ServiceTagUpdateregionsInput
  draftFiles: Json
  draftConfig: Json
  _unique_name: String
  deployment: DeploymentUpdateOneWithoutTagsInput
  history: DeploymentUpdateManyWithoutTagsHistoryInput
}

input ServiceTagUpdateWithWhereUniqueWithoutDeploymentInput {
  where: ServiceTagWhereUniqueInput!
  data: ServiceTagUpdateWithoutDeploymentDataInput!
}

input ServiceTagUpdateWithWhereUniqueWithoutHistoryInput {
  where: ServiceTagWhereUniqueInput!
  data: ServiceTagUpdateWithoutHistoryDataInput!
}

input ServiceTagUpdateWithWhereUniqueWithoutServiceInput {
  where: ServiceTagWhereUniqueInput!
  data: ServiceTagUpdateWithoutServiceDataInput!
}

input ServiceTagUpsertWithWhereUniqueWithoutDeploymentInput {
  where: ServiceTagWhereUniqueInput!
  update: ServiceTagUpdateWithoutDeploymentDataInput!
  create: ServiceTagCreateWithoutDeploymentInput!
}

input ServiceTagUpsertWithWhereUniqueWithoutHistoryInput {
  where: ServiceTagWhereUniqueInput!
  update: ServiceTagUpdateWithoutHistoryDataInput!
  create: ServiceTagCreateWithoutHistoryInput!
}

input ServiceTagUpsertWithWhereUniqueWithoutServiceInput {
  where: ServiceTagWhereUniqueInput!
  update: ServiceTagUpdateWithoutServiceDataInput!
  create: ServiceTagCreateWithoutServiceInput!
}

input ServiceTagWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  tag: String
  tag_not: String
  tag_in: [String!]
  tag_not_in: [String!]
  tag_lt: String
  tag_lte: String
  tag_gt: String
  tag_gte: String
  tag_contains: String
  tag_not_contains: String
  tag_starts_with: String
  tag_not_starts_with: String
  tag_ends_with: String
  tag_not_ends_with: String
  public: Boolean
  public_not: Boolean
  trigger: TriggerWhereInput
  subhost: String
  subhost_not: String
  subhost_in: [String!]
  subhost_not_in: [String!]
  subhost_lt: String
  subhost_lte: String
  subhost_gt: String
  subhost_gte: String
  subhost_contains: String
  subhost_not_contains: String
  subhost_starts_with: String
  subhost_not_starts_with: String
  subhost_ends_with: String
  subhost_not_ends_with: String
  _unique_name: String
  _unique_name_not: String
  _unique_name_in: [String!]
  _unique_name_not_in: [String!]
  _unique_name_lt: String
  _unique_name_lte: String
  _unique_name_gt: String
  _unique_name_gte: String
  _unique_name_contains: String
  _unique_name_not_contains: String
  _unique_name_starts_with: String
  _unique_name_not_starts_with: String
  _unique_name_ends_with: String
  _unique_name_not_ends_with: String
  service: ServiceWhereInput
  deployment: DeploymentWhereInput
  history_every: DeploymentWhereInput
  history_some: DeploymentWhereInput
  history_none: DeploymentWhereInput
  AND: [ServiceTagWhereInput!]
  OR: [ServiceTagWhereInput!]
  NOT: [ServiceTagWhereInput!]
}

input ServiceTagWhereUniqueInput {
  id: ID
  subhost: String
  _unique_name: String
}

input ServiceUpdateInput {
  name: String
  _unique_name: String
  status: ServiceStatus
  space: SpaceUpdateOneRequiredWithoutServicesInput
  images: ImageUpdateManyInput
  instances: InstanceUpdateManyWithoutServiceInput
  activeDeployment: DeploymentUpdateOneWithoutActiveServiceInput
  deployments: DeploymentUpdateManyWithoutServiceInput
  triggers: TriggerUpdateManyWithoutServiceInput
  locked: Boolean
  config: Json
  configDate: DateTime
  tags: ServiceTagUpdateManyWithoutServiceInput
  events: EventUpdateManyWithoutServiceInput
  deletedAt: DateTime
}

input ServiceUpdateManyDataInput {
  name: String
  _unique_name: String
  status: ServiceStatus
  locked: Boolean
  config: Json
  configDate: DateTime
  deletedAt: DateTime
}

input ServiceUpdateManyMutationInput {
  name: String
  _unique_name: String
  status: ServiceStatus
  locked: Boolean
  config: Json
  configDate: DateTime
  deletedAt: DateTime
}

input ServiceUpdateManyWithoutSpaceInput {
  create: [ServiceCreateWithoutSpaceInput!]
  delete: [ServiceWhereUniqueInput!]
  connect: [ServiceWhereUniqueInput!]
  set: [ServiceWhereUniqueInput!]
  disconnect: [ServiceWhereUniqueInput!]
  update: [ServiceUpdateWithWhereUniqueWithoutSpaceInput!]
  upsert: [ServiceUpsertWithWhereUniqueWithoutSpaceInput!]
  deleteMany: [ServiceScalarWhereInput!]
  updateMany: [ServiceUpdateManyWithWhereNestedInput!]
}

input ServiceUpdateManyWithWhereNestedInput {
  where: ServiceScalarWhereInput!
  data: ServiceUpdateManyDataInput!
}

input ServiceUpdateOneRequiredWithoutInstancesInput {
  create: ServiceCreateWithoutInstancesInput
  update: ServiceUpdateWithoutInstancesDataInput
  upsert: ServiceUpsertWithoutInstancesInput
  connect: ServiceWhereUniqueInput
}

input ServiceUpdateOneRequiredWithoutTagsInput {
  create: ServiceCreateWithoutTagsInput
  update: ServiceUpdateWithoutTagsDataInput
  upsert: ServiceUpsertWithoutTagsInput
  connect: ServiceWhereUniqueInput
}

input ServiceUpdateOneRequiredWithoutTriggersInput {
  create: ServiceCreateWithoutTriggersInput
  update: ServiceUpdateWithoutTriggersDataInput
  upsert: ServiceUpsertWithoutTriggersInput
  connect: ServiceWhereUniqueInput
}

input ServiceUpdateOneWithoutActiveDeploymentInput {
  create: ServiceCreateWithoutActiveDeploymentInput
  update: ServiceUpdateWithoutActiveDeploymentDataInput
  upsert: ServiceUpsertWithoutActiveDeploymentInput
  delete: Boolean
  disconnect: Boolean
  connect: ServiceWhereUniqueInput
}

input ServiceUpdateOneWithoutDeploymentsInput {
  create: ServiceCreateWithoutDeploymentsInput
  update: ServiceUpdateWithoutDeploymentsDataInput
  upsert: ServiceUpsertWithoutDeploymentsInput
  delete: Boolean
  disconnect: Boolean
  connect: ServiceWhereUniqueInput
}

input ServiceUpdateOneWithoutEventsInput {
  create: ServiceCreateWithoutEventsInput
  update: ServiceUpdateWithoutEventsDataInput
  upsert: ServiceUpsertWithoutEventsInput
  delete: Boolean
  disconnect: Boolean
  connect: ServiceWhereUniqueInput
}

input ServiceUpdateWithoutActiveDeploymentDataInput {
  name: String
  _unique_name: String
  status: ServiceStatus
  space: SpaceUpdateOneRequiredWithoutServicesInput
  images: ImageUpdateManyInput
  instances: InstanceUpdateManyWithoutServiceInput
  deployments: DeploymentUpdateManyWithoutServiceInput
  triggers: TriggerUpdateManyWithoutServiceInput
  locked: Boolean
  config: Json
  configDate: DateTime
  tags: ServiceTagUpdateManyWithoutServiceInput
  events: EventUpdateManyWithoutServiceInput
  deletedAt: DateTime
}

input ServiceUpdateWithoutDeploymentsDataInput {
  name: String
  _unique_name: String
  status: ServiceStatus
  space: SpaceUpdateOneRequiredWithoutServicesInput
  images: ImageUpdateManyInput
  instances: InstanceUpdateManyWithoutServiceInput
  activeDeployment: DeploymentUpdateOneWithoutActiveServiceInput
  triggers: TriggerUpdateManyWithoutServiceInput
  locked: Boolean
  config: Json
  configDate: DateTime
  tags: ServiceTagUpdateManyWithoutServiceInput
  events: EventUpdateManyWithoutServiceInput
  deletedAt: DateTime
}

input ServiceUpdateWithoutEventsDataInput {
  name: String
  _unique_name: String
  status: ServiceStatus
  space: SpaceUpdateOneRequiredWithoutServicesInput
  images: ImageUpdateManyInput
  instances: InstanceUpdateManyWithoutServiceInput
  activeDeployment: DeploymentUpdateOneWithoutActiveServiceInput
  deployments: DeploymentUpdateManyWithoutServiceInput
  triggers: TriggerUpdateManyWithoutServiceInput
  locked: Boolean
  config: Json
  configDate: DateTime
  tags: ServiceTagUpdateManyWithoutServiceInput
  deletedAt: DateTime
}

input ServiceUpdateWithoutInstancesDataInput {
  name: String
  _unique_name: String
  status: ServiceStatus
  space: SpaceUpdateOneRequiredWithoutServicesInput
  images: ImageUpdateManyInput
  activeDeployment: DeploymentUpdateOneWithoutActiveServiceInput
  deployments: DeploymentUpdateManyWithoutServiceInput
  triggers: TriggerUpdateManyWithoutServiceInput
  locked: Boolean
  config: Json
  configDate: DateTime
  tags: ServiceTagUpdateManyWithoutServiceInput
  events: EventUpdateManyWithoutServiceInput
  deletedAt: DateTime
}

input ServiceUpdateWithoutSpaceDataInput {
  name: String
  _unique_name: String
  status: ServiceStatus
  images: ImageUpdateManyInput
  instances: InstanceUpdateManyWithoutServiceInput
  activeDeployment: DeploymentUpdateOneWithoutActiveServiceInput
  deployments: DeploymentUpdateManyWithoutServiceInput
  triggers: TriggerUpdateManyWithoutServiceInput
  locked: Boolean
  config: Json
  configDate: DateTime
  tags: ServiceTagUpdateManyWithoutServiceInput
  events: EventUpdateManyWithoutServiceInput
  deletedAt: DateTime
}

input ServiceUpdateWithoutTagsDataInput {
  name: String
  _unique_name: String
  status: ServiceStatus
  space: SpaceUpdateOneRequiredWithoutServicesInput
  images: ImageUpdateManyInput
  instances: InstanceUpdateManyWithoutServiceInput
  activeDeployment: DeploymentUpdateOneWithoutActiveServiceInput
  deployments: DeploymentUpdateManyWithoutServiceInput
  triggers: TriggerUpdateManyWithoutServiceInput
  locked: Boolean
  config: Json
  configDate: DateTime
  events: EventUpdateManyWithoutServiceInput
  deletedAt: DateTime
}

input ServiceUpdateWithoutTriggersDataInput {
  name: String
  _unique_name: String
  status: ServiceStatus
  space: SpaceUpdateOneRequiredWithoutServicesInput
  images: ImageUpdateManyInput
  instances: InstanceUpdateManyWithoutServiceInput
  activeDeployment: DeploymentUpdateOneWithoutActiveServiceInput
  deployments: DeploymentUpdateManyWithoutServiceInput
  locked: Boolean
  config: Json
  configDate: DateTime
  tags: ServiceTagUpdateManyWithoutServiceInput
  events: EventUpdateManyWithoutServiceInput
  deletedAt: DateTime
}

input ServiceUpdateWithWhereUniqueWithoutSpaceInput {
  where: ServiceWhereUniqueInput!
  data: ServiceUpdateWithoutSpaceDataInput!
}

input ServiceUpsertWithoutActiveDeploymentInput {
  update: ServiceUpdateWithoutActiveDeploymentDataInput!
  create: ServiceCreateWithoutActiveDeploymentInput!
}

input ServiceUpsertWithoutDeploymentsInput {
  update: ServiceUpdateWithoutDeploymentsDataInput!
  create: ServiceCreateWithoutDeploymentsInput!
}

input ServiceUpsertWithoutEventsInput {
  update: ServiceUpdateWithoutEventsDataInput!
  create: ServiceCreateWithoutEventsInput!
}

input ServiceUpsertWithoutInstancesInput {
  update: ServiceUpdateWithoutInstancesDataInput!
  create: ServiceCreateWithoutInstancesInput!
}

input ServiceUpsertWithoutTagsInput {
  update: ServiceUpdateWithoutTagsDataInput!
  create: ServiceCreateWithoutTagsInput!
}

input ServiceUpsertWithoutTriggersInput {
  update: ServiceUpdateWithoutTriggersDataInput!
  create: ServiceCreateWithoutTriggersInput!
}

input ServiceUpsertWithWhereUniqueWithoutSpaceInput {
  where: ServiceWhereUniqueInput!
  update: ServiceUpdateWithoutSpaceDataInput!
  create: ServiceCreateWithoutSpaceInput!
}

input ServiceWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  _unique_name: String
  _unique_name_not: String
  _unique_name_in: [String!]
  _unique_name_not_in: [String!]
  _unique_name_lt: String
  _unique_name_lte: String
  _unique_name_gt: String
  _unique_name_gte: String
  _unique_name_contains: String
  _unique_name_not_contains: String
  _unique_name_starts_with: String
  _unique_name_not_starts_with: String
  _unique_name_ends_with: String
  _unique_name_not_ends_with: String
  status: ServiceStatus
  status_not: ServiceStatus
  status_in: [ServiceStatus!]
  status_not_in: [ServiceStatus!]
  space: SpaceWhereInput
  images_every: ImageWhereInput
  images_some: ImageWhereInput
  images_none: ImageWhereInput
  instances_every: InstanceWhereInput
  instances_some: InstanceWhereInput
  instances_none: InstanceWhereInput
  activeDeployment: DeploymentWhereInput
  deployments_every: DeploymentWhereInput
  deployments_some: DeploymentWhereInput
  deployments_none: DeploymentWhereInput
  triggers_every: TriggerWhereInput
  triggers_some: TriggerWhereInput
  triggers_none: TriggerWhereInput
  locked: Boolean
  locked_not: Boolean
  configDate: DateTime
  configDate_not: DateTime
  configDate_in: [DateTime!]
  configDate_not_in: [DateTime!]
  configDate_lt: DateTime
  configDate_lte: DateTime
  configDate_gt: DateTime
  configDate_gte: DateTime
  tags_every: ServiceTagWhereInput
  tags_some: ServiceTagWhereInput
  tags_none: ServiceTagWhereInput
  events_every: EventWhereInput
  events_some: EventWhereInput
  events_none: EventWhereInput
  deletedAt: DateTime
  deletedAt_not: DateTime
  deletedAt_in: [DateTime!]
  deletedAt_not_in: [DateTime!]
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ServiceWhereInput!]
  OR: [ServiceWhereInput!]
  NOT: [ServiceWhereInput!]
}

input ServiceWhereUniqueInput {
  id: ID
  _unique_name: String
}

type Space {
  id: ID!
  name: String!
  displayName: String
  type: SpaceType
  region: String
  services(where: ServiceWhereInput, orderBy: ServiceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Service!]
  deployments(where: DeploymentWhereInput, orderBy: DeploymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Deployment!]
  images(where: ImageWhereInput, orderBy: ImageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Image!]
  imageDigests(where: ImageDigestWhereInput, orderBy: ImageDigestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ImageDigest!]
  roles(where: RoleWhereInput, orderBy: RoleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Role!]
  tokens(where: TokenWhereInput, orderBy: TokenOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Token!]
  variables(where: VariableWhereInput, orderBy: VariableOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Variable!]
  events(where: EventWhereInput, orderBy: EventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Event!]
  providers(where: ProviderWhereInput, orderBy: ProviderOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Provider!]
  triggers(where: TriggerWhereInput, orderBy: TriggerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Trigger!]
  raw(where: ArtifactRawWhereInput, orderBy: ArtifactRawOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ArtifactRaw!]
  plan: Plan
  creditLimit: Float
  billingCap: Float
  invoices(where: InvoiceWhereInput, orderBy: InvoiceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Invoice!]
  paymentCard: PaymentCard
  createdBy: ID
  createdAt: DateTime!
  updatedAt: DateTime!
}

type SpaceConnection {
  pageInfo: PageInfo!
  edges: [SpaceEdge]!
  aggregate: AggregateSpace!
}

input SpaceCreateInput {
  name: String!
  displayName: String
  type: SpaceType
  region: String
  services: ServiceCreateManyWithoutSpaceInput
  deployments: DeploymentCreateManyWithoutSpaceInput
  images: ImageCreateManyWithoutSpaceInput
  imageDigests: ImageDigestCreateManyWithoutSpaceInput
  roles: RoleCreateManyWithoutSpaceInput
  tokens: TokenCreateManyWithoutSpaceInput
  variables: VariableCreateManyWithoutSpaceInput
  events: EventCreateManyWithoutSpaceInput
  providers: ProviderCreateManyWithoutSpaceInput
  triggers: TriggerCreateManyWithoutSpaceInput
  raw: ArtifactRawCreateManyWithoutSpacesInput
  plan: PlanCreateOneWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  invoices: InvoiceCreateManyWithoutSpaceInput
  paymentCard: PaymentCardCreateOneInput
  createdBy: ID
}

input SpaceCreateManyWithoutPlanInput {
  create: [SpaceCreateWithoutPlanInput!]
  connect: [SpaceWhereUniqueInput!]
}

input SpaceCreateManyWithoutRawInput {
  create: [SpaceCreateWithoutRawInput!]
  connect: [SpaceWhereUniqueInput!]
}

input SpaceCreateOneInput {
  create: SpaceCreateInput
  connect: SpaceWhereUniqueInput
}

input SpaceCreateOneWithoutDeploymentsInput {
  create: SpaceCreateWithoutDeploymentsInput
  connect: SpaceWhereUniqueInput
}

input SpaceCreateOneWithoutEventsInput {
  create: SpaceCreateWithoutEventsInput
  connect: SpaceWhereUniqueInput
}

input SpaceCreateOneWithoutImageDigestsInput {
  create: SpaceCreateWithoutImageDigestsInput
  connect: SpaceWhereUniqueInput
}

input SpaceCreateOneWithoutImagesInput {
  create: SpaceCreateWithoutImagesInput
  connect: SpaceWhereUniqueInput
}

input SpaceCreateOneWithoutInvoicesInput {
  create: SpaceCreateWithoutInvoicesInput
  connect: SpaceWhereUniqueInput
}

input SpaceCreateOneWithoutProvidersInput {
  create: SpaceCreateWithoutProvidersInput
  connect: SpaceWhereUniqueInput
}

input SpaceCreateOneWithoutRolesInput {
  create: SpaceCreateWithoutRolesInput
  connect: SpaceWhereUniqueInput
}

input SpaceCreateOneWithoutServicesInput {
  create: SpaceCreateWithoutServicesInput
  connect: SpaceWhereUniqueInput
}

input SpaceCreateOneWithoutTokensInput {
  create: SpaceCreateWithoutTokensInput
  connect: SpaceWhereUniqueInput
}

input SpaceCreateOneWithoutTriggersInput {
  create: SpaceCreateWithoutTriggersInput
  connect: SpaceWhereUniqueInput
}

input SpaceCreateOneWithoutVariablesInput {
  create: SpaceCreateWithoutVariablesInput
  connect: SpaceWhereUniqueInput
}

input SpaceCreateWithoutDeploymentsInput {
  name: String!
  displayName: String
  type: SpaceType
  region: String
  services: ServiceCreateManyWithoutSpaceInput
  images: ImageCreateManyWithoutSpaceInput
  imageDigests: ImageDigestCreateManyWithoutSpaceInput
  roles: RoleCreateManyWithoutSpaceInput
  tokens: TokenCreateManyWithoutSpaceInput
  variables: VariableCreateManyWithoutSpaceInput
  events: EventCreateManyWithoutSpaceInput
  providers: ProviderCreateManyWithoutSpaceInput
  triggers: TriggerCreateManyWithoutSpaceInput
  raw: ArtifactRawCreateManyWithoutSpacesInput
  plan: PlanCreateOneWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  invoices: InvoiceCreateManyWithoutSpaceInput
  paymentCard: PaymentCardCreateOneInput
  createdBy: ID
}

input SpaceCreateWithoutEventsInput {
  name: String!
  displayName: String
  type: SpaceType
  region: String
  services: ServiceCreateManyWithoutSpaceInput
  deployments: DeploymentCreateManyWithoutSpaceInput
  images: ImageCreateManyWithoutSpaceInput
  imageDigests: ImageDigestCreateManyWithoutSpaceInput
  roles: RoleCreateManyWithoutSpaceInput
  tokens: TokenCreateManyWithoutSpaceInput
  variables: VariableCreateManyWithoutSpaceInput
  providers: ProviderCreateManyWithoutSpaceInput
  triggers: TriggerCreateManyWithoutSpaceInput
  raw: ArtifactRawCreateManyWithoutSpacesInput
  plan: PlanCreateOneWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  invoices: InvoiceCreateManyWithoutSpaceInput
  paymentCard: PaymentCardCreateOneInput
  createdBy: ID
}

input SpaceCreateWithoutImageDigestsInput {
  name: String!
  displayName: String
  type: SpaceType
  region: String
  services: ServiceCreateManyWithoutSpaceInput
  deployments: DeploymentCreateManyWithoutSpaceInput
  images: ImageCreateManyWithoutSpaceInput
  roles: RoleCreateManyWithoutSpaceInput
  tokens: TokenCreateManyWithoutSpaceInput
  variables: VariableCreateManyWithoutSpaceInput
  events: EventCreateManyWithoutSpaceInput
  providers: ProviderCreateManyWithoutSpaceInput
  triggers: TriggerCreateManyWithoutSpaceInput
  raw: ArtifactRawCreateManyWithoutSpacesInput
  plan: PlanCreateOneWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  invoices: InvoiceCreateManyWithoutSpaceInput
  paymentCard: PaymentCardCreateOneInput
  createdBy: ID
}

input SpaceCreateWithoutImagesInput {
  name: String!
  displayName: String
  type: SpaceType
  region: String
  services: ServiceCreateManyWithoutSpaceInput
  deployments: DeploymentCreateManyWithoutSpaceInput
  imageDigests: ImageDigestCreateManyWithoutSpaceInput
  roles: RoleCreateManyWithoutSpaceInput
  tokens: TokenCreateManyWithoutSpaceInput
  variables: VariableCreateManyWithoutSpaceInput
  events: EventCreateManyWithoutSpaceInput
  providers: ProviderCreateManyWithoutSpaceInput
  triggers: TriggerCreateManyWithoutSpaceInput
  raw: ArtifactRawCreateManyWithoutSpacesInput
  plan: PlanCreateOneWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  invoices: InvoiceCreateManyWithoutSpaceInput
  paymentCard: PaymentCardCreateOneInput
  createdBy: ID
}

input SpaceCreateWithoutInvoicesInput {
  name: String!
  displayName: String
  type: SpaceType
  region: String
  services: ServiceCreateManyWithoutSpaceInput
  deployments: DeploymentCreateManyWithoutSpaceInput
  images: ImageCreateManyWithoutSpaceInput
  imageDigests: ImageDigestCreateManyWithoutSpaceInput
  roles: RoleCreateManyWithoutSpaceInput
  tokens: TokenCreateManyWithoutSpaceInput
  variables: VariableCreateManyWithoutSpaceInput
  events: EventCreateManyWithoutSpaceInput
  providers: ProviderCreateManyWithoutSpaceInput
  triggers: TriggerCreateManyWithoutSpaceInput
  raw: ArtifactRawCreateManyWithoutSpacesInput
  plan: PlanCreateOneWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  paymentCard: PaymentCardCreateOneInput
  createdBy: ID
}

input SpaceCreateWithoutPlanInput {
  name: String!
  displayName: String
  type: SpaceType
  region: String
  services: ServiceCreateManyWithoutSpaceInput
  deployments: DeploymentCreateManyWithoutSpaceInput
  images: ImageCreateManyWithoutSpaceInput
  imageDigests: ImageDigestCreateManyWithoutSpaceInput
  roles: RoleCreateManyWithoutSpaceInput
  tokens: TokenCreateManyWithoutSpaceInput
  variables: VariableCreateManyWithoutSpaceInput
  events: EventCreateManyWithoutSpaceInput
  providers: ProviderCreateManyWithoutSpaceInput
  triggers: TriggerCreateManyWithoutSpaceInput
  raw: ArtifactRawCreateManyWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  invoices: InvoiceCreateManyWithoutSpaceInput
  paymentCard: PaymentCardCreateOneInput
  createdBy: ID
}

input SpaceCreateWithoutProvidersInput {
  name: String!
  displayName: String
  type: SpaceType
  region: String
  services: ServiceCreateManyWithoutSpaceInput
  deployments: DeploymentCreateManyWithoutSpaceInput
  images: ImageCreateManyWithoutSpaceInput
  imageDigests: ImageDigestCreateManyWithoutSpaceInput
  roles: RoleCreateManyWithoutSpaceInput
  tokens: TokenCreateManyWithoutSpaceInput
  variables: VariableCreateManyWithoutSpaceInput
  events: EventCreateManyWithoutSpaceInput
  triggers: TriggerCreateManyWithoutSpaceInput
  raw: ArtifactRawCreateManyWithoutSpacesInput
  plan: PlanCreateOneWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  invoices: InvoiceCreateManyWithoutSpaceInput
  paymentCard: PaymentCardCreateOneInput
  createdBy: ID
}

input SpaceCreateWithoutRawInput {
  name: String!
  displayName: String
  type: SpaceType
  region: String
  services: ServiceCreateManyWithoutSpaceInput
  deployments: DeploymentCreateManyWithoutSpaceInput
  images: ImageCreateManyWithoutSpaceInput
  imageDigests: ImageDigestCreateManyWithoutSpaceInput
  roles: RoleCreateManyWithoutSpaceInput
  tokens: TokenCreateManyWithoutSpaceInput
  variables: VariableCreateManyWithoutSpaceInput
  events: EventCreateManyWithoutSpaceInput
  providers: ProviderCreateManyWithoutSpaceInput
  triggers: TriggerCreateManyWithoutSpaceInput
  plan: PlanCreateOneWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  invoices: InvoiceCreateManyWithoutSpaceInput
  paymentCard: PaymentCardCreateOneInput
  createdBy: ID
}

input SpaceCreateWithoutRolesInput {
  name: String!
  displayName: String
  type: SpaceType
  region: String
  services: ServiceCreateManyWithoutSpaceInput
  deployments: DeploymentCreateManyWithoutSpaceInput
  images: ImageCreateManyWithoutSpaceInput
  imageDigests: ImageDigestCreateManyWithoutSpaceInput
  tokens: TokenCreateManyWithoutSpaceInput
  variables: VariableCreateManyWithoutSpaceInput
  events: EventCreateManyWithoutSpaceInput
  providers: ProviderCreateManyWithoutSpaceInput
  triggers: TriggerCreateManyWithoutSpaceInput
  raw: ArtifactRawCreateManyWithoutSpacesInput
  plan: PlanCreateOneWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  invoices: InvoiceCreateManyWithoutSpaceInput
  paymentCard: PaymentCardCreateOneInput
  createdBy: ID
}

input SpaceCreateWithoutServicesInput {
  name: String!
  displayName: String
  type: SpaceType
  region: String
  deployments: DeploymentCreateManyWithoutSpaceInput
  images: ImageCreateManyWithoutSpaceInput
  imageDigests: ImageDigestCreateManyWithoutSpaceInput
  roles: RoleCreateManyWithoutSpaceInput
  tokens: TokenCreateManyWithoutSpaceInput
  variables: VariableCreateManyWithoutSpaceInput
  events: EventCreateManyWithoutSpaceInput
  providers: ProviderCreateManyWithoutSpaceInput
  triggers: TriggerCreateManyWithoutSpaceInput
  raw: ArtifactRawCreateManyWithoutSpacesInput
  plan: PlanCreateOneWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  invoices: InvoiceCreateManyWithoutSpaceInput
  paymentCard: PaymentCardCreateOneInput
  createdBy: ID
}

input SpaceCreateWithoutTokensInput {
  name: String!
  displayName: String
  type: SpaceType
  region: String
  services: ServiceCreateManyWithoutSpaceInput
  deployments: DeploymentCreateManyWithoutSpaceInput
  images: ImageCreateManyWithoutSpaceInput
  imageDigests: ImageDigestCreateManyWithoutSpaceInput
  roles: RoleCreateManyWithoutSpaceInput
  variables: VariableCreateManyWithoutSpaceInput
  events: EventCreateManyWithoutSpaceInput
  providers: ProviderCreateManyWithoutSpaceInput
  triggers: TriggerCreateManyWithoutSpaceInput
  raw: ArtifactRawCreateManyWithoutSpacesInput
  plan: PlanCreateOneWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  invoices: InvoiceCreateManyWithoutSpaceInput
  paymentCard: PaymentCardCreateOneInput
  createdBy: ID
}

input SpaceCreateWithoutTriggersInput {
  name: String!
  displayName: String
  type: SpaceType
  region: String
  services: ServiceCreateManyWithoutSpaceInput
  deployments: DeploymentCreateManyWithoutSpaceInput
  images: ImageCreateManyWithoutSpaceInput
  imageDigests: ImageDigestCreateManyWithoutSpaceInput
  roles: RoleCreateManyWithoutSpaceInput
  tokens: TokenCreateManyWithoutSpaceInput
  variables: VariableCreateManyWithoutSpaceInput
  events: EventCreateManyWithoutSpaceInput
  providers: ProviderCreateManyWithoutSpaceInput
  raw: ArtifactRawCreateManyWithoutSpacesInput
  plan: PlanCreateOneWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  invoices: InvoiceCreateManyWithoutSpaceInput
  paymentCard: PaymentCardCreateOneInput
  createdBy: ID
}

input SpaceCreateWithoutVariablesInput {
  name: String!
  displayName: String
  type: SpaceType
  region: String
  services: ServiceCreateManyWithoutSpaceInput
  deployments: DeploymentCreateManyWithoutSpaceInput
  images: ImageCreateManyWithoutSpaceInput
  imageDigests: ImageDigestCreateManyWithoutSpaceInput
  roles: RoleCreateManyWithoutSpaceInput
  tokens: TokenCreateManyWithoutSpaceInput
  events: EventCreateManyWithoutSpaceInput
  providers: ProviderCreateManyWithoutSpaceInput
  triggers: TriggerCreateManyWithoutSpaceInput
  raw: ArtifactRawCreateManyWithoutSpacesInput
  plan: PlanCreateOneWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  invoices: InvoiceCreateManyWithoutSpaceInput
  paymentCard: PaymentCardCreateOneInput
  createdBy: ID
}

type SpaceEdge {
  node: Space!
  cursor: String!
}

enum SpaceOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  displayName_ASC
  displayName_DESC
  type_ASC
  type_DESC
  region_ASC
  region_DESC
  creditLimit_ASC
  creditLimit_DESC
  billingCap_ASC
  billingCap_DESC
  createdBy_ASC
  createdBy_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type SpacePreviousValues {
  id: ID!
  name: String!
  displayName: String
  type: SpaceType
  region: String
  creditLimit: Float
  billingCap: Float
  createdBy: ID
  createdAt: DateTime!
  updatedAt: DateTime!
}

input SpaceScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  displayName: String
  displayName_not: String
  displayName_in: [String!]
  displayName_not_in: [String!]
  displayName_lt: String
  displayName_lte: String
  displayName_gt: String
  displayName_gte: String
  displayName_contains: String
  displayName_not_contains: String
  displayName_starts_with: String
  displayName_not_starts_with: String
  displayName_ends_with: String
  displayName_not_ends_with: String
  type: SpaceType
  type_not: SpaceType
  type_in: [SpaceType!]
  type_not_in: [SpaceType!]
  region: String
  region_not: String
  region_in: [String!]
  region_not_in: [String!]
  region_lt: String
  region_lte: String
  region_gt: String
  region_gte: String
  region_contains: String
  region_not_contains: String
  region_starts_with: String
  region_not_starts_with: String
  region_ends_with: String
  region_not_ends_with: String
  creditLimit: Float
  creditLimit_not: Float
  creditLimit_in: [Float!]
  creditLimit_not_in: [Float!]
  creditLimit_lt: Float
  creditLimit_lte: Float
  creditLimit_gt: Float
  creditLimit_gte: Float
  billingCap: Float
  billingCap_not: Float
  billingCap_in: [Float!]
  billingCap_not_in: [Float!]
  billingCap_lt: Float
  billingCap_lte: Float
  billingCap_gt: Float
  billingCap_gte: Float
  createdBy: ID
  createdBy_not: ID
  createdBy_in: [ID!]
  createdBy_not_in: [ID!]
  createdBy_lt: ID
  createdBy_lte: ID
  createdBy_gt: ID
  createdBy_gte: ID
  createdBy_contains: ID
  createdBy_not_contains: ID
  createdBy_starts_with: ID
  createdBy_not_starts_with: ID
  createdBy_ends_with: ID
  createdBy_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [SpaceScalarWhereInput!]
  OR: [SpaceScalarWhereInput!]
  NOT: [SpaceScalarWhereInput!]
}

type SpaceSubscriptionPayload {
  mutation: MutationType!
  node: Space
  updatedFields: [String!]
  previousValues: SpacePreviousValues
}

input SpaceSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SpaceWhereInput
  AND: [SpaceSubscriptionWhereInput!]
  OR: [SpaceSubscriptionWhereInput!]
  NOT: [SpaceSubscriptionWhereInput!]
}

enum SpaceType {
  ORGANIZATION
  USER
}

input SpaceUpdateDataInput {
  name: String
  displayName: String
  type: SpaceType
  region: String
  services: ServiceUpdateManyWithoutSpaceInput
  deployments: DeploymentUpdateManyWithoutSpaceInput
  images: ImageUpdateManyWithoutSpaceInput
  imageDigests: ImageDigestUpdateManyWithoutSpaceInput
  roles: RoleUpdateManyWithoutSpaceInput
  tokens: TokenUpdateManyWithoutSpaceInput
  variables: VariableUpdateManyWithoutSpaceInput
  events: EventUpdateManyWithoutSpaceInput
  providers: ProviderUpdateManyWithoutSpaceInput
  triggers: TriggerUpdateManyWithoutSpaceInput
  raw: ArtifactRawUpdateManyWithoutSpacesInput
  plan: PlanUpdateOneWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  invoices: InvoiceUpdateManyWithoutSpaceInput
  paymentCard: PaymentCardUpdateOneInput
  createdBy: ID
}

input SpaceUpdateInput {
  name: String
  displayName: String
  type: SpaceType
  region: String
  services: ServiceUpdateManyWithoutSpaceInput
  deployments: DeploymentUpdateManyWithoutSpaceInput
  images: ImageUpdateManyWithoutSpaceInput
  imageDigests: ImageDigestUpdateManyWithoutSpaceInput
  roles: RoleUpdateManyWithoutSpaceInput
  tokens: TokenUpdateManyWithoutSpaceInput
  variables: VariableUpdateManyWithoutSpaceInput
  events: EventUpdateManyWithoutSpaceInput
  providers: ProviderUpdateManyWithoutSpaceInput
  triggers: TriggerUpdateManyWithoutSpaceInput
  raw: ArtifactRawUpdateManyWithoutSpacesInput
  plan: PlanUpdateOneWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  invoices: InvoiceUpdateManyWithoutSpaceInput
  paymentCard: PaymentCardUpdateOneInput
  createdBy: ID
}

input SpaceUpdateManyDataInput {
  name: String
  displayName: String
  type: SpaceType
  region: String
  creditLimit: Float
  billingCap: Float
  createdBy: ID
}

input SpaceUpdateManyMutationInput {
  name: String
  displayName: String
  type: SpaceType
  region: String
  creditLimit: Float
  billingCap: Float
  createdBy: ID
}

input SpaceUpdateManyWithoutPlanInput {
  create: [SpaceCreateWithoutPlanInput!]
  delete: [SpaceWhereUniqueInput!]
  connect: [SpaceWhereUniqueInput!]
  set: [SpaceWhereUniqueInput!]
  disconnect: [SpaceWhereUniqueInput!]
  update: [SpaceUpdateWithWhereUniqueWithoutPlanInput!]
  upsert: [SpaceUpsertWithWhereUniqueWithoutPlanInput!]
  deleteMany: [SpaceScalarWhereInput!]
  updateMany: [SpaceUpdateManyWithWhereNestedInput!]
}

input SpaceUpdateManyWithoutRawInput {
  create: [SpaceCreateWithoutRawInput!]
  delete: [SpaceWhereUniqueInput!]
  connect: [SpaceWhereUniqueInput!]
  set: [SpaceWhereUniqueInput!]
  disconnect: [SpaceWhereUniqueInput!]
  update: [SpaceUpdateWithWhereUniqueWithoutRawInput!]
  upsert: [SpaceUpsertWithWhereUniqueWithoutRawInput!]
  deleteMany: [SpaceScalarWhereInput!]
  updateMany: [SpaceUpdateManyWithWhereNestedInput!]
}

input SpaceUpdateManyWithWhereNestedInput {
  where: SpaceScalarWhereInput!
  data: SpaceUpdateManyDataInput!
}

input SpaceUpdateOneInput {
  create: SpaceCreateInput
  update: SpaceUpdateDataInput
  upsert: SpaceUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: SpaceWhereUniqueInput
}

input SpaceUpdateOneRequiredWithoutDeploymentsInput {
  create: SpaceCreateWithoutDeploymentsInput
  update: SpaceUpdateWithoutDeploymentsDataInput
  upsert: SpaceUpsertWithoutDeploymentsInput
  connect: SpaceWhereUniqueInput
}

input SpaceUpdateOneRequiredWithoutImageDigestsInput {
  create: SpaceCreateWithoutImageDigestsInput
  update: SpaceUpdateWithoutImageDigestsDataInput
  upsert: SpaceUpsertWithoutImageDigestsInput
  connect: SpaceWhereUniqueInput
}

input SpaceUpdateOneRequiredWithoutImagesInput {
  create: SpaceCreateWithoutImagesInput
  update: SpaceUpdateWithoutImagesDataInput
  upsert: SpaceUpsertWithoutImagesInput
  connect: SpaceWhereUniqueInput
}

input SpaceUpdateOneRequiredWithoutInvoicesInput {
  create: SpaceCreateWithoutInvoicesInput
  update: SpaceUpdateWithoutInvoicesDataInput
  upsert: SpaceUpsertWithoutInvoicesInput
  connect: SpaceWhereUniqueInput
}

input SpaceUpdateOneRequiredWithoutServicesInput {
  create: SpaceCreateWithoutServicesInput
  update: SpaceUpdateWithoutServicesDataInput
  upsert: SpaceUpsertWithoutServicesInput
  connect: SpaceWhereUniqueInput
}

input SpaceUpdateOneRequiredWithoutTriggersInput {
  create: SpaceCreateWithoutTriggersInput
  update: SpaceUpdateWithoutTriggersDataInput
  upsert: SpaceUpsertWithoutTriggersInput
  connect: SpaceWhereUniqueInput
}

input SpaceUpdateOneRequiredWithoutVariablesInput {
  create: SpaceCreateWithoutVariablesInput
  update: SpaceUpdateWithoutVariablesDataInput
  upsert: SpaceUpsertWithoutVariablesInput
  connect: SpaceWhereUniqueInput
}

input SpaceUpdateOneWithoutEventsInput {
  create: SpaceCreateWithoutEventsInput
  update: SpaceUpdateWithoutEventsDataInput
  upsert: SpaceUpsertWithoutEventsInput
  delete: Boolean
  disconnect: Boolean
  connect: SpaceWhereUniqueInput
}

input SpaceUpdateOneWithoutProvidersInput {
  create: SpaceCreateWithoutProvidersInput
  update: SpaceUpdateWithoutProvidersDataInput
  upsert: SpaceUpsertWithoutProvidersInput
  delete: Boolean
  disconnect: Boolean
  connect: SpaceWhereUniqueInput
}

input SpaceUpdateOneWithoutRolesInput {
  create: SpaceCreateWithoutRolesInput
  update: SpaceUpdateWithoutRolesDataInput
  upsert: SpaceUpsertWithoutRolesInput
  delete: Boolean
  disconnect: Boolean
  connect: SpaceWhereUniqueInput
}

input SpaceUpdateOneWithoutTokensInput {
  create: SpaceCreateWithoutTokensInput
  update: SpaceUpdateWithoutTokensDataInput
  upsert: SpaceUpsertWithoutTokensInput
  delete: Boolean
  disconnect: Boolean
  connect: SpaceWhereUniqueInput
}

input SpaceUpdateWithoutDeploymentsDataInput {
  name: String
  displayName: String
  type: SpaceType
  region: String
  services: ServiceUpdateManyWithoutSpaceInput
  images: ImageUpdateManyWithoutSpaceInput
  imageDigests: ImageDigestUpdateManyWithoutSpaceInput
  roles: RoleUpdateManyWithoutSpaceInput
  tokens: TokenUpdateManyWithoutSpaceInput
  variables: VariableUpdateManyWithoutSpaceInput
  events: EventUpdateManyWithoutSpaceInput
  providers: ProviderUpdateManyWithoutSpaceInput
  triggers: TriggerUpdateManyWithoutSpaceInput
  raw: ArtifactRawUpdateManyWithoutSpacesInput
  plan: PlanUpdateOneWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  invoices: InvoiceUpdateManyWithoutSpaceInput
  paymentCard: PaymentCardUpdateOneInput
  createdBy: ID
}

input SpaceUpdateWithoutEventsDataInput {
  name: String
  displayName: String
  type: SpaceType
  region: String
  services: ServiceUpdateManyWithoutSpaceInput
  deployments: DeploymentUpdateManyWithoutSpaceInput
  images: ImageUpdateManyWithoutSpaceInput
  imageDigests: ImageDigestUpdateManyWithoutSpaceInput
  roles: RoleUpdateManyWithoutSpaceInput
  tokens: TokenUpdateManyWithoutSpaceInput
  variables: VariableUpdateManyWithoutSpaceInput
  providers: ProviderUpdateManyWithoutSpaceInput
  triggers: TriggerUpdateManyWithoutSpaceInput
  raw: ArtifactRawUpdateManyWithoutSpacesInput
  plan: PlanUpdateOneWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  invoices: InvoiceUpdateManyWithoutSpaceInput
  paymentCard: PaymentCardUpdateOneInput
  createdBy: ID
}

input SpaceUpdateWithoutImageDigestsDataInput {
  name: String
  displayName: String
  type: SpaceType
  region: String
  services: ServiceUpdateManyWithoutSpaceInput
  deployments: DeploymentUpdateManyWithoutSpaceInput
  images: ImageUpdateManyWithoutSpaceInput
  roles: RoleUpdateManyWithoutSpaceInput
  tokens: TokenUpdateManyWithoutSpaceInput
  variables: VariableUpdateManyWithoutSpaceInput
  events: EventUpdateManyWithoutSpaceInput
  providers: ProviderUpdateManyWithoutSpaceInput
  triggers: TriggerUpdateManyWithoutSpaceInput
  raw: ArtifactRawUpdateManyWithoutSpacesInput
  plan: PlanUpdateOneWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  invoices: InvoiceUpdateManyWithoutSpaceInput
  paymentCard: PaymentCardUpdateOneInput
  createdBy: ID
}

input SpaceUpdateWithoutImagesDataInput {
  name: String
  displayName: String
  type: SpaceType
  region: String
  services: ServiceUpdateManyWithoutSpaceInput
  deployments: DeploymentUpdateManyWithoutSpaceInput
  imageDigests: ImageDigestUpdateManyWithoutSpaceInput
  roles: RoleUpdateManyWithoutSpaceInput
  tokens: TokenUpdateManyWithoutSpaceInput
  variables: VariableUpdateManyWithoutSpaceInput
  events: EventUpdateManyWithoutSpaceInput
  providers: ProviderUpdateManyWithoutSpaceInput
  triggers: TriggerUpdateManyWithoutSpaceInput
  raw: ArtifactRawUpdateManyWithoutSpacesInput
  plan: PlanUpdateOneWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  invoices: InvoiceUpdateManyWithoutSpaceInput
  paymentCard: PaymentCardUpdateOneInput
  createdBy: ID
}

input SpaceUpdateWithoutInvoicesDataInput {
  name: String
  displayName: String
  type: SpaceType
  region: String
  services: ServiceUpdateManyWithoutSpaceInput
  deployments: DeploymentUpdateManyWithoutSpaceInput
  images: ImageUpdateManyWithoutSpaceInput
  imageDigests: ImageDigestUpdateManyWithoutSpaceInput
  roles: RoleUpdateManyWithoutSpaceInput
  tokens: TokenUpdateManyWithoutSpaceInput
  variables: VariableUpdateManyWithoutSpaceInput
  events: EventUpdateManyWithoutSpaceInput
  providers: ProviderUpdateManyWithoutSpaceInput
  triggers: TriggerUpdateManyWithoutSpaceInput
  raw: ArtifactRawUpdateManyWithoutSpacesInput
  plan: PlanUpdateOneWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  paymentCard: PaymentCardUpdateOneInput
  createdBy: ID
}

input SpaceUpdateWithoutPlanDataInput {
  name: String
  displayName: String
  type: SpaceType
  region: String
  services: ServiceUpdateManyWithoutSpaceInput
  deployments: DeploymentUpdateManyWithoutSpaceInput
  images: ImageUpdateManyWithoutSpaceInput
  imageDigests: ImageDigestUpdateManyWithoutSpaceInput
  roles: RoleUpdateManyWithoutSpaceInput
  tokens: TokenUpdateManyWithoutSpaceInput
  variables: VariableUpdateManyWithoutSpaceInput
  events: EventUpdateManyWithoutSpaceInput
  providers: ProviderUpdateManyWithoutSpaceInput
  triggers: TriggerUpdateManyWithoutSpaceInput
  raw: ArtifactRawUpdateManyWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  invoices: InvoiceUpdateManyWithoutSpaceInput
  paymentCard: PaymentCardUpdateOneInput
  createdBy: ID
}

input SpaceUpdateWithoutProvidersDataInput {
  name: String
  displayName: String
  type: SpaceType
  region: String
  services: ServiceUpdateManyWithoutSpaceInput
  deployments: DeploymentUpdateManyWithoutSpaceInput
  images: ImageUpdateManyWithoutSpaceInput
  imageDigests: ImageDigestUpdateManyWithoutSpaceInput
  roles: RoleUpdateManyWithoutSpaceInput
  tokens: TokenUpdateManyWithoutSpaceInput
  variables: VariableUpdateManyWithoutSpaceInput
  events: EventUpdateManyWithoutSpaceInput
  triggers: TriggerUpdateManyWithoutSpaceInput
  raw: ArtifactRawUpdateManyWithoutSpacesInput
  plan: PlanUpdateOneWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  invoices: InvoiceUpdateManyWithoutSpaceInput
  paymentCard: PaymentCardUpdateOneInput
  createdBy: ID
}

input SpaceUpdateWithoutRawDataInput {
  name: String
  displayName: String
  type: SpaceType
  region: String
  services: ServiceUpdateManyWithoutSpaceInput
  deployments: DeploymentUpdateManyWithoutSpaceInput
  images: ImageUpdateManyWithoutSpaceInput
  imageDigests: ImageDigestUpdateManyWithoutSpaceInput
  roles: RoleUpdateManyWithoutSpaceInput
  tokens: TokenUpdateManyWithoutSpaceInput
  variables: VariableUpdateManyWithoutSpaceInput
  events: EventUpdateManyWithoutSpaceInput
  providers: ProviderUpdateManyWithoutSpaceInput
  triggers: TriggerUpdateManyWithoutSpaceInput
  plan: PlanUpdateOneWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  invoices: InvoiceUpdateManyWithoutSpaceInput
  paymentCard: PaymentCardUpdateOneInput
  createdBy: ID
}

input SpaceUpdateWithoutRolesDataInput {
  name: String
  displayName: String
  type: SpaceType
  region: String
  services: ServiceUpdateManyWithoutSpaceInput
  deployments: DeploymentUpdateManyWithoutSpaceInput
  images: ImageUpdateManyWithoutSpaceInput
  imageDigests: ImageDigestUpdateManyWithoutSpaceInput
  tokens: TokenUpdateManyWithoutSpaceInput
  variables: VariableUpdateManyWithoutSpaceInput
  events: EventUpdateManyWithoutSpaceInput
  providers: ProviderUpdateManyWithoutSpaceInput
  triggers: TriggerUpdateManyWithoutSpaceInput
  raw: ArtifactRawUpdateManyWithoutSpacesInput
  plan: PlanUpdateOneWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  invoices: InvoiceUpdateManyWithoutSpaceInput
  paymentCard: PaymentCardUpdateOneInput
  createdBy: ID
}

input SpaceUpdateWithoutServicesDataInput {
  name: String
  displayName: String
  type: SpaceType
  region: String
  deployments: DeploymentUpdateManyWithoutSpaceInput
  images: ImageUpdateManyWithoutSpaceInput
  imageDigests: ImageDigestUpdateManyWithoutSpaceInput
  roles: RoleUpdateManyWithoutSpaceInput
  tokens: TokenUpdateManyWithoutSpaceInput
  variables: VariableUpdateManyWithoutSpaceInput
  events: EventUpdateManyWithoutSpaceInput
  providers: ProviderUpdateManyWithoutSpaceInput
  triggers: TriggerUpdateManyWithoutSpaceInput
  raw: ArtifactRawUpdateManyWithoutSpacesInput
  plan: PlanUpdateOneWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  invoices: InvoiceUpdateManyWithoutSpaceInput
  paymentCard: PaymentCardUpdateOneInput
  createdBy: ID
}

input SpaceUpdateWithoutTokensDataInput {
  name: String
  displayName: String
  type: SpaceType
  region: String
  services: ServiceUpdateManyWithoutSpaceInput
  deployments: DeploymentUpdateManyWithoutSpaceInput
  images: ImageUpdateManyWithoutSpaceInput
  imageDigests: ImageDigestUpdateManyWithoutSpaceInput
  roles: RoleUpdateManyWithoutSpaceInput
  variables: VariableUpdateManyWithoutSpaceInput
  events: EventUpdateManyWithoutSpaceInput
  providers: ProviderUpdateManyWithoutSpaceInput
  triggers: TriggerUpdateManyWithoutSpaceInput
  raw: ArtifactRawUpdateManyWithoutSpacesInput
  plan: PlanUpdateOneWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  invoices: InvoiceUpdateManyWithoutSpaceInput
  paymentCard: PaymentCardUpdateOneInput
  createdBy: ID
}

input SpaceUpdateWithoutTriggersDataInput {
  name: String
  displayName: String
  type: SpaceType
  region: String
  services: ServiceUpdateManyWithoutSpaceInput
  deployments: DeploymentUpdateManyWithoutSpaceInput
  images: ImageUpdateManyWithoutSpaceInput
  imageDigests: ImageDigestUpdateManyWithoutSpaceInput
  roles: RoleUpdateManyWithoutSpaceInput
  tokens: TokenUpdateManyWithoutSpaceInput
  variables: VariableUpdateManyWithoutSpaceInput
  events: EventUpdateManyWithoutSpaceInput
  providers: ProviderUpdateManyWithoutSpaceInput
  raw: ArtifactRawUpdateManyWithoutSpacesInput
  plan: PlanUpdateOneWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  invoices: InvoiceUpdateManyWithoutSpaceInput
  paymentCard: PaymentCardUpdateOneInput
  createdBy: ID
}

input SpaceUpdateWithoutVariablesDataInput {
  name: String
  displayName: String
  type: SpaceType
  region: String
  services: ServiceUpdateManyWithoutSpaceInput
  deployments: DeploymentUpdateManyWithoutSpaceInput
  images: ImageUpdateManyWithoutSpaceInput
  imageDigests: ImageDigestUpdateManyWithoutSpaceInput
  roles: RoleUpdateManyWithoutSpaceInput
  tokens: TokenUpdateManyWithoutSpaceInput
  events: EventUpdateManyWithoutSpaceInput
  providers: ProviderUpdateManyWithoutSpaceInput
  triggers: TriggerUpdateManyWithoutSpaceInput
  raw: ArtifactRawUpdateManyWithoutSpacesInput
  plan: PlanUpdateOneWithoutSpacesInput
  creditLimit: Float
  billingCap: Float
  invoices: InvoiceUpdateManyWithoutSpaceInput
  paymentCard: PaymentCardUpdateOneInput
  createdBy: ID
}

input SpaceUpdateWithWhereUniqueWithoutPlanInput {
  where: SpaceWhereUniqueInput!
  data: SpaceUpdateWithoutPlanDataInput!
}

input SpaceUpdateWithWhereUniqueWithoutRawInput {
  where: SpaceWhereUniqueInput!
  data: SpaceUpdateWithoutRawDataInput!
}

input SpaceUpsertNestedInput {
  update: SpaceUpdateDataInput!
  create: SpaceCreateInput!
}

input SpaceUpsertWithoutDeploymentsInput {
  update: SpaceUpdateWithoutDeploymentsDataInput!
  create: SpaceCreateWithoutDeploymentsInput!
}

input SpaceUpsertWithoutEventsInput {
  update: SpaceUpdateWithoutEventsDataInput!
  create: SpaceCreateWithoutEventsInput!
}

input SpaceUpsertWithoutImageDigestsInput {
  update: SpaceUpdateWithoutImageDigestsDataInput!
  create: SpaceCreateWithoutImageDigestsInput!
}

input SpaceUpsertWithoutImagesInput {
  update: SpaceUpdateWithoutImagesDataInput!
  create: SpaceCreateWithoutImagesInput!
}

input SpaceUpsertWithoutInvoicesInput {
  update: SpaceUpdateWithoutInvoicesDataInput!
  create: SpaceCreateWithoutInvoicesInput!
}

input SpaceUpsertWithoutProvidersInput {
  update: SpaceUpdateWithoutProvidersDataInput!
  create: SpaceCreateWithoutProvidersInput!
}

input SpaceUpsertWithoutRolesInput {
  update: SpaceUpdateWithoutRolesDataInput!
  create: SpaceCreateWithoutRolesInput!
}

input SpaceUpsertWithoutServicesInput {
  update: SpaceUpdateWithoutServicesDataInput!
  create: SpaceCreateWithoutServicesInput!
}

input SpaceUpsertWithoutTokensInput {
  update: SpaceUpdateWithoutTokensDataInput!
  create: SpaceCreateWithoutTokensInput!
}

input SpaceUpsertWithoutTriggersInput {
  update: SpaceUpdateWithoutTriggersDataInput!
  create: SpaceCreateWithoutTriggersInput!
}

input SpaceUpsertWithoutVariablesInput {
  update: SpaceUpdateWithoutVariablesDataInput!
  create: SpaceCreateWithoutVariablesInput!
}

input SpaceUpsertWithWhereUniqueWithoutPlanInput {
  where: SpaceWhereUniqueInput!
  update: SpaceUpdateWithoutPlanDataInput!
  create: SpaceCreateWithoutPlanInput!
}

input SpaceUpsertWithWhereUniqueWithoutRawInput {
  where: SpaceWhereUniqueInput!
  update: SpaceUpdateWithoutRawDataInput!
  create: SpaceCreateWithoutRawInput!
}

input SpaceWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  displayName: String
  displayName_not: String
  displayName_in: [String!]
  displayName_not_in: [String!]
  displayName_lt: String
  displayName_lte: String
  displayName_gt: String
  displayName_gte: String
  displayName_contains: String
  displayName_not_contains: String
  displayName_starts_with: String
  displayName_not_starts_with: String
  displayName_ends_with: String
  displayName_not_ends_with: String
  type: SpaceType
  type_not: SpaceType
  type_in: [SpaceType!]
  type_not_in: [SpaceType!]
  region: String
  region_not: String
  region_in: [String!]
  region_not_in: [String!]
  region_lt: String
  region_lte: String
  region_gt: String
  region_gte: String
  region_contains: String
  region_not_contains: String
  region_starts_with: String
  region_not_starts_with: String
  region_ends_with: String
  region_not_ends_with: String
  services_every: ServiceWhereInput
  services_some: ServiceWhereInput
  services_none: ServiceWhereInput
  deployments_every: DeploymentWhereInput
  deployments_some: DeploymentWhereInput
  deployments_none: DeploymentWhereInput
  images_every: ImageWhereInput
  images_some: ImageWhereInput
  images_none: ImageWhereInput
  imageDigests_every: ImageDigestWhereInput
  imageDigests_some: ImageDigestWhereInput
  imageDigests_none: ImageDigestWhereInput
  roles_every: RoleWhereInput
  roles_some: RoleWhereInput
  roles_none: RoleWhereInput
  tokens_every: TokenWhereInput
  tokens_some: TokenWhereInput
  tokens_none: TokenWhereInput
  variables_every: VariableWhereInput
  variables_some: VariableWhereInput
  variables_none: VariableWhereInput
  events_every: EventWhereInput
  events_some: EventWhereInput
  events_none: EventWhereInput
  providers_every: ProviderWhereInput
  providers_some: ProviderWhereInput
  providers_none: ProviderWhereInput
  triggers_every: TriggerWhereInput
  triggers_some: TriggerWhereInput
  triggers_none: TriggerWhereInput
  raw_every: ArtifactRawWhereInput
  raw_some: ArtifactRawWhereInput
  raw_none: ArtifactRawWhereInput
  plan: PlanWhereInput
  creditLimit: Float
  creditLimit_not: Float
  creditLimit_in: [Float!]
  creditLimit_not_in: [Float!]
  creditLimit_lt: Float
  creditLimit_lte: Float
  creditLimit_gt: Float
  creditLimit_gte: Float
  billingCap: Float
  billingCap_not: Float
  billingCap_in: [Float!]
  billingCap_not_in: [Float!]
  billingCap_lt: Float
  billingCap_lte: Float
  billingCap_gt: Float
  billingCap_gte: Float
  invoices_every: InvoiceWhereInput
  invoices_some: InvoiceWhereInput
  invoices_none: InvoiceWhereInput
  paymentCard: PaymentCardWhereInput
  createdBy: ID
  createdBy_not: ID
  createdBy_in: [ID!]
  createdBy_not_in: [ID!]
  createdBy_lt: ID
  createdBy_lte: ID
  createdBy_gt: ID
  createdBy_gte: ID
  createdBy_contains: ID
  createdBy_not_contains: ID
  createdBy_starts_with: ID
  createdBy_not_starts_with: ID
  createdBy_ends_with: ID
  createdBy_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [SpaceWhereInput!]
  OR: [SpaceWhereInput!]
  NOT: [SpaceWhereInput!]
}

input SpaceWhereUniqueInput {
  id: ID
  name: String
}

type Subscription {
  app(where: AppSubscriptionWhereInput): AppSubscriptionPayload
  appDeployment(where: AppDeploymentSubscriptionWhereInput): AppDeploymentSubscriptionPayload
  appSource(where: AppSourceSubscriptionWhereInput): AppSourceSubscriptionPayload
  appSourceEvent(where: AppSourceEventSubscriptionWhereInput): AppSourceEventSubscriptionPayload
  artifact(where: ArtifactSubscriptionWhereInput): ArtifactSubscriptionPayload
  artifactRaw(where: ArtifactRawSubscriptionWhereInput): ArtifactRawSubscriptionPayload
  auth(where: AuthSubscriptionWhereInput): AuthSubscriptionPayload
  deployment(where: DeploymentSubscriptionWhereInput): DeploymentSubscriptionPayload
  event(where: EventSubscriptionWhereInput): EventSubscriptionPayload
  host(where: HostSubscriptionWhereInput): HostSubscriptionPayload
  image(where: ImageSubscriptionWhereInput): ImageSubscriptionPayload
  imageDigest(where: ImageDigestSubscriptionWhereInput): ImageDigestSubscriptionPayload
  imageTag(where: ImageTagSubscriptionWhereInput): ImageTagSubscriptionPayload
  instance(where: InstanceSubscriptionWhereInput): InstanceSubscriptionPayload
  invoice(where: InvoiceSubscriptionWhereInput): InvoiceSubscriptionPayload
  invoiceCharge(where: InvoiceChargeSubscriptionWhereInput): InvoiceChargeSubscriptionPayload
  invoiceItem(where: InvoiceItemSubscriptionWhereInput): InvoiceItemSubscriptionPayload
  paymentCard(where: PaymentCardSubscriptionWhereInput): PaymentCardSubscriptionPayload
  plan(where: PlanSubscriptionWhereInput): PlanSubscriptionPayload
  provider(where: ProviderSubscriptionWhereInput): ProviderSubscriptionPayload
  role(where: RoleSubscriptionWhereInput): RoleSubscriptionPayload
  service(where: ServiceSubscriptionWhereInput): ServiceSubscriptionPayload
  serviceTag(where: ServiceTagSubscriptionWhereInput): ServiceTagSubscriptionPayload
  space(where: SpaceSubscriptionWhereInput): SpaceSubscriptionPayload
  token(where: TokenSubscriptionWhereInput): TokenSubscriptionPayload
  trigger(where: TriggerSubscriptionWhereInput): TriggerSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  variable(where: VariableSubscriptionWhereInput): VariableSubscriptionPayload
}

type Token {
  id: ID!
  name: String!
  secret: String!
  auth: Auth!
  space: Space
  createdAt: DateTime!
  updatedAt: DateTime!
}

type TokenConnection {
  pageInfo: PageInfo!
  edges: [TokenEdge]!
  aggregate: AggregateToken!
}

input TokenCreateInput {
  name: String!
  secret: String!
  auth: AuthCreateOneWithoutTokenInput!
  space: SpaceCreateOneWithoutTokensInput
}

input TokenCreateManyWithoutAuthInput {
  create: [TokenCreateWithoutAuthInput!]
  connect: [TokenWhereUniqueInput!]
}

input TokenCreateManyWithoutSpaceInput {
  create: [TokenCreateWithoutSpaceInput!]
  connect: [TokenWhereUniqueInput!]
}

input TokenCreateWithoutAuthInput {
  name: String!
  secret: String!
  space: SpaceCreateOneWithoutTokensInput
}

input TokenCreateWithoutSpaceInput {
  name: String!
  secret: String!
  auth: AuthCreateOneWithoutTokenInput!
}

type TokenEdge {
  node: Token!
  cursor: String!
}

enum TokenOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  secret_ASC
  secret_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type TokenPreviousValues {
  id: ID!
  name: String!
  secret: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input TokenScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  secret: String
  secret_not: String
  secret_in: [String!]
  secret_not_in: [String!]
  secret_lt: String
  secret_lte: String
  secret_gt: String
  secret_gte: String
  secret_contains: String
  secret_not_contains: String
  secret_starts_with: String
  secret_not_starts_with: String
  secret_ends_with: String
  secret_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [TokenScalarWhereInput!]
  OR: [TokenScalarWhereInput!]
  NOT: [TokenScalarWhereInput!]
}

type TokenSubscriptionPayload {
  mutation: MutationType!
  node: Token
  updatedFields: [String!]
  previousValues: TokenPreviousValues
}

input TokenSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: TokenWhereInput
  AND: [TokenSubscriptionWhereInput!]
  OR: [TokenSubscriptionWhereInput!]
  NOT: [TokenSubscriptionWhereInput!]
}

input TokenUpdateInput {
  name: String
  secret: String
  auth: AuthUpdateOneRequiredWithoutTokenInput
  space: SpaceUpdateOneWithoutTokensInput
}

input TokenUpdateManyDataInput {
  name: String
  secret: String
}

input TokenUpdateManyMutationInput {
  name: String
  secret: String
}

input TokenUpdateManyWithoutAuthInput {
  create: [TokenCreateWithoutAuthInput!]
  delete: [TokenWhereUniqueInput!]
  connect: [TokenWhereUniqueInput!]
  set: [TokenWhereUniqueInput!]
  disconnect: [TokenWhereUniqueInput!]
  update: [TokenUpdateWithWhereUniqueWithoutAuthInput!]
  upsert: [TokenUpsertWithWhereUniqueWithoutAuthInput!]
  deleteMany: [TokenScalarWhereInput!]
  updateMany: [TokenUpdateManyWithWhereNestedInput!]
}

input TokenUpdateManyWithoutSpaceInput {
  create: [TokenCreateWithoutSpaceInput!]
  delete: [TokenWhereUniqueInput!]
  connect: [TokenWhereUniqueInput!]
  set: [TokenWhereUniqueInput!]
  disconnect: [TokenWhereUniqueInput!]
  update: [TokenUpdateWithWhereUniqueWithoutSpaceInput!]
  upsert: [TokenUpsertWithWhereUniqueWithoutSpaceInput!]
  deleteMany: [TokenScalarWhereInput!]
  updateMany: [TokenUpdateManyWithWhereNestedInput!]
}

input TokenUpdateManyWithWhereNestedInput {
  where: TokenScalarWhereInput!
  data: TokenUpdateManyDataInput!
}

input TokenUpdateWithoutAuthDataInput {
  name: String
  secret: String
  space: SpaceUpdateOneWithoutTokensInput
}

input TokenUpdateWithoutSpaceDataInput {
  name: String
  secret: String
  auth: AuthUpdateOneRequiredWithoutTokenInput
}

input TokenUpdateWithWhereUniqueWithoutAuthInput {
  where: TokenWhereUniqueInput!
  data: TokenUpdateWithoutAuthDataInput!
}

input TokenUpdateWithWhereUniqueWithoutSpaceInput {
  where: TokenWhereUniqueInput!
  data: TokenUpdateWithoutSpaceDataInput!
}

input TokenUpsertWithWhereUniqueWithoutAuthInput {
  where: TokenWhereUniqueInput!
  update: TokenUpdateWithoutAuthDataInput!
  create: TokenCreateWithoutAuthInput!
}

input TokenUpsertWithWhereUniqueWithoutSpaceInput {
  where: TokenWhereUniqueInput!
  update: TokenUpdateWithoutSpaceDataInput!
  create: TokenCreateWithoutSpaceInput!
}

input TokenWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  secret: String
  secret_not: String
  secret_in: [String!]
  secret_not_in: [String!]
  secret_lt: String
  secret_lte: String
  secret_gt: String
  secret_gte: String
  secret_contains: String
  secret_not_contains: String
  secret_starts_with: String
  secret_not_starts_with: String
  secret_ends_with: String
  secret_not_ends_with: String
  auth: AuthWhereInput
  space: SpaceWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [TokenWhereInput!]
  OR: [TokenWhereInput!]
  NOT: [TokenWhereInput!]
}

input TokenWhereUniqueInput {
  id: ID
  secret: String
}

type Trigger {
  id: ID!
  uuid: String
  name: String
  _unique_name: String
  type: String!
  source: TriggerSource!
  group: TriggerGroup
  options: Json
  request: Json
  meta: Json
  tag: String
  space: Space!
  service: Service!
  deployment: Deployment
  provider: Provider
  createdAt: DateTime!
  updatedAt: DateTime!
}

type TriggerConnection {
  pageInfo: PageInfo!
  edges: [TriggerEdge]!
  aggregate: AggregateTrigger!
}

input TriggerCreateInput {
  uuid: String
  name: String
  _unique_name: String
  type: String!
  source: TriggerSource!
  group: TriggerGroup
  options: Json
  request: Json
  meta: Json
  tag: String
  space: SpaceCreateOneWithoutTriggersInput!
  service: ServiceCreateOneWithoutTriggersInput!
  deployment: DeploymentCreateOneInput
  provider: ProviderCreateOneWithoutTriggersInput
}

input TriggerCreateManyWithoutProviderInput {
  create: [TriggerCreateWithoutProviderInput!]
  connect: [TriggerWhereUniqueInput!]
}

input TriggerCreateManyWithoutServiceInput {
  create: [TriggerCreateWithoutServiceInput!]
  connect: [TriggerWhereUniqueInput!]
}

input TriggerCreateManyWithoutSpaceInput {
  create: [TriggerCreateWithoutSpaceInput!]
  connect: [TriggerWhereUniqueInput!]
}

input TriggerCreateOneInput {
  create: TriggerCreateInput
  connect: TriggerWhereUniqueInput
}

input TriggerCreateWithoutProviderInput {
  uuid: String
  name: String
  _unique_name: String
  type: String!
  source: TriggerSource!
  group: TriggerGroup
  options: Json
  request: Json
  meta: Json
  tag: String
  space: SpaceCreateOneWithoutTriggersInput!
  service: ServiceCreateOneWithoutTriggersInput!
  deployment: DeploymentCreateOneInput
}

input TriggerCreateWithoutServiceInput {
  uuid: String
  name: String
  _unique_name: String
  type: String!
  source: TriggerSource!
  group: TriggerGroup
  options: Json
  request: Json
  meta: Json
  tag: String
  space: SpaceCreateOneWithoutTriggersInput!
  deployment: DeploymentCreateOneInput
  provider: ProviderCreateOneWithoutTriggersInput
}

input TriggerCreateWithoutSpaceInput {
  uuid: String
  name: String
  _unique_name: String
  type: String!
  source: TriggerSource!
  group: TriggerGroup
  options: Json
  request: Json
  meta: Json
  tag: String
  service: ServiceCreateOneWithoutTriggersInput!
  deployment: DeploymentCreateOneInput
  provider: ProviderCreateOneWithoutTriggersInput
}

type TriggerEdge {
  node: Trigger!
  cursor: String!
}

enum TriggerGroup {
  SCHEDULE
  APP
}

enum TriggerOrderByInput {
  id_ASC
  id_DESC
  uuid_ASC
  uuid_DESC
  name_ASC
  name_DESC
  _unique_name_ASC
  _unique_name_DESC
  type_ASC
  type_DESC
  source_ASC
  source_DESC
  group_ASC
  group_DESC
  options_ASC
  options_DESC
  request_ASC
  request_DESC
  meta_ASC
  meta_DESC
  tag_ASC
  tag_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type TriggerPreviousValues {
  id: ID!
  uuid: String
  name: String
  _unique_name: String
  type: String!
  source: TriggerSource!
  group: TriggerGroup
  options: Json
  request: Json
  meta: Json
  tag: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

input TriggerScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  uuid: String
  uuid_not: String
  uuid_in: [String!]
  uuid_not_in: [String!]
  uuid_lt: String
  uuid_lte: String
  uuid_gt: String
  uuid_gte: String
  uuid_contains: String
  uuid_not_contains: String
  uuid_starts_with: String
  uuid_not_starts_with: String
  uuid_ends_with: String
  uuid_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  _unique_name: String
  _unique_name_not: String
  _unique_name_in: [String!]
  _unique_name_not_in: [String!]
  _unique_name_lt: String
  _unique_name_lte: String
  _unique_name_gt: String
  _unique_name_gte: String
  _unique_name_contains: String
  _unique_name_not_contains: String
  _unique_name_starts_with: String
  _unique_name_not_starts_with: String
  _unique_name_ends_with: String
  _unique_name_not_ends_with: String
  type: String
  type_not: String
  type_in: [String!]
  type_not_in: [String!]
  type_lt: String
  type_lte: String
  type_gt: String
  type_gte: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  source: TriggerSource
  source_not: TriggerSource
  source_in: [TriggerSource!]
  source_not_in: [TriggerSource!]
  group: TriggerGroup
  group_not: TriggerGroup
  group_in: [TriggerGroup!]
  group_not_in: [TriggerGroup!]
  tag: String
  tag_not: String
  tag_in: [String!]
  tag_not_in: [String!]
  tag_lt: String
  tag_lte: String
  tag_gt: String
  tag_gte: String
  tag_contains: String
  tag_not_contains: String
  tag_starts_with: String
  tag_not_starts_with: String
  tag_ends_with: String
  tag_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [TriggerScalarWhereInput!]
  OR: [TriggerScalarWhereInput!]
  NOT: [TriggerScalarWhereInput!]
}

enum TriggerSource {
  API
  DEFINITION
}

type TriggerSubscriptionPayload {
  mutation: MutationType!
  node: Trigger
  updatedFields: [String!]
  previousValues: TriggerPreviousValues
}

input TriggerSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: TriggerWhereInput
  AND: [TriggerSubscriptionWhereInput!]
  OR: [TriggerSubscriptionWhereInput!]
  NOT: [TriggerSubscriptionWhereInput!]
}

input TriggerUpdateDataInput {
  uuid: String
  name: String
  _unique_name: String
  type: String
  source: TriggerSource
  group: TriggerGroup
  options: Json
  request: Json
  meta: Json
  tag: String
  space: SpaceUpdateOneRequiredWithoutTriggersInput
  service: ServiceUpdateOneRequiredWithoutTriggersInput
  deployment: DeploymentUpdateOneInput
  provider: ProviderUpdateOneWithoutTriggersInput
}

input TriggerUpdateInput {
  uuid: String
  name: String
  _unique_name: String
  type: String
  source: TriggerSource
  group: TriggerGroup
  options: Json
  request: Json
  meta: Json
  tag: String
  space: SpaceUpdateOneRequiredWithoutTriggersInput
  service: ServiceUpdateOneRequiredWithoutTriggersInput
  deployment: DeploymentUpdateOneInput
  provider: ProviderUpdateOneWithoutTriggersInput
}

input TriggerUpdateManyDataInput {
  uuid: String
  name: String
  _unique_name: String
  type: String
  source: TriggerSource
  group: TriggerGroup
  options: Json
  request: Json
  meta: Json
  tag: String
}

input TriggerUpdateManyMutationInput {
  uuid: String
  name: String
  _unique_name: String
  type: String
  source: TriggerSource
  group: TriggerGroup
  options: Json
  request: Json
  meta: Json
  tag: String
}

input TriggerUpdateManyWithoutProviderInput {
  create: [TriggerCreateWithoutProviderInput!]
  delete: [TriggerWhereUniqueInput!]
  connect: [TriggerWhereUniqueInput!]
  set: [TriggerWhereUniqueInput!]
  disconnect: [TriggerWhereUniqueInput!]
  update: [TriggerUpdateWithWhereUniqueWithoutProviderInput!]
  upsert: [TriggerUpsertWithWhereUniqueWithoutProviderInput!]
  deleteMany: [TriggerScalarWhereInput!]
  updateMany: [TriggerUpdateManyWithWhereNestedInput!]
}

input TriggerUpdateManyWithoutServiceInput {
  create: [TriggerCreateWithoutServiceInput!]
  delete: [TriggerWhereUniqueInput!]
  connect: [TriggerWhereUniqueInput!]
  set: [TriggerWhereUniqueInput!]
  disconnect: [TriggerWhereUniqueInput!]
  update: [TriggerUpdateWithWhereUniqueWithoutServiceInput!]
  upsert: [TriggerUpsertWithWhereUniqueWithoutServiceInput!]
  deleteMany: [TriggerScalarWhereInput!]
  updateMany: [TriggerUpdateManyWithWhereNestedInput!]
}

input TriggerUpdateManyWithoutSpaceInput {
  create: [TriggerCreateWithoutSpaceInput!]
  delete: [TriggerWhereUniqueInput!]
  connect: [TriggerWhereUniqueInput!]
  set: [TriggerWhereUniqueInput!]
  disconnect: [TriggerWhereUniqueInput!]
  update: [TriggerUpdateWithWhereUniqueWithoutSpaceInput!]
  upsert: [TriggerUpsertWithWhereUniqueWithoutSpaceInput!]
  deleteMany: [TriggerScalarWhereInput!]
  updateMany: [TriggerUpdateManyWithWhereNestedInput!]
}

input TriggerUpdateManyWithWhereNestedInput {
  where: TriggerScalarWhereInput!
  data: TriggerUpdateManyDataInput!
}

input TriggerUpdateOneInput {
  create: TriggerCreateInput
  update: TriggerUpdateDataInput
  upsert: TriggerUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: TriggerWhereUniqueInput
}

input TriggerUpdateWithoutProviderDataInput {
  uuid: String
  name: String
  _unique_name: String
  type: String
  source: TriggerSource
  group: TriggerGroup
  options: Json
  request: Json
  meta: Json
  tag: String
  space: SpaceUpdateOneRequiredWithoutTriggersInput
  service: ServiceUpdateOneRequiredWithoutTriggersInput
  deployment: DeploymentUpdateOneInput
}

input TriggerUpdateWithoutServiceDataInput {
  uuid: String
  name: String
  _unique_name: String
  type: String
  source: TriggerSource
  group: TriggerGroup
  options: Json
  request: Json
  meta: Json
  tag: String
  space: SpaceUpdateOneRequiredWithoutTriggersInput
  deployment: DeploymentUpdateOneInput
  provider: ProviderUpdateOneWithoutTriggersInput
}

input TriggerUpdateWithoutSpaceDataInput {
  uuid: String
  name: String
  _unique_name: String
  type: String
  source: TriggerSource
  group: TriggerGroup
  options: Json
  request: Json
  meta: Json
  tag: String
  service: ServiceUpdateOneRequiredWithoutTriggersInput
  deployment: DeploymentUpdateOneInput
  provider: ProviderUpdateOneWithoutTriggersInput
}

input TriggerUpdateWithWhereUniqueWithoutProviderInput {
  where: TriggerWhereUniqueInput!
  data: TriggerUpdateWithoutProviderDataInput!
}

input TriggerUpdateWithWhereUniqueWithoutServiceInput {
  where: TriggerWhereUniqueInput!
  data: TriggerUpdateWithoutServiceDataInput!
}

input TriggerUpdateWithWhereUniqueWithoutSpaceInput {
  where: TriggerWhereUniqueInput!
  data: TriggerUpdateWithoutSpaceDataInput!
}

input TriggerUpsertNestedInput {
  update: TriggerUpdateDataInput!
  create: TriggerCreateInput!
}

input TriggerUpsertWithWhereUniqueWithoutProviderInput {
  where: TriggerWhereUniqueInput!
  update: TriggerUpdateWithoutProviderDataInput!
  create: TriggerCreateWithoutProviderInput!
}

input TriggerUpsertWithWhereUniqueWithoutServiceInput {
  where: TriggerWhereUniqueInput!
  update: TriggerUpdateWithoutServiceDataInput!
  create: TriggerCreateWithoutServiceInput!
}

input TriggerUpsertWithWhereUniqueWithoutSpaceInput {
  where: TriggerWhereUniqueInput!
  update: TriggerUpdateWithoutSpaceDataInput!
  create: TriggerCreateWithoutSpaceInput!
}

input TriggerWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  uuid: String
  uuid_not: String
  uuid_in: [String!]
  uuid_not_in: [String!]
  uuid_lt: String
  uuid_lte: String
  uuid_gt: String
  uuid_gte: String
  uuid_contains: String
  uuid_not_contains: String
  uuid_starts_with: String
  uuid_not_starts_with: String
  uuid_ends_with: String
  uuid_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  _unique_name: String
  _unique_name_not: String
  _unique_name_in: [String!]
  _unique_name_not_in: [String!]
  _unique_name_lt: String
  _unique_name_lte: String
  _unique_name_gt: String
  _unique_name_gte: String
  _unique_name_contains: String
  _unique_name_not_contains: String
  _unique_name_starts_with: String
  _unique_name_not_starts_with: String
  _unique_name_ends_with: String
  _unique_name_not_ends_with: String
  type: String
  type_not: String
  type_in: [String!]
  type_not_in: [String!]
  type_lt: String
  type_lte: String
  type_gt: String
  type_gte: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  source: TriggerSource
  source_not: TriggerSource
  source_in: [TriggerSource!]
  source_not_in: [TriggerSource!]
  group: TriggerGroup
  group_not: TriggerGroup
  group_in: [TriggerGroup!]
  group_not_in: [TriggerGroup!]
  tag: String
  tag_not: String
  tag_in: [String!]
  tag_not_in: [String!]
  tag_lt: String
  tag_lte: String
  tag_gt: String
  tag_gte: String
  tag_contains: String
  tag_not_contains: String
  tag_starts_with: String
  tag_not_starts_with: String
  tag_ends_with: String
  tag_not_ends_with: String
  space: SpaceWhereInput
  service: ServiceWhereInput
  deployment: DeploymentWhereInput
  provider: ProviderWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [TriggerWhereInput!]
  OR: [TriggerWhereInput!]
  NOT: [TriggerWhereInput!]
}

input TriggerWhereUniqueInput {
  id: ID
  uuid: String
  _unique_name: String
}

type User {
  id: ID!
  name: String
  username: String
  email: String!
  password: String
  auth: Auth!
  verified: Boolean
  timezone: String
  notifications: Json
  status: UserStatus!
  admin: Boolean
  stripeId: String
  paymentCards(where: PaymentCardWhereInput, orderBy: PaymentCardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PaymentCard!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  name: String
  username: String
  email: String!
  password: String
  auth: AuthCreateOneWithoutUserInput!
  verified: Boolean
  timezone: String
  notifications: Json
  status: UserStatus!
  admin: Boolean
  stripeId: String
  paymentCards: PaymentCardCreateManyWithoutUserInput
}

input UserCreateOneWithoutAuthInput {
  create: UserCreateWithoutAuthInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutPaymentCardsInput {
  create: UserCreateWithoutPaymentCardsInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutAuthInput {
  name: String
  username: String
  email: String!
  password: String
  verified: Boolean
  timezone: String
  notifications: Json
  status: UserStatus!
  admin: Boolean
  stripeId: String
  paymentCards: PaymentCardCreateManyWithoutUserInput
}

input UserCreateWithoutPaymentCardsInput {
  name: String
  username: String
  email: String!
  password: String
  auth: AuthCreateOneWithoutUserInput!
  verified: Boolean
  timezone: String
  notifications: Json
  status: UserStatus!
  admin: Boolean
  stripeId: String
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  username_ASC
  username_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  verified_ASC
  verified_DESC
  timezone_ASC
  timezone_DESC
  notifications_ASC
  notifications_DESC
  status_ASC
  status_DESC
  admin_ASC
  admin_DESC
  stripeId_ASC
  stripeId_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type UserPreviousValues {
  id: ID!
  name: String
  username: String
  email: String!
  password: String
  verified: Boolean
  timezone: String
  notifications: Json
  status: UserStatus!
  admin: Boolean
  stripeId: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum UserStatus {
  ACTIVE
  INACTIVE
  PENDING
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserWhereInput
  AND: [UserSubscriptionWhereInput!]
  OR: [UserSubscriptionWhereInput!]
  NOT: [UserSubscriptionWhereInput!]
}

input UserUpdateInput {
  name: String
  username: String
  email: String
  password: String
  auth: AuthUpdateOneRequiredWithoutUserInput
  verified: Boolean
  timezone: String
  notifications: Json
  status: UserStatus
  admin: Boolean
  stripeId: String
  paymentCards: PaymentCardUpdateManyWithoutUserInput
}

input UserUpdateManyMutationInput {
  name: String
  username: String
  email: String
  password: String
  verified: Boolean
  timezone: String
  notifications: Json
  status: UserStatus
  admin: Boolean
  stripeId: String
}

input UserUpdateOneRequiredWithoutPaymentCardsInput {
  create: UserCreateWithoutPaymentCardsInput
  update: UserUpdateWithoutPaymentCardsDataInput
  upsert: UserUpsertWithoutPaymentCardsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutAuthInput {
  create: UserCreateWithoutAuthInput
  update: UserUpdateWithoutAuthDataInput
  upsert: UserUpsertWithoutAuthInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateWithoutAuthDataInput {
  name: String
  username: String
  email: String
  password: String
  verified: Boolean
  timezone: String
  notifications: Json
  status: UserStatus
  admin: Boolean
  stripeId: String
  paymentCards: PaymentCardUpdateManyWithoutUserInput
}

input UserUpdateWithoutPaymentCardsDataInput {
  name: String
  username: String
  email: String
  password: String
  auth: AuthUpdateOneRequiredWithoutUserInput
  verified: Boolean
  timezone: String
  notifications: Json
  status: UserStatus
  admin: Boolean
  stripeId: String
}

input UserUpsertWithoutAuthInput {
  update: UserUpdateWithoutAuthDataInput!
  create: UserCreateWithoutAuthInput!
}

input UserUpsertWithoutPaymentCardsInput {
  update: UserUpdateWithoutPaymentCardsDataInput!
  create: UserCreateWithoutPaymentCardsInput!
}

input UserWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  username: String
  username_not: String
  username_in: [String!]
  username_not_in: [String!]
  username_lt: String
  username_lte: String
  username_gt: String
  username_gte: String
  username_contains: String
  username_not_contains: String
  username_starts_with: String
  username_not_starts_with: String
  username_ends_with: String
  username_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  auth: AuthWhereInput
  verified: Boolean
  verified_not: Boolean
  timezone: String
  timezone_not: String
  timezone_in: [String!]
  timezone_not_in: [String!]
  timezone_lt: String
  timezone_lte: String
  timezone_gt: String
  timezone_gte: String
  timezone_contains: String
  timezone_not_contains: String
  timezone_starts_with: String
  timezone_not_starts_with: String
  timezone_ends_with: String
  timezone_not_ends_with: String
  status: UserStatus
  status_not: UserStatus
  status_in: [UserStatus!]
  status_not_in: [UserStatus!]
  admin: Boolean
  admin_not: Boolean
  stripeId: String
  stripeId_not: String
  stripeId_in: [String!]
  stripeId_not_in: [String!]
  stripeId_lt: String
  stripeId_lte: String
  stripeId_gt: String
  stripeId_gte: String
  stripeId_contains: String
  stripeId_not_contains: String
  stripeId_starts_with: String
  stripeId_not_starts_with: String
  stripeId_ends_with: String
  stripeId_not_ends_with: String
  paymentCards_every: PaymentCardWhereInput
  paymentCards_some: PaymentCardWhereInput
  paymentCards_none: PaymentCardWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
}

input UserWhereUniqueInput {
  id: ID
  username: String
  email: String
  stripeId: String
}

type Variable {
  id: ID!
  name: String!
  _unique_name: String!
  value: String!
  secret: Boolean
  space: Space!
  events(where: EventWhereInput, orderBy: EventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Event!]
  updatedAt: DateTime!
}

type VariableConnection {
  pageInfo: PageInfo!
  edges: [VariableEdge]!
  aggregate: AggregateVariable!
}

input VariableCreateInput {
  name: String!
  _unique_name: String!
  value: String!
  secret: Boolean
  space: SpaceCreateOneWithoutVariablesInput!
  events: EventCreateManyWithoutVariableInput
}

input VariableCreateManyWithoutSpaceInput {
  create: [VariableCreateWithoutSpaceInput!]
  connect: [VariableWhereUniqueInput!]
}

input VariableCreateOneWithoutEventsInput {
  create: VariableCreateWithoutEventsInput
  connect: VariableWhereUniqueInput
}

input VariableCreateWithoutEventsInput {
  name: String!
  _unique_name: String!
  value: String!
  secret: Boolean
  space: SpaceCreateOneWithoutVariablesInput!
}

input VariableCreateWithoutSpaceInput {
  name: String!
  _unique_name: String!
  value: String!
  secret: Boolean
  events: EventCreateManyWithoutVariableInput
}

type VariableEdge {
  node: Variable!
  cursor: String!
}

enum VariableOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  _unique_name_ASC
  _unique_name_DESC
  value_ASC
  value_DESC
  secret_ASC
  secret_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type VariablePreviousValues {
  id: ID!
  name: String!
  _unique_name: String!
  value: String!
  secret: Boolean
  updatedAt: DateTime!
}

input VariableScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  _unique_name: String
  _unique_name_not: String
  _unique_name_in: [String!]
  _unique_name_not_in: [String!]
  _unique_name_lt: String
  _unique_name_lte: String
  _unique_name_gt: String
  _unique_name_gte: String
  _unique_name_contains: String
  _unique_name_not_contains: String
  _unique_name_starts_with: String
  _unique_name_not_starts_with: String
  _unique_name_ends_with: String
  _unique_name_not_ends_with: String
  value: String
  value_not: String
  value_in: [String!]
  value_not_in: [String!]
  value_lt: String
  value_lte: String
  value_gt: String
  value_gte: String
  value_contains: String
  value_not_contains: String
  value_starts_with: String
  value_not_starts_with: String
  value_ends_with: String
  value_not_ends_with: String
  secret: Boolean
  secret_not: Boolean
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [VariableScalarWhereInput!]
  OR: [VariableScalarWhereInput!]
  NOT: [VariableScalarWhereInput!]
}

type VariableSubscriptionPayload {
  mutation: MutationType!
  node: Variable
  updatedFields: [String!]
  previousValues: VariablePreviousValues
}

input VariableSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: VariableWhereInput
  AND: [VariableSubscriptionWhereInput!]
  OR: [VariableSubscriptionWhereInput!]
  NOT: [VariableSubscriptionWhereInput!]
}

input VariableUpdateInput {
  name: String
  _unique_name: String
  value: String
  secret: Boolean
  space: SpaceUpdateOneRequiredWithoutVariablesInput
  events: EventUpdateManyWithoutVariableInput
}

input VariableUpdateManyDataInput {
  name: String
  _unique_name: String
  value: String
  secret: Boolean
}

input VariableUpdateManyMutationInput {
  name: String
  _unique_name: String
  value: String
  secret: Boolean
}

input VariableUpdateManyWithoutSpaceInput {
  create: [VariableCreateWithoutSpaceInput!]
  delete: [VariableWhereUniqueInput!]
  connect: [VariableWhereUniqueInput!]
  set: [VariableWhereUniqueInput!]
  disconnect: [VariableWhereUniqueInput!]
  update: [VariableUpdateWithWhereUniqueWithoutSpaceInput!]
  upsert: [VariableUpsertWithWhereUniqueWithoutSpaceInput!]
  deleteMany: [VariableScalarWhereInput!]
  updateMany: [VariableUpdateManyWithWhereNestedInput!]
}

input VariableUpdateManyWithWhereNestedInput {
  where: VariableScalarWhereInput!
  data: VariableUpdateManyDataInput!
}

input VariableUpdateOneWithoutEventsInput {
  create: VariableCreateWithoutEventsInput
  update: VariableUpdateWithoutEventsDataInput
  upsert: VariableUpsertWithoutEventsInput
  delete: Boolean
  disconnect: Boolean
  connect: VariableWhereUniqueInput
}

input VariableUpdateWithoutEventsDataInput {
  name: String
  _unique_name: String
  value: String
  secret: Boolean
  space: SpaceUpdateOneRequiredWithoutVariablesInput
}

input VariableUpdateWithoutSpaceDataInput {
  name: String
  _unique_name: String
  value: String
  secret: Boolean
  events: EventUpdateManyWithoutVariableInput
}

input VariableUpdateWithWhereUniqueWithoutSpaceInput {
  where: VariableWhereUniqueInput!
  data: VariableUpdateWithoutSpaceDataInput!
}

input VariableUpsertWithoutEventsInput {
  update: VariableUpdateWithoutEventsDataInput!
  create: VariableCreateWithoutEventsInput!
}

input VariableUpsertWithWhereUniqueWithoutSpaceInput {
  where: VariableWhereUniqueInput!
  update: VariableUpdateWithoutSpaceDataInput!
  create: VariableCreateWithoutSpaceInput!
}

input VariableWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  _unique_name: String
  _unique_name_not: String
  _unique_name_in: [String!]
  _unique_name_not_in: [String!]
  _unique_name_lt: String
  _unique_name_lte: String
  _unique_name_gt: String
  _unique_name_gte: String
  _unique_name_contains: String
  _unique_name_not_contains: String
  _unique_name_starts_with: String
  _unique_name_not_starts_with: String
  _unique_name_ends_with: String
  _unique_name_not_ends_with: String
  value: String
  value_not: String
  value_in: [String!]
  value_not_in: [String!]
  value_lt: String
  value_lte: String
  value_gt: String
  value_gte: String
  value_contains: String
  value_not_contains: String
  value_starts_with: String
  value_not_starts_with: String
  value_ends_with: String
  value_not_ends_with: String
  secret: Boolean
  secret_not: Boolean
  space: SpaceWhereInput
  events_every: EventWhereInput
  events_some: EventWhereInput
  events_none: EventWhereInput
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [VariableWhereInput!]
  OR: [VariableWhereInput!]
  NOT: [VariableWhereInput!]
}

input VariableWhereUniqueInput {
  id: ID
  _unique_name: String
}
